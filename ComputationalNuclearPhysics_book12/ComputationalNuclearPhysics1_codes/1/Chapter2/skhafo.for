C-----HAFOMN------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      PROGRAM HAFOMN
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C       KG1   = MAX.NUMBER OF GRID POINTS
C       KGR2  = 2 * KG1
C       KNMX  = MAX. NUMBER OF RADIAL NODES
C       KJMX  = MAX. NUMBER OF JS
C       KNMXP = KNMX+1
C       KX11  = SIZE OF WF-FIELD = KG1 * KSL2
C       KSLM  = MAX. OCCURING OSCILLATOR SHELL
C       KSL2  = MAX. NUMBER OF STATES (PROT. + NEUT.)
C       KQMAX = MAXIMUM OF GRID POINTS FOR FORMFACTOR
C       KMAXP = MAX.NUMBER OF PROTON SHELLS
C       KMAXN = MAX.NUMBER OF NEUTRON SHELLS
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     PROGRAM HAFOMN:
C      DIRECT ENTRY TO THE SKYRME-HARTREE-FOCK PACKAGE. SETS DEFAULTS,
C      READS PARAMETERS AND CALLS THE PACKAGE VIA 'HAFOSU'.
C
C************** SAMPLE INPUT: FILE 05  ***************************
C
C 0,                                           IWUNIT          "FIT Z-si
C ,,                                           NGRID,RSTEP
C ,,                                           IWR,IFPLOT
C ,,,,,                                        ITMAX,DABR,DABE,ITPR,EPSP
C ,,,                                          XODAMP,E0DAMP,ADDNEW
C 1,1,1,0,0,                                   IF:EX,TM,ZPE,DFMS,RHOC
C -1983.76,362.252,-104.27,11861.4,123.69,     T0,T1,T2,T3,T4
C  1.1717,0.,0.,1.7620,                        X0,X1,X2,X3
C 0.25,1.0,,,                                  POWER,ACOUL,PAIRFP,PAIRFN
C 82,126,,,                                    NPROT,NNEUT,NMAXP,NMAXN
C 0,                                           IWUNIT          "Skyrme M
C 00,0.3,                                      NGRID,RSTEP
C -1,0,                                        IWR,IFPLOT
C 80,0.0001,0.0001,4,0.0001,                   ITMAX,DABR,DABE,ITPR,EPSP
C 0.0,40.0,0.5,                                XODAMP,E0DAMP,ADDNEW
C 1,1,1,0,0,,                                  IF:EX,TM,ZPE,DFMS,RHOC
C -2645.0,410.0,-135.0,15595.0,130.0,          T0,T1,T2,T3,T4
C 0.09,0.,0.,0.0,                              X0,X1,X2,X3
C 0.16666667,1.0,-1.1E11,-1.1E11,              POWER,ACOUL,GAPP,GAPN
C 50,74,00,00,                                 NPROT,NNEUT,NMAXP,NMAXN
C 0,                                           IWUNIT          "Skyrme 3
C 00,0.3,                                      NGRID,RSTEP
C -1,2,                                        IWR,IFPLOT
C 80,0.00001,0.00001,4,,                       ITMAX,DABR,DABE,ITPR,EPSP
C 1.00,40.0,0.5,                               XODAMP,E0DAMP,ADDNEW
C 1,0,0,0,0,                                   IF:EX,TM,ZPE,DFMS,RHOC
C -1128.75,395.0,-95.0,14000.0,120.0,          T0,T1,T2,T3,T4
C 0.45,0.,0.,1.0,                              X0,X1,X2,X3
C 1.0,1.0,0.0,0.0,                             POWER,ACOUL,GAPP,GAPN
C 08,09,03,04,                                 NPROT,NNEUT,NMAXP,NMAXN
C 1,1,1,                                       WEIGHT(PROTONS)
C 1,1,1,.16666667,                             WEIGHT(NEUTRONS)
C -1,                                          TO STOP
C
C******************************************************************
C
C CONTAINS PARAMETERS FOR OPTIONS AND NUMERICAL PROCEDURES.
C
C PARAMETERS FOR THE HARTREE-FOCK PART:
C
C      DABR   = DESIRED RELATIVE ERROR IN RADIUS
C      DABE   = DESIRED RELATIVE ERROR IN ENERGY
C      ADDNEW = WEIGHT OF THE NEW WAVE FUNCTION IN MIXING OF
C               WAVE FUNCTIONS TO THE NEW ONE, VALUE BETWEEN 0 AND 1.
C      EPSPR  = END CONDITION FOR PAIRING
C      X0DAMP = SIZE OF GRADIENT STEP KINETIC ENERGY DAMPING.
C               AND SWITCH FOR THE STEP.
C               SWITCH: 'X0DAMP'=0 --> DAMPING BY DIRECT H-INVERSION
C                       'X0DAMP'>0 --> KINETIC ENERGY DAMPING
C      E0DAMP = ENERGY PARAMETER FOR KINETIC ENERGY DAMPING
C      IFEX   = 1 --> COULOMB EXCHANGE ENERGY IN LOCAL DENSITY APPROXIMA
C                     IS INCLUDED
C      IFTM   = 1 --> 'T1-T2'-TERM IN SPIN-ORBIT FORCE IS INCLUDED
C      IFDFMS = 1 --> DIFFERENT MASS FOR NEUTRON AND PROTON
C               0 --> SAME MASS FOR PROTON AND NEUTRON,
C                     HBAR**2/2M = 20.7525 MEV*FM**2
C      IFZPE  = 1 --> ZERO-POINT ENERGY CORRECTION IS COMPUTED AS
C                     <P**2>/(2AM)
C               0 --> ZERO-POINT ENERGY IS APPROXIMATED BY THE EFFECTIVE
C                     MASS TRICK  M ==> M*(1-1/A)
C      IFRHOC = SWITCH FOR CHARGE- OR PROTON-DENSITY IN COULOMB ENERGY:
C                0 --> PROTON-DENSITY IS USED FOR COULOMB POTENTIAL
C                1 --> CHARGE-DENSITY IS USED FOR COULOMB POTENTIAL
C      ITMAX  = MAXIMUM NUMBER OF HARTREE-FOCK ITERATIONS
C      ITPR   = 'ABS(ITPR)' IS MAXIMUM NUMBER OF PAIRING ITERATIONS,
C               'ITPR'<0 --> CONSTANT GAP APPROACH
C               'ITPR'>0 --> CONSTANT FORCE APPROACH
C      IWR    = PRINT LEVEL (-2,-1,0,+1)
C      IFPLOT = 1 --> COMPRESSED INFORMATION ON FILE 11,
C                     E.G. FOR PLOTTING
C
       COMMON /NUMPAR/ DABR,DABE,ADDNEW,EPSPR,X0DAMP,E0DAMP,
     &                 IFEX,IFTM,IFDFMS,IFZPE,IFRHOC,
     &                 ITMAX,ITPR,IWR,IFPLOT
C
C     THE ARRAYS IN THE COMMON /GRID/ MEAN:
C      ZENTRF  = ZENTRIFUGAL FORCE = 1/R**2 ALONG GRID
C      RINVS   = INVERSE R = 1/R ALONG GRID
C      RSQUAR  = R**2 ALONG GRID
C     THE VARIABLES IN THE COMMON /GRID/ MEAN:
C      RSTEP   = DISTANCE BETWEEN GRID POINTS IN FM ( IS INPUT PARAMETER
C      RLENG   = TOTAL LENGTH OF THE BOX ( = (NGRID-1)*RSTEP )
C      DELQ    = GRID STEP IN FOURIER (MOMENTUM) SPACE
C      FRPIRS  = 4*'PI'*'RSTEP' , USED AS VOLUME ELEMENT FOR INTEGRATION
C      NGRID   = NUMBER OF GRID POINTS ( IS INPUT PARAMETER )
C      IQMAX   = NUMBER OF GRID POINTS IN FOURIER SPACE
C      NGRIDP  = 'NGRID'+1
C      NGRID2  = 2*'NGRID'
C
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
C
C      THE VARIABLES IN COMMON /SKYPAR/ MEAN:
C       T0-T4 & X0-X3  = PARAMETERS FOR THE SKYRME FORCE, STANDARD PART
C       POWER          = POWER OF DENSITY DEPENDENCE
C       PAIRFP         = PARAMETER FOR PROTON PAIRING FORCE
C       PAIRFN         = PARAMETER FOR NEUTRON PAIRING FORCE
C       ACOUL          = FRACTIONAL CHARGE FOR PROTONS (USUALLY 1.0)
C       T0A....T3BS    = FREQUENTLY OCCURING COMBINATIONS OF THE
C                        GIVEN FORCE PARAMETERS
C       AMFC           = HBAR**2/(2*NUCLEON_MASS) FOR PROTON OR NEUTRON
C       GPP/GPN        = STRENGTH OF PAIRING FORCE
C       DELTP/DELTN    = PAIRING GAP IN MEV
C       IFPAIR         = SIGNALS WHETHER THE PROTONS OR NEUTRONS NEED PA
C
       COMMON /SKYPAR/ T0,T1,T2,T3,T4,X0,X1,X2,X3, POWER,
     &                 PAIRFP,PAIRFN,      ACOUL,
     &                 T0A,T0B,T3A,T3B, T1P2,T1M2,T13M2,T1P23,
     &                 T13M23,T1P2X,T1M2X,T4H,T3AS,T3ASP,T3BS,
     &                 AMFC(2),
     &                 GPP,GPN,DELTP,DELTN,     IFPAIR(2)
C
C     THE BLOCK CARRIES INFORMATION ON THE S.P. WAVE FUNCTIONS,
C     ON THE POTENTIALS AND ON THE VARIOUS DENSITIES.
C     THE ARRAYS MEAN:
C      WF      = WAVE FUNCTIONS, ORDERED IN SLICES OF LENGTH 'NGRID'
C                IN OSCILLATOR SHELL MODEL ORDERING. THE FIELD
C                POINTER 'NPLA' IS CARRIED IN COMMON /SHELLS/
C                ANF COMPUTED IN ROUTINE 'INITGR'.
C      WFS     = DERIVATIVE OF THE WAVE FUNCTIONS
C      BMASS   = INVERSE EFFECTIVE MASS
C      POT     = POTENTIAL
C      POTLS   = SPIN-ORBIT POTENTIAL
C      D1B     = WORK SPACE FOR DERIVATIVE OF EFFECTIVE MASS
C      RHO     = DENSITY
C      TAU     = KINETIC ENERGY DENSITY
C      SJ      = SPIN-ORBIT DENSITY
C      SJS     = DERIVATIVE OF SPIN-ORBIT DENSITY
C      D2R     = 2. DERIVATIVE OF DENSITY
C      D1R     = 1. DERIVATIVE OF DENSITY
C      AUX1    = WORKSPACE
C      AUX2    = WORKSPACE
C     ALL POTENTIALS AND DENSITIES STORE INFORMATION FOR PROTONS
C     IN THE PLACES [1..'NGRID'] AND FOR NEUTRONS IN THE PLACES
C     ['NGRID'+1...2*'NGRID'].
C
      COMMON /WAVFUN/ WF(KX11),WFS(KX11),
     &                BMASS(KGR2),POT(KGR2),POTLS(KGR2),D1B(KGR2),
     &                RHO(KGR2),
     &                TAU(KGR2),SJ(KGR2),SJS(KGR2),D2R(KGR2),D1R(KGR2),
     &                AUX1(KG1),AUX2(KG1)
C
C     THE VARIABLES AND ARRAYS IN COMMON /SHELL/ MEAN:
C      WEIGHT   = OCCUPATION WEIGHT FOR THE S.P. STATES
C      WLS      = SPIN-ORBIT SPLITTING FOR THE S.P. STATES
C      APROT    = PROTON NUMBER (AS REAL NUMBER)
C      ANEUT    = NEUTRON NUMBER (AS REAL NUMBER)
C      ANUMB    = TOTAL NUCLEON NUMBER (AS REAL NUMBER)
C      EFEP/N   = FERMI ENERGY FOR PROTONS OR NEUTRONS
C      JSP      = COMBINED 'JS'-QUANTUM NUMBER OFR OSCILLATOR STATE NR.
C      JSMAX    = MAXIMUM 'JS' FOR PROTONS OR NEUTRONS
C      NPLA     = POINTER FIELD FOR WAVE FUNCTIONS (SEE ROUTINE 'INITGR'
C      NPROT    = PROTON NUMBER (AS INTEGER NUMBER) ( IS INPUT PARAMETER
C      NNEUT    = NEUTRON NUMBER (AS INTEGER NUMBER) ( IS INPUT PARAMETE
C      NNUMB    = TOTAL NUCLEON NUMBER (AS INTEGER NUMBER)
C      NMAXP    = MAXIMUM NUMBER OF PROTON STATES ( IS INPUT PARAMETER )
C      NMAXN    = MAXIMUM NUMBER OF NEUTRON STATES ( IS INPUT PARAMETER
C      NMINN    = POINTER TO FIRST NEUTRON STATE IN 'WEIGHT' ETC
C      NMAXTO   = TOTAL NUMBER OF STATES
C
      COMMON /SHELLS/ WEIGHT(KSL2),WLS(19),
     &                APROT,ANEUT,ANUMB,EFEP,EFEN,
     &                JSP(46),JSMAX(2),NPLA(KNMXP,KJMX2),
     &                NPROT,NNEUT,NNUMB,NMAXP,NMAXN,NMINN,NMAXTO
C
C      THE VARIABLES AND ARRAYS IN COMMON /RESULT/ MEAN:
C       HPSIWID = ARRAY FOR THE ENERGY-FLUCTUATION OF THE S.P. STATES
C       SPENRG  = ARRAY FOR THE SINGLE PARTICLE ENERGIES
C       FORMF   = ARRAY FOR THE CHARGE FORMFACTOR (I.E. IN MOMENTUM SPAC
C       RHOCHR  = ARRAY FOR THE CHARGE DENSITY (IN COORDINATE SPACE)
C       RMS..   = ROOT-MEAN-SQUARE RADIUS OF THE ..-DENSITY;
C                 THE .. ARISE AS
C                   "BLANK"  = TOTAL NUCLEON DENSITY
C                   C        = CHARGE DENSITY WITH ALL FOLDINGS
C                   C0       = AS 'C' BUT WITHOUT MAGNETIC FORMFACTOR
C                              FOR THE NUCLEONS
C                   P        = PROTON DENSITY
C                   N        = NEUTRON DENSITY
C       RDMS..  = DIFFRACTION RADIUS DETERMINED FROM THE FIRST ZERO
C                 IN THE FORMFACTOR, FOR THE ..-DENSITY (AS ABOVE)
C       SURF..  = SURFACE WITDTH FOR THE ..-DENSITY (AS ABOVE)
C       ETOTAL  = TOTAL ENERGY
C       ESHL    = SHELL ENERGY FOR PROTONS OR NEUTRONS
C       ENREAR  = REARRANGEMENT ENERGY (FROM DENS.DEP. INTERACTION)
C       EPAIR   = PAIRING ENERGY
C       ZPE     = ZERO-POINT ENERGY
C
       COMMON /RESULT/ HPSWID(KSL2),SPENRG(KSL2),
     &                 FORMF(KQMAX),RHOCHR(KG1),
     &                 RMS,RMSC,RMSP,RMSN,RDMS,RDMSC,RDMSP,RDMSN,
     &                 SURF,SURFC,SURFP,SURFN,RMSC0,RDMSC0,SURFC0,
     &                 ETOTAL,ESHL(2),ENREAR,EPAIR,ZPE
C
C     WORKSPACE FOR SOLVING THE LAPLACE EQUATION, SEE ROUTINE 'INVERT'
C     FOR FURTHER EXPLANATION.
C     THIS WORKSPACE IS SOMETIMES ABUSED AS GENERAL WORKSPACE IN OTHER
C     PARTS OF THE PACKAGE.
C
      COMMON /POTINV/ UMIN,POTL(KG1),SQB(KG1),D2B(KG1),
     &                SQM(KG1),POTEFF(KG1),AINV(KG1),BINV(KG1)
C     SOME CONSTANT WHICH OCCUR FREQUENTLY:
C      PI     = 3.141592654 = AREA OF THE UNIT CIRCLE
C      SQ2    = SQUARE ROOT OF 2.0
C      FOURPI = 4*PI = 12.56637061
C      D4PI   = 1.0/(4*PI)
C      SQFRPI = SQUARE ROOT OF 4*PI
C      XSMALL = VERY SMALL NUMBER ( 1.0E-20 )
C      ZERO   = 0.0
C      ONE    = 1.0
C      HALF   = 0.5
C
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
C-----------------------------------------------------------------------
C
C     OPEN FILE 'FOR005' FOR INPUT DATA
C
      OPEN(UNIT=05,STATUS='OLD',FILE='FOR005')
C
C     READ SWITCH 'IWUNIT' AND OPEN OUTPUT UNIT ACCORDINGLY:
C      IWUNIT =  1  -->  OUTPUT TO TERMINAL (UNIT 'CON' AT THE PC)
C      IWUNIT =  0  -->  OUTPUT TO FILE 'FOR006'
C      IWUNIT = -1  -->  STOP THE PROGRAM
C     NOTE: THE PROGRAM ALLOWS TO CHANGE THE OUTPUT DEVICE BETWEEN
C           DIFFERENT DATA SETS. BUT THE FILE 'FOR006' CANNOT BE
C           REOPENED AFTER IT HAS BEEN CLOSED.
C
       IWUOLD = -1
       IWWARN = 0
       DO 1000 IREP=1,999
       READ(05,*,ERR=1001,END=1001)   IWUNIT
       IF(IWUNIT.LT.0) STOP
       IF(IWUNIT.NE.IWUOLD) THEN
        IF(IWUOLD.NE.-1) THEN
         CLOSE(UNIT=06)
         IF(IWUOLD.EQ.0) IWWARN = IWWARN+1
        ENDIF
        IF(IWUNIT.EQ.0) THEN
         IF(IWWARN.GT.0) STOP ' YOU SHOULD NOT OPEN FILE FOR006 TWICE'
         OPEN(UNIT=06,FILE='FOR006',STATUS='UNKNOWN')
        ELSE
         OPEN(UNIT=06,FILE='CON')
        ENDIF
       ENDIF
       IWUOLD=IWUNIT
C
C      REFRESH DEFAULT SETTINGS
C
       NGRID  = 0
       RSTEP  = 0.3
       IWR    = -1
       IFPLOT = 0
       ITMAX  = 80
       DABR   = 0.0001
       DABE   = 0.0001
       ITPR   = 4
       EPSPR  = 0.0001
       X0DAMP = ZERO
       E0DAMP = 50.0
       ADDNEW = 0.5
       ACOUL  = ONE
       PAIRFP = -1.E10
       PAIRFN = -1.E10
       NMAXP  = 0
       NMAXN  = 0
C
C      READ ALL DATA
C
       READ(05,*,ERR=1001,END=1001)   NGRID,RSTEP
       READ(05,*)  IWR,IFPLOT
       READ(05,*)  ITMAX,DABR,DABE,ITPR,EPSPR
       READ(05,*)  X0DAMP,E0DAMP,ADDNEW
       READ(05,*)  IFEX,IFTM,IFZPE,IFDFMS,IFRHOC
       READ(05,*)     T0,T1,T2,T3,T4
       READ(05,*)     X0,X1,X2,X3
       READ(05,*)     POWER,ACOUL,PAIRFP,PAIRFN
       READ(05,*)     NPROT,NNEUT,NMAXP,NMAXN
       IF(PAIRFP.EQ.ZERO) THEN
        IF(NMAXP*NMAXN.EQ.0) STOP
     &  ' NMAXP AND NMAXN MUST BE GIVEN EXPLICITELY IN CASE OF PAIRFP=0'
        READ(5,*) (WEIGHT(NSHL),NSHL=1,NMAXP)
       ENDIF
       IF(PAIRFN.EQ.ZERO) THEN
        IF(NMAXP*NMAXN.EQ.0) STOP
     &  ' NMAXP AND NMAXN MUST BE GIVEN EXPLICITELY IN CASE OF PAIRFN=0'
        READ(5,*) (WEIGHT(NSHL),NSHL=NMAXP+1,NMAXP+NMAXN)
       ENDIF
C
C      RUN THE HARTREE-FOCK PACKAGE
C
       CALL HAFOSU
C
 1000  CONTINUE
C
 1001  STOP
       END
C-----BLOCK ------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      BLOCKDATA  BLOCK
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
       COMMON /NUMPAR/ DABR,DABE,ADDNEW,EPSPR,X0DAMP,E0DAMP,
     &                 IFEX,IFTM,IFDFMS,IFZPE,IFRHOC,
     &                 ITMAX,ITPR,IWR,IFPLOT
      COMMON /WAVFUN/ WF(KX11),WFS(KX11),
     &                BMASS(KGR2),POT(KGR2),POTLS(KGR2),D1B(KGR2),
     &                RHO(KGR2),
     &                TAU(KGR2),SJ(KGR2),SJS(KGR2),D2R(KGR2),D1R(KGR2),
     &                AUX1(KG1),AUX2(KG1)
      COMMON /SHELLS/ WEIGHT(KSL2),WLS(19),
     &                APROT,ANEUT,ANUMB,EFEP,EFEN,
     &                JSP(46),JSMAX(2),NPLA(KNMXP,KJMX2),
     &                NPROT,NNEUT,NNUMB,NMAXP,NMAXN,NMINN,NMAXTO
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
C-----------------------------------------------------------------------
C
C     DATA IN COMMON /NUMPAR/
C
      DATA IFEX,IFTM,IFZPE,IFDFMS,IFRHOC
     &    /   1,   1,    1,     0,     0/
C
C     DATA IN COMMON /SHELLS/
C
      DATA JSP/1,3,2,5,4,1,7,6,3,2,9,8,5,4,1,11,10,7,6,3,2,13,12,9,8,
     &         5,4,1,15,14,11,10,7,6,3,2,17,16,13,12,9,8,5,4,1,19/
      DATA WLS/0.,-2.,1.,-3.,2.,-4.,3.,-5.,4.,-6.,5.,-7.,6.,-8.,7.,
     *         -9.,8.,-10.,9./
C
C     DATA FOR COMMON /CONSTN/
C
      DATA PI,         SQ2,        SQFRPI,     D4PI
     *    /3.141592653,1.414213562,3.544907702,.0795774155/
      DATA       FOURPI,  XSMALL,  HALF, ZERO,  ONE
     *    / 12.56637061, 1.0E-20,   0.5,  0.0,  1.0/
C
       END
C-----HAFOSU------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE HAFOSU
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     * * * * * * *    SKYRME-HARTREE-FOCK WITH PAIRING    * * * * * * *
C
C     SOLUTION OF THE SPHERICAL HARTREE-FOCK EQUATIONS WITH SCHEMATIC
C     PAIRING FOR THE OCCUPATION PROBABILITIES IN OPEN SHELL NUCLEI.
C
C     INPUT PARAMETERS VIA COMMON /GRID/:
C      RSTEP  = RADIAL GRID SIZE (IN FM).
C               RECOMMENDED AND PREOCCUPIED IS 0.3FM.
C      NGRID  = NUMBER OF RADIAL GRID POINTS. IF NGRID=0 IS GIVEN
C               THEN THE PROGRAM DETERMINES A VALUE WHICH IS
C               OPTIMAL IN MOST CASES.
C
C     INPUT PARAMETERS VIA COMMON /SHELLS/:
C      NPROT  = NUMBER OF PROTONS
C      NNEUT  = NUMBER OF NEUTRONS
C      NMAXP  = NUMBER OF PROTON SHELLS
C      NMAXN  = NUMBER OF NEUTRON SHELLS
C               (NOTE THAT THE SHELLS ARE COUNTED IN THE ORDERING
C                OF THE HARMONIC OSCILLATOR SHELL MODEL.)
C
C     INPUT PARAMETERS VIA COMMON /NUMPAR/:
C      DABR   = "RADIUS-CONDITION" FOR TERMINATING THE ITERATION;
C               DIFFERENCE IN R.M.S. RADII SHOULD COME BELOW THAT
C               VALUE. A REASONABLE VALUE IS PREOCCUPIED IN BLOCKDATA.
C      DABE   = "ENERGY-CONDITION" FOR TERMINATING THE ITERATION;
C               DIFFERENCE IN ENERGY/PARTICLE SHOULD COME BELOW THAT
C               VALUE. A REASONABLE VALUE IS PREOCCUPIED IN BLOCKDATA.
C      ITMAX  = MAXIMUM NUMBER OF ITERATIONS.
C      ITPR   = MAXIMUM NUMBER OF SUBITERATIONS IN THE PAIRING ROUTINE.
C      EPSPR  = PRECISION IN PAIRING ITERATION
C      X0DAMP = SWITCH FOR THE STEP
C               AND SIZE OF GRADIENT STEP KINETIC ENERGY DAMPING.
C               SWITCH: 'X0DAMP'=0 --> DAMPING BY DIRECT H-INVERSION
C                       'X0DAMP'>0 --> KINETIC ENERGY DAMPING
C      E0DAMP = ENERGY PARAMETER FOR KINETIC ENERGY DAMPING
C      ADDNEW = WEIGHT WITH WHICH THE NEW H.F. POTENTIALS ARE MIXED
C               TO THE OLD ONES. THIS MIXING IS TO ENSURE STABLE
C               ITERATION. A REASONABLE VALUE IS ADDNEW=0.5 .
C      IFEX   = FOR 'IFEX=1' AN APPROXIMATE COULOMB-EXCHANGE FORCE
C               IS TAKEN INTO ACCOUNT.
C      IFTM   = FOR 'IFTM=1' THE CONTRIBUTION FROM THE KINETIC TERMS
C               (SKYRME PARAMTERS T1 & T2) TO THE SPIN-ORBIT POTENTIAL
C               IS TAKEN INTO ACCOUNT.
C               NOTE: THE OPTION 'IFEX' AND 'IFTM' ARE EXPLAINED IN
C                     PHYS.REV. C33 (1986) 335 .
C      IFDFMS = SWITCHES THE NUCLEON MASSES:
C                0 --> EQUAL MASSES ARE USED
C                1 --> PROTON AND NEUTRON MASS ARE DIFFERENT
C               THE DETAILED VALUES ARE GIVEN IN SUBROUTINE 'INITFC'.
C      IFZPE  = SWITCHES TYPE OF C.M.CORRECTION:
C                0 --> FACTOR (1-1/A) ON THE MASS IS USED FOR CORRECTION
C                1 --> CORRECTION IS COMPUTED EXPLICITELY (BUT A
C                      POSTERIORI) AS <P**2>/(2*A*M).
C      IFRHOC = SWITCH FOR CHARGE- OR PROTON-DENSITY IN COULOMB ENERGY:
C                0 --> PROTON-DENSITY IS USED FOR COULOMB POTENTIAL
C                1 --> CHARGE-DENSITY IS USED FOR COULOMB POTENTIAL
C      IFPLOT = SWITCH FOR COMPRESSED INFORMATION ON FILE 11,
C                     E.G. FOR PLOTTING
C               0  -->  NOTHING IS WRITTEN ON FILE 11
C               1  -->  GLOBAL RESULTS AND SINGLE PARTICLE ENERGIES
C               2  -->  DENSITIES IN ADDITION
C               3  -->  AND FURTHERMORE THE CHARGE FORMFACTOR
C      IWR    = PRINT LEVEL: -2 --> NOTHING IS PRINTED, EXCEPT WARNINGS
C                            -1 --> STANDARD OUTPUT.
C                             0 --> MORE INFO. DURING ITERATION
C                             1 --> WAVE FUNCTIONS ARE PRINTED (!)
C
C     INPUT PARAMETERS VIA COMMON /SKYPAR/:
C      T0-T4,X0-X3,POWER = SKYRME FORCE PARAMETERS
C      PAIRFP,PAIRFN   = FOR PROTON, OR NEUTRON, PAIRING;
C                       IF PAIRFX<-1.E10 THEN 'FIXED GAP APPR.' WITH
C                                              DELTA=11.2MEV/A**1/2
C                       IF PAIRFX<0. THEN     'FIXED GAP APPR.' WITH
C                                              DELTA=ABS(PAIRFX) .
C                       IF PAIRFX=0. THEN      PAIRING IS OVERRIDDEN,
C                                              'WEIGHT' IS READ IN FROM
C                       IF PAIRFX>0. THEN      'FIXED FORCE APPR.' WHERE
C                                              PAIRFX IS THE FORCE PARAM
C                       IF PAIRFX>1.E10 THEN   'FIXED FORCE APPR.' WITH
C                                              SOME STANDARD FORCE PARAM
C      ACOUL  = FACTOR ON THE COULOMB FORCE. STANDARD IS 'ACOUL=1.0'.
C               ACOUL=0.0 DISENABLES COULOMB FORCE.
C
C
C     OUTPUT PARAMETERS VIA COMMON /RESULT/:
C      RMS..  = R.M.S.RADII; ENDING MEANS:
C            .. = NOTHING --> TOTAL RADIUS
C            .. = C       --> CHARGE RADIUS
C            .. = C0      --> CHARGE RADIUS WITHOUT MAGNETIC FOLDING
C            .. = P       --> PROTON RADIUS
C            .. = N       --> NEUTRON RADIUS
C      RDMS.. = DIFFRACTION RADII; ENDING AS ABOVE.
C      SURF.. = SURFACE THICKNESS; ENDING AS ABOVE.
C      ETOTAL = TOTAL BINDING ENERGY
C      ESHL(ISO) = PROTON/NEUTRON-SHELL PART OF THE ENERGIES
C      ENREAR = REARRANGMENT ENERGY
C      EPAIR  = PAIRING CONTRIBUTION TO THE ENERGY
C      ZPE    = C.M.CORRECTION TO THE ENERGY (FOR 'IFZPE=1')
C      SPENRG = SINGLE PARTICLE ENERGIES
C      RHOCHR = CHARGE DENSITY, INCLUDING ALL NUCLEON FOLDINGS
C      FORMF  = CHARGE FORMFACTOR, INCLUDING ALL FOLDINGS
C
C     RESULTING FIELDS VIA COMMON /WAVFUN/
C      WF     = SINGLE PARTICLE WAVE FUNCTIONS
C               (THE MODUS FOR STORAGE OF WAVE FUNCTIONS IS EXPLAINED IN
C                SUBROUTINE 'INITGR')
C      BMASS  = INVERSE EFFECTIVE MASS
C      POT    = POTENTIAL
C      POTLS  = SPIN-ORBIT POTENTIAL
C      RHO    = DENSITY
C               (ALL DENSITIES AND POTENTIALS ARE STORED IN A LINEAR
C                ARRAY. PROTONS OCCUPY THE FIRST INTERVAL [1..'NGRID']
C                AND NEUTRONS THE SECOND INTERVAL ['NGRID'+1...2*'NGRID'
C
      COMMON /WAVFUN/ WF(KX11),WFS(KX11),
     &                BMASS(KGR2),POT(KGR2),POTLS(KGR2),D1B(KGR2),
     &                RHO(KGR2),
     &                TAU(KGR2),SJ(KGR2),SJS(KGR2),D2R(KGR2),D1R(KGR2),
     &                AUX1(KG1),AUX2(KG1)
      COMMON /SHELLS/ WEIGHT(KSL2),WLS(19),
     &                APROT,ANEUT,ANUMB,EFEP,EFEN,
     &                JSP(46),JSMAX(2),NPLA(KNMXP,KJMX2),
     &                NPROT,NNEUT,NNUMB,NMAXP,NMAXN,NMINN,NMAXTO
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
       COMMON /RESULT/ HPSWID(KSL2),SPENRG(KSL2),
     &                 FORMF(KQMAX),RHOCHR(KG1),
     &                 RMS,RMSC,RMSP,RMSN,RDMS,RDMSC,RDMSP,RDMSN,
     &                 SURF,SURFC,SURFP,SURFN,RMSC0,RDMSC0,SURFC0,
     &                 ETOTAL,ESHL(2),ENREAR,EPAIR,ZPE
       COMMON /NUMPAR/ DABR,DABE,ADDNEW,EPSPR,X0DAMP,E0DAMP,
     &                 IFEX,IFTM,IFDFMS,IFZPE,IFRHOC,
     &                 ITMAX,ITPR,IWR,IFPLOT
       COMMON /SKYPAR/ T0,T1,T2,T3,T4,X0,X1,X2,X3, POWER,
     &                 PAIRFP,PAIRFN,      ACOUL,
     &                 T0A,T0B,T3A,T3B, T1P2,T1M2,T13M2,T1P23,
     &                 T13M23,T1P2X,T1M2X,T4H,T3AS,T3ASP,T3BS,
     &                 AMFC(2),
     &                 GPP,GPN,DELTP,DELTN,     IFPAIR(2)
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
C     INFORMATION ON STATUS OF FILE FOR011
C
      DATA IFOP11/0/
C
C-----------------------------------------------------------------------
C
C     INITIALISE DEFAULT GRID SIZE AND CHECK BOUNDS
C
      ANUMB  = NPROT+NNEUT
      IF(NGRID.EQ.0) NGRID=INT((1.2*ANUMB**.3333333+6.4)/RSTEP)+1
C
      IF(NGRID.GT.KG1) STOP 'TOO LARGE "NGRID"'
      IF(NMAXP.GT.KMAXP) STOP 'TOO LARGE "NMAXP"'
      IF(NMAXN.GT.KMAXN) STOP 'TOO LARGE "NMAXN"'
C
C     INITIALISE FORCE, GRID, WAVE FUNCTIONS AND OCCUPATION WEIGHTS
C
      CALL INITFC
      CALL INITGR
      CALL INITWF
C
C     PRINTING THE HEADER ON FILE FOR006, OPTIONALLY ON FOR011
C
      IF(IWR.GT.-2) THEN
       WRITE(6,'(52A//)')  '1',
     &   (' *',I=1,25),'     SKYRME-HARTREE-FOCK     ',('* ',I=1,25)
       IF(IFPLOT.GT.0) THEN
        IF(IFOP11.EQ.0) THEN
         OPEN(UNIT=11,STATUS='UNKNOWN',FILE='FOR011')
         IFOP11 = 1
        ENDIF
        WRITE(11,'(//25A/)')
     &    (' *',I=1,12),'      SKYRME-HARTREE-FOCK      ',('* ',I=1,12)
        IUNMAX = 11
       ELSE
        IUNMAX = 6
       ENDIF
       DO 20 IUNIT=6,IUNMAX,5
       WRITE(IUNIT,'(4(A,I5))')
     &    ' NUCLEUS:  NPROT=', NPROT,'  NNEUT=',NNEUT,
     &             '  NMAXP=', NMAXP,'  NMAXN=',NMAXN
       WRITE(IUNIT,'(A,3F10.3,F10.1,F10.3/A,4F10.5,A,F8.5)')
     &    ' FORCE:    T0-T4=',T0,T1,T2,T3,T4,
     &    '           X0-X3=',X0,X1,X2,X3,'  POWER=',POWER
       WRITE(IUNIT,'(10X,2(A,G13.4),A,F6.3/5(A,I5)/9X,(A,I5))')
     &              'PAIRFP=',PAIRFP,' PAIRFN=',PAIRFN,' ACOUL=',ACOUL,
     &    ' CASES:     IFEX=',IFEX,'  IFTM=',IFTM,'  IFZPE=',IFZPE,
     &             ' IFDFMS=',IFDFMS,' IFRHOC=',IFRHOC,
     &             ' IFPLOT=',IFPLOT
       WRITE(IUNIT,'(A,F8.3,A,I5)')
     &    ' GRID:     RSTEP=',RSTEP,' NGRID=',NGRID
       WRITE(IUNIT,
     &  '(3(A,1PG11.4)/10X,2(A,1PG11.4),A,I5/10X,A,1PG11.4,A,I5)')
     &    ' STEP:    X0DAMP=',X0DAMP,'  E0DAMP=',E0DAMP,
     &               '  ADDNEW=',ADDNEW,
     &               '  DABR=',DABR,'    DABE=',DABE,'   ITMAX=',ITMAX,
     &               ' EPSPR=',EPSPR,'    ITPR=',ABS(ITPR)
       WRITE(IUNIT,'(/)')
   20  CONTINUE
       IF(PAIRFP.EQ.ZERO)
     &  WRITE(06,'(A,10(/5X,13F9.5))')
     &        ' WEIGHTS FOR PROTONS READ IN FROM INPUT DATA',
     &                 (WEIGHT(NSHL),NSHL=1,NMAXP)
       IF(PAIRFN.EQ.ZERO)
     &  WRITE(06,'(A,10(/5X,13F9.5))')
     &        ' WEIGHTS FOR NEUTRONS READ IN FROM INPUT DATA',
     &                 (WEIGHT(NSHL),NSHL=NMAXP+1,NMAXP+NMAXN)
      ENDIF
      WRITE(06,'(/)')
C
C     OPTIONALY TESTPRINT OF INITIAL WAVE FUNCTIONS
C
      IF(IWR.GE.1) CALL PRIWF(06)
C
C     INITIALISE COUNTER FOR STOPPING ITERATION, AND PAIRING ENERGIES.
C
      EBIND  = ZERO
      RMST   = ZERO
      IF(IFPAIR(1).EQ.0)  EPP    = ZERO
      IF(IFPAIR(2).EQ.0)  EPN    = ZERO
C
C     HERE STARTS THE ITERATION
C
      DO 1000 ITER=1,ITMAX
C                                           COMPUTE DENSITIES
      CALL DENSIT
C                                           MEAN-FIELD HAMILTONIAN
      CALL SKYPOT(ITER)
C                                           STEPPING THE WAVE FUNCTION
      IF(X0DAMP.EQ.ZERO) THEN
       CALL WELFU
      ELSE
       CALL WELFDR
      ENDIF
C                                           PAIRING ITERATION
      IF(IFPAIR(1).NE.0)
     & CALL PAIR(SPENRG(1),WEIGHT(1),NPROT,NMAXP,GPP,
     &           EFEP,DELTP,SP,EPP,ITPR,EPSPR,IWR)
      IF(IFPAIR(2).NE.0)
     & CALL PAIR(SPENRG(NMINN),WEIGHT(NMINN),NNEUT,NMAXN,GPN,
     &           EFEN,DELTN,SN,EPN,ITPR,EPSPR,IWR)
C                                          COMPUTE TOTAL ENERGY
      EPAIR  = EPP+EPN
      ESHELL = ESHL(1)+ESHL(2)
      ETOTAL = ESHELL+EPAIR+ENREAR
      EBIOLD = EBIND
      EBIND  = ETOTAL/ANUMB
      DETOT  = EBIOLD-EBIND
C
C
C     CHECK TERMINATION
C
      IF (ITER.GT.1) THEN
C
       RMSOLD = RMST
       RMST   = ZERO
       DO 10 I=2,NGRID
       R2     = RSQUAR(I)
   10  RMST   = R2*R2*(RHO(I)+RHO(I+NGRID)) + RMST
       RMST   = SQRT(FRPIRS*RMST/ANUMB)
       DRMST  = ABS(RMST-RMSOLD)/RMST
C
       IF(DRMST.LT.DABR .AND. ABS(DETOT/EBIND).LT.DABE) GOTO 1009
      ENDIF
C
C     OPTIONALLY PRINT INTERMEDIATE RESULTS
C
      IF(IWR.GE.0) WRITE(06,'(//A,I4,A/)')
     &              '   RESULTS OF THE ',ITER,' TH. ITERATION:'
      IF(IWR.GE.-1) WRITE(06,'(I3,2(A,G11.4,A,G12.5),A,G12.5)')
     &              ITER,' TH. ITERATION: E-DIFF.=',DETOT,
     &              ' ENERGY=',ETOTAL,'  R-DIFF.=',DRMST,
     &              ' RADIUS=',RMST,'  ENREAR=',ENREAR
      IF (IWR.GE.0)
     & WRITE(06,90) ESHELL,ESHL(1),ESHL(2),ENREAR,EPAIR,EPP,EPN,
     &              EFEP,EFEN,ETOTAL,EBIND
      IF (IWR.GE.1) CALL DRPOT(06)
C
 1000 CONTINUE
C
C     NO CONVERGENCE IF THE ROUTINE COMES TO THAT POINT
C
      WRITE(06,'(/A,I4,A)') ' NO CONVERGENCE WITHIN ',ITMAX,
     &                     ' ITERATIONS !'
C
C     THE END OF THE ITERATION
C
 1009 CONTINUE
      IF(IWR.GT.-2) WRITE(06,'(A,I4,A)') ' NORMAL TERMINATION AFTER',
     &              ITER,' ITERATIONS'
C
C     COMPUTE C.M. CORRECTION
C
      IF(IFZPE.NE.0) THEN
       CALL ZPECOR
      ELSE
       ZPE    = ZERO
      ENDIF
C
C     COMPUTE ENERGIES AB INITIO
C     (TO REMOVE "HISTORY" IN POTENTIALS FROM MIXING WITH 'ADDNEW')
C
      CALL DENSIT
      CALL SKYPOT(1)
      IF(X0DAMP.EQ.ZERO) THEN
       CALL WELFU
      ELSE
       CALL WELFDR
      ENDIF
      IF(IFPAIR(1).NE.0)
     & CALL PAIR(SPENRG(1),WEIGHT(1),NPROT,NMAXP,GPP,
     &           EFEP,DELTP,SP,EPP,ITPR,EPSPR,IWR)
      IF(IFPAIR(2).NE.0)
     & CALL PAIR(SPENRG(NMINN),WEIGHT(NMINN),NNEUT,NMAXN,GPN,
     &           EFEN,DELTN,SN,EPN,ITPR,EPSPR,IWR)
C
      ESHELL = ESHL(1)+ESHL(2)
      EPAIR  = EPP+EPN
      ETOTAL = ESHELL+EPAIR+ENREAR-ZPE
      EBIND  = ETOTAL/ANUMB
C
C     FINAL PRINT OF FIELDS
C
      IF(IWR.GE.+1) CALL PRIWF(06)
      IF(IWR.GE.-1) THEN
       CALL DRPOT(06)
       WRITE(06,90) ESHELL,ESHL(1),ESHL(2),ENREAR,EPAIR,EPP,EPN,
     &              EFEP,EFEN,ETOTAL,EBIND,ZPE
   90  FORMAT(/1X,'SHELL-ENERGIES',3G13.5,'  REARR.ENERGY=',G13.5,
     &        /1X,'PAIRING-ENERGIES',
     &        3G13.5,' FERMI-ENERGIES',2G13.5//1X,'THE TOTAL ENERGY',
     &        G13.5,5X,'PER PARTICLE',G13.5,'   ZPE=',G12.4)
      ENDIF
C
C     FORMFACTORS AND RADII
C
      CALL RADIUS
C
C     OPTIONALLY OUTPUT ON A PLOT FILE (FOR011)
C
      IF(IFPLOT.GT.0) CALL PLOT(11)
C
      WRITE(6,'(//)')
      RETURN
      END
C-----INITFC------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE INITFC
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     * * * * * * *      INITIALISE FORCE PARAMETERS      * * * * * * *
C
C     INITIALISES AUXILIARY FORCE PARAMETERS FROM THE FORCE PARAMETERS
C     GIVEN VIA COMMON /SKYPAR/.
C     THE GIVEN PARAMETERS ARE THE SKYRME PARAMETERS
C     'T0-T4', 'X0-X3' AND 'POWER';
C     FURTHERMORE THE PAIRING PARAMETERS 'PAIRFP' AND 'PAIRFN',
C     AND THE COULOMB STRENGTH 'ACOUL'
C     ALL THE OTHER PARAMETERS IN COMMON /SKYPAR/ ARE DERIVED QUANTITIES
C
       COMMON /SKYPAR/ T0,T1,T2,T3,T4,X0,X1,X2,X3, POWER,
     &                 PAIRFP,PAIRFN,      ACOUL,
     &                 T0A,T0B,T3A,T3B, T1P2,T1M2,T13M2,T1P23,
     &                 T13M23,T1P2X,T1M2X,T4H,T3AS,T3ASP,T3BS,
     &                 AMFC(2),
     &                 GPP,GPN,DELTP,DELTN,     IFPAIR(2)
      COMMON /WAVFUN/ WF(KX11),WFS(KX11),
     &                BMASS(KGR2),POT(KGR2),POTLS(KGR2),D1B(KGR2),
     &                RHO(KGR2),
     &                TAU(KGR2),SJ(KGR2),SJS(KGR2),D2R(KGR2),D1R(KGR2),
     &                AUX1(KG1),AUX2(KG1)
      COMMON /SHELLS/ WEIGHT(KSL2),WLS(19),
     &                APROT,ANEUT,ANUMB,EFEP,EFEN,
     &                JSP(46),JSMAX(2),NPLA(KNMXP,KJMX2),
     &                NPROT,NNEUT,NNUMB,NMAXP,NMAXN,NMINN,NMAXTO
       COMMON /NUMPAR/ DABR,DABE,ADDNEW,EPSPR,X0DAMP,E0DAMP,
     &                 IFEX,IFTM,IFDFMS,IFZPE,IFRHOC,
     &                 ITMAX,ITPR,IWR,IFPLOT
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
      DATA X10UP/1.0E10/
C
C-----------------------------------------------------------------------
C
C     SETTING PAIRING PARAMETERS:
C      THE INPUT QUANTITIES ARE 'PAIRFP' AND 'PAIRFN'.
C      THEIR SIGN DETERMINES WHETHER ONE IS USING
C      THE "CONSTANT GAP APPROACH" ( PAIRFX < 0 )
C      OR THE "CONSTANT FORCE APPROACH" (PAIRFX > 0 ).
C      THE ABSOLUTE VALUE THEN DETERMINES THE PAIRING STRENGTH:
C       FOR   PAIRFP/N > 0   IS   ABS(PAIRFP/N) = STRENGTH OF PAIRING FO
C       FOR   PAIRFP/N < 0   IS   ABS(PAIRFP/N) = PAIRING GAP.
C      THE SIGN OF 'PAIRFP' AND 'PAIRFN' MUST BE THE SAME!
C      THE INFORMATION ON THE PAIRING APPROACH IS CARRIED FURTHER
C      BY 'ITPR'. THE 'ITPR' IS SET SUCH THAT 'ITPR'>0 INDICATES
C      THE "CONSTANT FORCE" AND 'ITPR'<0 THE "CONSTANT GAP".
C      ABS('ITPR') REMAINS THE NUMBER OF PAIRING ITERATIONS.
C
C      ABS(PAIRFP/N) ALSO PROVIDES A SWITCH TO DEFAULT SETTINGS OF
C      THE PAIRING STRENGTH:
C       FOR   ABS(PAIRFP/N) > 1.0E10  USE DEFAULT VALUES FOR
C                                   FORCE-STRENGTH OR GAP.
C
C                                    CHECK CONSISTENCE OF SIGN
      IF(PAIRFP*PAIRFN.LT.ZERO)
     &  STOP ' INCONSISTENT PAIRFP WITH PAIRFN'
C
C     ASSIGNMENT FOR PROTONS
C
      IF(PAIRFP.LT.ZERO) THEN
C                                    CONSTANT GAP APPROACH
       ITPR   = -IABS(ITPR)
       IF(PAIRFP.LE.-X10UP) THEN
        DELTP  = 11.2/SQRT(ANUMB)
       ELSE
        DELTP  = ABS(PAIRFP)
       ENDIF
       GPP    = DELTP
      ELSEIF(PAIRFP.GT.ZERO) THEN
C                                    CONSTANT FORCE APPROACH
       ITPR   = IABS(ITPR)
       IF(PAIRFP.GE. X10UP) THEN
        GPP    = 29.0/ANUMB
       ELSE
        GPP    = PAIRFP
       ENDIF
       DELTP   = ZERO
      ELSE
       GPP    = PAIRFP
      ENDIF
C
C     ASSIGNMENT FOR NEUTRONS
C
      IF(PAIRFN.LT.ZERO) THEN
C                                    CONSTANT GAP APPROACH
       ITPR   = -IABS(ITPR)
       IF(PAIRFN.LE.-X10UP) THEN
        DELTN  = 11.2/SQRT(ANUMB)
       ELSE
        DELTN  = ABS(PAIRFN)
       ENDIF
       GPN    = DELTN
      ELSEIF(PAIRFN.GT.ZERO) THEN
C                                    CONSTANT FORCE APPROACH
       ITPR   = IABS(ITPR)
       IF(PAIRFN.GE. X10UP) THEN
        GPN    = 29.0/ANUMB
       ELSE
        GPN    = PAIRFN
       ENDIF
       DELTN  = ZERO
      ELSE
       GPN    = PAIRFN
      ENDIF
C
C     COMBINATIONS OF SKYRME-PARAMETERS WHICH OCCUR FREQUENTLY:
C     THE SIMPLE ASSIGMENTS ARE (HOPEFULLY) SELF-EXPLAINING.
C
      T0A    = T0*(1.0+0.5*X0)
      T0B    = T0*(0.5+X0)
      T3A    = T3*(1.0+0.5*X3)/6.0
      T3B    = T3*(0.5+X3)/6.0
      T3AS   = POWER*0.5*T3A
      T3ASP  = T3A+T3AS
      T3BS   = POWER*0.5*T3B
      T4H    = 0.5*T4
      T1P2   = 0.25*(T1+T1*X1*0.5+T2+T2*X2*0.5)
      T1M2   = 0.25*(0.5*T1+T1*X1-0.5*T2-T2*X2)
      T1P23  = T1P2-T1M2
      T13P2  = 0.125*(1.5*T1+T1*X1*3.0+0.5*T2+T2*X2)
      T13M2  = 0.125*(3.0*T1+T1*X1*1.5-T2-T2*X2*0.5)
      T13M23 = T13M2-T13P2
      T1M20  = (T1-T2)/8.0
      T1P2X  = (X1*T1+X2*T2)/8.0
      T1M2X  = T1M20-T1P2X
C
C     DETERMINE EFFECTIVE MASSES ACCORDING TO OPTIONS 'IFDFMS'
C     AND 'IFZPE'. IN FACT, 'AMFC' IS HALF THE INVERSE MASS IN
C     UNITS MEV/FM**2.
C
      IF(IFDFMS.EQ.0) THEN
       AMFC(1) = 20.7525
       AMFC(2) = 20.7525
      ELSE
       AMFC(1) = 20.735
       AMFC(2) = 20.721
      ENDIF
      IF(IFZPE.NE.1) THEN
       AMFC(1) = AMFC(1)-AMFC(1)/ANUMB
       AMFC(2) = AMFC(2)-AMFC(2)/ANUMB
      ENDIF
C
      RETURN
      END
C-----INITGR------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE INITGR
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     * * * * * * * *      INITIALISE GRID PARAMETERS      * * * * * * *
C
C     INITIALISATION OF GRID PROPERTIES ON COMMON /GRID/
C     AND OF SHELL ORDERING ON COMMON /SHELLS/.
C
C     THE SHELLS ARE ORDERED AS IN THE HARMONIC OSCILLATOR SHELL MODEL.
C     WITHIN A SHELL, THE ORDERING GOES FROM HIGHEST TOTAL ANGULAR
C     MOMENTUM TO LOWEST. THUS THE ORDERING STARTS AS FOLLOWS:
C      1S1/2, 1P3/2, 1P1/2, 1D5/2, 1D3/2, 2S1/2, 1F7/2, .....
C
C     THE POINTER FIELD 'NPLA' FOR THE LINEAR STORAGE OF THE WAVE FUNCTI
C     IS ALSO PROVIDED HERE:
C       THE WAVE FUNCTIONS ARE STACKED ONE ABOVE ANOTHER IN THE FIELD 'W
C       IN PORTIONS OF 'NGRID'.
C       THEY ARE ORDERED ACCORDING TO THE OSCILLATOR SHELL MODEL ORDERIN
C       PRECOMPUTED IN 'NSP'.
C
C
C     FIELDS FOR THE BOOKKEEPING OF THE SHELL STRUCTURE:
C       'NMAXFL' : DESCRIBES THE MAGIC SHELLS. NUMBER OF MAGIC SHELL IS
C                  THE SECOND INDEX. NMAXFL(1,NR.MAGIC) GIVES THE HIGHES
C                  OSCILLATOR STATE IN THE SHELL AND NMAXFL(2,NR.MAGIC)
C                  GIVES THE ACCORDING MAXIMUM NUMBER OF NUCLEONS FILLED
C                  UP THE SHELL.
C       'NSP'    = NSP(N,JS) WHERE 'N' IS THE RADIAL QUANTUM NUMBER
C                  AND 'JS' THE COMBINED ANG.MOM. QUANTUM NUMBER. THE
C                  VALUE OF 'NSP' GIVES THE NUMBER OF THE STATE (N,JS)
C                  IN HARMONIC OSCILLATOR ORDERING (SEE DATA STATMENT).
C       'JSP'    = 'JSP(NHO)' WHERE 'NHO' IS THE NUMBER OF A STATE IN
C                  HARMONIC OSCILLATOR ORDERING. THE VALUE 'JSP' GIVES
C                  THE ACCORDING COMBINED ANG.MOM. 'JS'.
C     THE COMBINED ANG.MOM. QUANTUM NUMBER 'JS' MEANS:
C       JS = 2*L   FOR  J=L-1/2
C       JS = 2*L+1 FOR  J=L+1/2
C     WHERE J=TOTAL ANG.MOM. AND L=ORBITAL ANG.MOM.
C
      COMMON /WAVFUN/ WF(KX11),WFS(KX11),
     &                BMASS(KGR2),POT(KGR2),POTLS(KGR2),D1B(KGR2),
     &                RHO(KGR2),
     &                TAU(KGR2),SJ(KGR2),SJS(KGR2),D2R(KGR2),D1R(KGR2),
     &                AUX1(KG1),AUX2(KG1)
      COMMON /SHELLS/ WEIGHT(KSL2),WLS(19),
     &                APROT,ANEUT,ANUMB,EFEP,EFEN,
     &                JSP(46),JSMAX(2),NPLA(KNMXP,KJMX2),
     &                NPROT,NNEUT,NNUMB,NMAXP,NMAXN,NMINN,NMAXTO
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
      DIMENSION NSP(5,19),NMAXFL(2,11)
C
      DATA NMAXFL/1,2, 2,6, 3,8, 6,20, 7,28, 11,50, 16,82, 22,126,
     &            29,184, 37,258, 46,350/
      DATA NSP /  1,6,15,28,45,      3,10,21,36,99,
     &            2,9,20,35,99,      5,14,27,44,99,
     &           4,13,26,43,99,      8,19,34,99,99,
     &           7,18,33,99,99,     12,25,42,99,99,
     &          11,24,41,99,99,     17,32,    3*99,
     &          16,31,    3*99,     23,40,    3*99,
     &          22,39,    3*99,     30,       4*99,
     &          29,       4*99,     38,       4*99,
     &          37,       4*99,               5*99,
     &          46,       4*99/
C
C-----------------------------------------------------------------------
C
C     AUTOMATIC SETTING OF THE NECESSARY NUMBER OF S.P.STATES ACCORDING
C     TO GIVEN PARTICLE NUMBER 'NPROT' OR 'NNEUT'. IT IS DONE IN CASE
C     OF 'NMAXP'=0 OR 'NMAXN'=0   (USING THE BOOKKEEPING FIELD 'NMAXFL')
C
      IF(NMAXP.EQ.0) THEN
       DO 10 I=1,11
       NMAXP  = NMAXFL(1,I)
       IF(NPROT.LE.NMAXFL(2,I)) GOTO 19
   10  CONTINUE
   19  CONTINUE
      ENDIF
      IF(NMAXN.EQ.0) THEN
       DO 20 I=1,11
       NMAXN  = NMAXFL(1,I)
       IF(NNEUT.LE.NMAXFL(2,I)) GOTO 29
   20  CONTINUE
   29  CONTINUE
      ENDIF
C
C     DERIVED NUMERIC PARAMETERS FOR SHELLS AND GRID
C
      NGRIDP = NGRID+1
      NGRID2 = NGRID+NGRID
      NMINN  = NMAXP+1
      NMAXTO = NMAXP+NMAXN
      ANUMB  = NPROT+NNEUT
      APROT  = NPROT
      ANEUT  = NNEUT
      FRPIRS = FOURPI*RSTEP
      RLENG  = (NGRID-1)*RSTEP
      DELQ   = 3.1415926/RLENG
      IQMAX  = KQMAX
C
C     ZENTRIFUGAL FORCE AND OTHER FUNCTIONS OF 'R'
C
      ZENTRF(1) = ZERO
      RINVS(1)  = ZERO
      RSQUAR(1) = ZERO
      DO 30 I=2,NGRID
      X=(I-1)*RSTEP
      ZENTRF(I) = ONE/(X*X)
      RINVS(I)  = ONE/X
      RSQUAR(I) = X*X
   30 CONTINUE
C
C     SETTING UP THE POINTER FIELD 'NPLA' FOR THE WAVE FUNCTIONS.
C     NPLA(N+1,JS) DESCRIBES THE FIRST POSITION IN THE WAVE FUNCTION
C     FIELD 'WF' (AND 'WFS') FOR A STATE WITH RADIAL QUANTUM
C     NUMBER 'N' AND COMBINED ANG.MOM. 'JS';
C     NPLA(1,JS) CARRIES THE INFORMATION ON THE MAXIMAL NUMBER
C     OF RADIAL 'N' FOR GIVEN 'JS'.
C
C                                             ZERO POINTER FIELD
      DO 110 JX=1,KJMX+KJMX
      DO 110 N=1,KNMX+1
  110 NPLA(N,JX) = 0
C                                             COMPUTE POINTER FIELD
      DO 120 ISO=1,2
      DO 120 JS=1,KJMX
      JX     = (ISO-1)*KJMX+JS
      ISOADD = NGRID*NMAXP*(ISO-1)
      IF(ISO.EQ.1) THEN
       NMAX   = NMAXP
      ELSE
       NMAX   = NMAXN
      ENDIF
      DO 130 N=1,KNMX
      NACT   = N-1
      NRN    = NSP(N,JS)
      IF(NMAX-NRN.LT.0) GOTO 139
      NPLA(N+1,JX) = NGRID*(NRN-1)+1+ISOADD
  130 CONTINUE
  139 CONTINUE
      NPLA(1,JX) = NACT
  120 CONTINUE
C                                             COMPUTE MAXIMUM 'JS'
      DO 150 ISO=1,2
      IF(ISO.EQ.1) THEN
       NMAX   = NMAXP
      ELSE
       NMAX   = NMAXN
      ENDIF
      JSM    = 0
      DO 160 I=1,NMAX
      IF(JSM-JSP(I).LT.0) JSM  = JSP(I)
  160 CONTINUE
      JSMAX(ISO) = JSM
  150 CONTINUE
C
      RETURN
      END
C-----INITWF------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE INITWF
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     * * * * * * * *      INITIALISE WAVE FUNCTIONS      * * * * * * *
C
C     INITIALISES THE WAVE FUNCTION FIELD 'WF' WITH HARMONIC OSCILLATOR
C     WAVE FUNCTIONS, CLEARS THE POTENTIAL FIELDS,
C     AND INITIALISES THE PAIRING WEIGHTS 'WEIGHT'.
C
      COMMON /WAVFUN/ WF(KX11),WFS(KX11),
     &                BMASS(KGR2),POT(KGR2),POTLS(KGR2),D1B(KGR2),
     &                RHO(KGR2),
     &                TAU(KGR2),SJ(KGR2),SJS(KGR2),D2R(KGR2),D1R(KGR2),
     &                AUX1(KG1),AUX2(KG1)
      COMMON /SHELLS/ WEIGHT(KSL2),WLS(19),
     &                APROT,ANEUT,ANUMB,EFEP,EFEN,
     &                JSP(46),JSMAX(2),NPLA(KNMXP,KJMX2),
     &                NPROT,NNEUT,NNUMB,NMAXP,NMAXN,NMINN,NMAXTO
       COMMON /SKYPAR/ T0,T1,T2,T3,T4,X0,X1,X2,X3, POWER,
     &                 PAIRFP,PAIRFN,      ACOUL,
     &                 T0A,T0B,T3A,T3B, T1P2,T1M2,T13M2,T1P23,
     &                 T13M23,T1P2X,T1M2X,T4H,T3AS,T3ASP,T3BS,
     &                 AMFC(2),
     &                 GPP,GPN,DELTP,DELTN,     IFPAIR(2)
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
       COMMON /RESULT/ HPSWID(KSL2),SPENRG(KSL2),
     &                 FORMF(KQMAX),RHOCHR(KG1),
     &                 RMS,RMSC,RMSP,RMSN,RDMS,RDMSC,RDMSP,RDMSN,
     &                 SURF,SURFC,SURFP,SURFN,RMSC0,RDMSC0,SURFC0,
     &                 ETOTAL,ESHL(2),ENREAR,EPAIR,ZPE
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
C     INFORMATION ON THE NUCLEAR SHELL STRUCTURE FOR INITILAISING THE
C     PAIRING OCCUPATION WEIGHTS IS CARRIED IN THE FOLLOWING FIELDS:
C       NZAHL(NSHL) = THE MAXIMUM NUMBER OF PARTICLES FILLED UP TO A GIV
C                     OSCILLATOR SHELL 'NSHL'.
C       NMAG(NSHL)  = THE BOUNDARIES OF A MAGIC SHELL WHICH CONTAINS A
C                     GIVEN OSCILLATOR STATE 'NSHL'.
C                     THE LAST TWO DIGITS ARE THE UPPER BOUND OF THE SHE
C                     AND THE FIRST TWO DIGITS THE LOWER BOUND.
C
      DIMENSION NZAHL(46),NMAG(46)
C
      DATA NZAHL/2,6,8,14,18,20,28,34,38,40,50,58,64,68,70,82,92,100,
     &           106,110,112,126,138,148,156,162,166,168,184,
     &           198,210,220,228,234,238,240,258,274,288,300,310,318,
     &           324,328,330,350/
      DATA NMAG/101,202,303,3*406,707,4*811,5*1216,6*1722,7*2329,
     &           8*3037, 9*3846 /
      DATA X9999/0.9999/
C
C     'OMEG' IS THE STANDARD SHELL SPACING IN MEV,
C     'HMC'  IS NUCLEON MASS DIVIDED BY HBAR**2
C
      DATA OMEG,HMC/41.,.024109348/
C
C-----------------------------------------------------------------------
C
C     HARM.OSC.-W.F. AS INITIAL W.F.
C
C     ISO-LOOP
C
      D2W    = RSTEP*SQRT(.5*HMC*OMEG/ANUMB**.333333333)
      DO 1010 ISO=1,2
      ISNPAD = (ISO-1)*KJMX
C
C     LOOP OVER COMBINED ANGULAR MOMENTUM Q.N. 'JS'
C
      JSM    = JSMAX(ISO)
      DO 10 JS=1,JSM
      NMAX   = NPLA(1,JS+ISNPAD)
      IF(NMAX.GE.1) THEN
C                                          SET QU.NUMBERS
       LL     = JS/2
       LLP    = LL+1
       SIG    = FLOAT(2*MOD(LL,2)-1)
       NPA1   = NPLA(2,JS+ISNPAD)
C                                          W.F., UNORTHOGONALISED
       NOLD   = NPA1
       WF(NPA1) = ZERO
       NA     = NPA1+1
       NE     = NPA1+NGRID-1
       X      = ZERO
       DO 30 I=NA,NE
       X      = X+D2W
       WF(I)  = EXP(-X*X)*(X**LLP)
   30  CONTINUE
       IF(NMAX.GT.1) THEN
        DO 40 N=2,NMAX
        NA     = NPLA(N+1,JS+ISNPAD)
        NOLD   = NA-NOLD
        NE     = NA+NGRID-1
        X      = -D2W
        DO 50 I=NA,NE
        X      = X+D2W
   50   WF(I)  = WF(I-NOLD)*X*X
   40   NOLD   = NA
       ENDIF
C
C      SCHMIDT-ORTHONORMALISATION
C
       CALL ORTHON(NPLA(2,JS+ISNPAD),NMAX)
C
C      DERIVATIVES OF THE WAVE FUNCTIONS ON 'WFS'.
C
       DO 210 N=1,NMAX
       IA     = NPLA(N+1,JS+ISNPAD)
       CALL DERV15(WF(IA),WFS(IA),SIG,NGRID,RSTEP)
  210  CONTINUE
C
      ENDIF
   10 CONTINUE
C
C     CLEAR POTENTIALS
C
      DO 220 IR=1,NGRID2
      POT(IR)   = ZERO
      BMASS(IR) = ZERO
      POTLS(IR) = ZERO
  220 CONTINUE
C
C     INITIALISE THE S.P. ENERGIES
C
      DO 510 NSHL=1,NMAXP+NMAXN
  510 SPENRG(NSHL) = ZERO
C
C     OCCUPY 'WEIGHT' AS PAIRING INITIALISATION.
C     IN CASE OF FILLED SHELLS PAIRING IS SWITCHED OFF USING THE
C     FIELD 'IFPAIR'.
C     IN CASE OF ZERO PAIRING CONSTANT THE FIELD 'WEIGHT' WAS READ
C     FROM INPUT AND THE INITIALISATION IS OVERRIDDEN.
C
      IF(ISO.EQ.1) THEN
       NMAX   = NMAXP
       NWGT   = 0
       NZ     = NPROT
       GAPI   = GPP
      ELSE
       NMAX   = NMAXN
       NWGT   = NMAXP
       NZ     = NNEUT
       GAPI   = GPN
      ENDIF
      IF(GAPI.NE.ZERO) THEN
       DO 310 NSHL=1,NMAX
  310  WEIGHT(NSHL+NWGT) = ZERO
       IE     = NMAX
       DO 320 NSHL=1,IE
       IF(NZAHL(NSHL)-NZ.GE.0) GOTO 329
       WEIGHT(NSHL+NWGT) = ONE
  320  CONTINUE
       STOP ' TOO LARGE PROTON OR NEUTRON NUMBER'
C
  329  CONTINUE
       IA     = NMAG(NSHL)
       IE     = MOD(IA,100)
       IA     = IA/100
       NOLD   = NZAHL(IA-1)
       X      = FLOAT(NZ-NOLD)/FLOAT(NZAHL(IE)-NOLD)
       DO 330 NSHL=IA,IE
  330  WEIGHT(NSHL+NWGT) = X
      ENDIF
      IF(WEIGHT(NMAX+NWGT).LT.X9999 .AND. GAPI.NE.ZERO) THEN
       IFPAIR(ISO) = 1
      ELSE
       IFPAIR(ISO) = 0
      ENDIF
C
C     INITIAL GUESS FOR FERMI ENERGIES
C
      EFEP   =  ZERO
      EFEN   =  ZERO
C
 1010 CONTINUE
C
      RETURN
      END
C-----DENSIT------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE DENSIT
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     * * * * * * * * *      DENSITIES AND CURRENTS      * * * * * * * *
C
C     ACCUMULATES THE DENSITY 'RHO',
C                 THE KINETIC DENSITY 'TAU' AND
C                 THE SPIN-ORBIT DENSITY 'SJ'
C     FROM THE RADIAL SINGLE PARTICLE WAVE FUNCTIONS GIVEN ON 'WF'
C     AND THEIR DERIVATIVES GIVEN ON 'WFS'.
C
C     EACH DENSITY OCCURS AS A PROTON- AND A NEUTRON-DENSITY.
C     THE PROTON DENSITY ('ISO'=1) IS STORED FIRST IN THE
C     INTERVAL [1,...,'NGRID']; DIRECTLY AFTER THAT THE NEUTRON
C     DENSITY IS STORED IN THE INTERVAL [NGRID+1,...,2*NGRID].
C
C     FOR THIS TASK THE ROUTINE NEEDS SOME INFORMATION ON THE SHELL
C     STRUCTURE; THIS IS PROVIDED BY THE FOLLOWING FIELDS:
C      JSP   = TOTAL AND ORBITAL ANGULAR MOMENTUM FOR THE STATE 'NSHL'.
C              (FOR A MORE DETAILED EXPLANATION SEE 'INITGR')
C      ZWJ   = "NR. OF STATES IN SHELL WITH COMBINED ANG.MOM. 'JS'",
C              I.E. (2*J+1)/4*PI WHERE J IS TOTAL ANGULAR MOMENTUM.
C      WLS   = STRENGTH OF SPIN-ORBIT SPLITTING FOR ANG.MOM. 'JS'
C     (NOTE THAT 'JS' AND ALSO 'JSP' IS A COMBINED QUANTUM NUMBER
C      FOR TOTAL AND ORBITAL ANG.MOM.)
C
       COMMON /SKYPAR/ T0,T1,T2,T3,T4,X0,X1,X2,X3, POWER,
     &                 PAIRFP,PAIRFN,      ACOUL,
     &                 T0A,T0B,T3A,T3B, T1P2,T1M2,T13M2,T1P23,
     &                 T13M23,T1P2X,T1M2X,T4H,T3AS,T3ASP,T3BS,
     &                 AMFC(2),
     &                 GPP,GPN,DELTP,DELTN,     IFPAIR(2)
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
       COMMON /NUMPAR/ DABR,DABE,ADDNEW,EPSPR,X0DAMP,E0DAMP,
     &                 IFEX,IFTM,IFDFMS,IFZPE,IFRHOC,
     &                 ITMAX,ITPR,IWR,IFPLOT
      COMMON /WAVFUN/ WF(KX11),WFS(KX11),
     &                BMASS(KGR2),POT(KGR2),POTLS(KGR2),D1B(KGR2),
     &                RHO(KGR2),
     &                TAU(KGR2),SJ(KGR2),SJS(KGR2),D2R(KGR2),D1R(KGR2),
     &                AUX1(KG1),AUX2(KG1)
      COMMON /SHELLS/ WEIGHT(KSL2),WLS(19),
     &                APROT,ANEUT,ANUMB,EFEP,EFEN,
     &                JSP(46),JSMAX(2),NPLA(KNMXP,KJMX2),
     &                NPROT,NNEUT,NNUMB,NMAXP,NMAXN,NMINN,NMAXTO
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
      DIMENSION ZWJ(19)
      DATA ZWJ/.15915494,.15915494,.31830989,.31830989,.47746483,
     &         .47746483,.63661977,.63661977,.79577472,.79577472,
     &         .95492966,.95492966,1.1140846,1.1140846,1.2732395,
     &         1.2732395,1.4232945,1.4232945,1.5915494/
C
C-----------------------------------------------------------------------
C
C     CLEAR FIELDS BEFORE ACCUMULATION
C
      DO 10 I=1,NGRID2
      RHO(I) = ZERO
      TAU(I) = ZERO
      SJ(I)  = ZERO
   10 CONTINUE
C
C     ISO-LOOP:
C     INITIALISE "SHIFT CONSTANTS" 'IM,IA,IE' FOR THE DENSITIES,
C     'NGW' FOR THE WEIGHTS, AND 'NADD' FOR THE WAVE FUNCTIONS.
C
      DO 20 ISO=1,2
      IE     = NGRID*ISO
      IM     = IE-NGRID+1
      IA     = IM+1
      IF(ISO.EQ.1) THEN
       NMAX   = NMAXP
      ELSE
       NMAX   = NMAXN
      ENDIF
      NGW    = (ISO-1)*NMAXP
      NADD   = NGW*NGRID-IE
C
C     LOOP OVER STATES FOR GIVEN ISOSPIN.
C      'NSHL' COUNTS THE STATES IN HARMONIC OSCILLATOR ORDERING.
C      'JS' IS THE ACCORDING COMPOSED ANG.MOM.,
C      'LL' IS THE ORBITAL ANG.MOM.,
C      'WL' IS THE SPIN-ORBIT SPLITTING,
C      'OM' IS THE ACTUAL PHASE-SPACE FACTOR
C
      DO 30 NSHL=1,NMAX
      JS     = JSP(NSHL)
      LL     = JS/2
      XLP    = FLOAT(LL*LL+LL+1)
      WL     = WLS(JS)
      OM     = ZWJ(JS)*WEIGHT(NSHL+NGW)
      NADD   = NADD+NGRID
      IF(OM.LT.XSMALL) GOTO 30
C                                  THE CASE R=0.0 NEEDS SPECIAL TREATMEN
      IF(LL.LT.1) THEN
       X      = WFS(IM+NADD)
       RHO(IM) = (X*X)*OM + RHO(IM)
      ELSEIF(LL.EQ.1) THEN
       X      = (16.0*WF(IA+NADD)-WF(IA+NADD+1))/(6.0*RSTEP*RSTEP)
       TAU(IM) =.75*OM*(X*X) + TAU(IM)
      ENDIF
C                                  NOW ALL R>0.0
      R      = ZERO
      DO 40  I=IA,IE
      R      = R+RSTEP
      RI     = ONE/R
      PHAS   = (RI*RI)*OM
C
      WFA    = WF(NADD+I)
      WFA2   = WFA*WFA
      RHO(I) = (PHAS*WFA2) + RHO(I)
      SJ(I)  = (PHAS*WFA2)*WL*RI + SJ(I)
C
      WFAS   = WFS(NADD+I)
      TAU(I) = (WFAS*WFAS - ((WFA*WFAS)+(WFA*WFAS)-XLP*WFA2*RI)*RI)
     &        *PHAS + TAU(I)
   40 CONTINUE
C
   30 CONTINUE
C
C     SOME DERIVATIVES: D/DR 'RHO' --> 'D1R'
C                       D/DR**2 'RHO' + 2/R D/DR 'RHO' --> 'D2R'
C                       D/DR 'SJ' + 2/R 'SJ' --> 'SJS'
C     'IM' IS THE INITIAL POSITION FOR GIVEN 'ISO'.
C
      ZWH    = 2.0/RSTEP
      CALL DERV15(RHO(IM),D1R(IM), ONE,NGRID,RSTEP)
      CALL DERV25(RHO(IM),D2R(IM), ONE,NGRID,RSTEP)
      D2R(IM) = D2R(IM) + (8.0*D1R(IM+1)-D1R(IM+2))/(3.0*RSTEP)
      DO 50 I=IM+1,IE
   50 D2R(I) = D2R(I) + ZWH*D1R(I)/(I-IM)
C
      CALL DERV15(SJ(IM),SJS(IM),-ONE,NGRID,RSTEP)
      SJS(IM) = 3.0*SJS(IM)
      DO 60 I=IM+1,IE
   60 SJS(I) = SJS(I) + ZWH*SJ(I)/(I-IM)
C
C     END ISO-LOOP
C
   20 CONTINUE
C
      RETURN
      END
C-----SKYPOT------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE SKYPOT(ITER)
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     * * * * * * *     SKYRME-HARTREE-FOCK POTENTIALS    * * * * * * *
C
C     COMPOSES SINGLE PARTICLE POTENTIAL ON 'POT',
C              SPIN-ORBIT POTENTIAL ON 'POTLS', AND
C              INVERSE MASS ON 'BMASS'
C     USING THE VARIOUS DENSITIES ACCUMULATED IN SUBROUTINE 'DENSIT'.
C     PROTON POTENTIALS ARE STORED FIRST, IN THE INTERVAL [1,...,'NGRID'
C     NEUTRON POTENTIALS FOLLOW IN THE INTERVAL ['NGRID'+1,...,2*'NGRID'
C
C     THE EMERGING POTENTIALS ARE MIXED WITH THE PREVIOUS POTENTIALS
C     WITH A MIXING FACTOR 'ADDNEW'; THIS SHOULD STABILISE THE ITERATION
C
       COMMON /SKYPAR/ T0,T1,T2,T3,T4,X0,X1,X2,X3, POWER,
     &                 PAIRFP,PAIRFN,      ACOUL,
     &                 T0A,T0B,T3A,T3B, T1P2,T1M2,T13M2,T1P23,
     &                 T13M23,T1P2X,T1M2X,T4H,T3AS,T3ASP,T3BS,
     &                 AMFC(2),
     &                 GPP,GPN,DELTP,DELTN,     IFPAIR(2)
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
       COMMON /NUMPAR/ DABR,DABE,ADDNEW,EPSPR,X0DAMP,E0DAMP,
     &                 IFEX,IFTM,IFDFMS,IFZPE,IFRHOC,
     &                 ITMAX,ITPR,IWR,IFPLOT
      COMMON /WAVFUN/ WF(KX11),WFS(KX11),
     &                BMASS(KGR2),POT(KGR2),POTLS(KGR2),D1B(KGR2),
     &                RHO(KGR2),
     &                TAU(KGR2),SJ(KGR2),SJS(KGR2),D2R(KGR2),D1R(KGR2),
     &                AUX1(KG1),AUX2(KG1)
      COMMON /SHELLS/ WEIGHT(KSL2),WLS(19),
     &                APROT,ANEUT,ANUMB,EFEP,EFEN,
     &                JSP(46),JSMAX(2),NPLA(KNMXP,KJMX2),
     &                NPROT,NNEUT,NNUMB,NMAXP,NMAXN,NMINN,NMAXTO
       COMMON /RESULT/ HPSWID(KSL2),SPENRG(KSL2),
     &                 FORMF(KQMAX),RHOCHR(KG1),
     &                 RMS,RMSC,RMSP,RMSN,RDMS,RDMSC,RDMSP,RDMSN,
     &                 SURF,SURFC,SURFP,SURFN,RMSC0,RDMSC0,SURFC0,
     &                 ETOTAL,ESHL(2),ENREAR,EPAIR,ZPE
      COMMON /POTINV/ UMIN,POTL(KG1),SQB(KG1),D2B(KG1),
     &                SQM(KG1),POTEFF(KG1),AINV(KG1),BINV(KG1)
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
C-----------------------------------------------------------------------
C
C     SETTING ADDITION WEIGHTS:
C      FOR 'ITER'=1 THE POTENTIALS ARE COMPUTED FROM SCRATCH,
C      IN ALL OTHER CASES THEY ARE MIXED BETWEEN NEW AND OLD
C      WITH THE WEIGHT 'ADDACT' FOR THE NEW CONTRIBUTION.
C
      IF(ITER.EQ.1) THEN
       ADDACT=ONE
      ELSE
       ADDACT=ADDNEW
      ENDIF
      ADDOLD=ONE-ADDACT
C
C      COMPOSE THE POTENTIAL 'POT', L*S-POTENTIAL 'POTLS' AND
C      AND INVERSE MASS 'BMASS' FROM DENSITIES.
C      AT THE SAME TIME THE REARRANGMENT ENERGY IS ACCUMULATED
C      ON 'ENREAR'.
C
C                                  PREPARE SOME AUXILIARY VARIABLES
      R1M2X  = IFTM*T1M2X
      R1P2X  = IFTM*T1P2X
      IF(IFEX.NE.0) THEN
       EXCFAC = -1.418033*ACOUL
       EXCHLF = EXCFAC*HALF
      ELSE
       EXCFAC = ZERO
       EXCHLF = ZERO
      ENDIF
C                                  ISO-LOOP,
C                                  'IM' IS SHIFTER TO CONJUGATE ISOSPIN
      ENREAR = ZERO
C                                  LOOP OVER GRID POINTS
      POWERM = POWER-ONE
      DO 20 I=1,NGRID
      J      = I+NGRID
C                                  COLLECT DENSITIES AND CURRENTS AT GRI
C                                  'I' COLLECTS FIELDS FOR PROTONS,
C                                  'J' COLLECTS FIELDS FOR NEUTRONS.
      RP     = RHO(I)
      RM     = RHO(J)
      RS     = RP+RM
      RSPOWM = RS**POWERM
      RPPOW3 = RP**0.33333333
C
C                                  COMPOSE POTENTIAL
C
      SSP    = SJS(I)
      SSM    = SJS(J)
      SSS    = SSP+SSM
      POT(I) = ( T0A*RS-T0B*RP  +T1P23*TAU(I)+T1P2*TAU(J)
     &          -T13M23*D2R(I)-T13M2*D2R(J) -T4H*(SSS+SSP)
     &          +RSPOWM*(RS*(T3ASP*RS-T3B*RP)-T3BS*(RP*RP+RM*RM) )
     &          +EXCFAC*RPPOW3                 )
     &         *ADDACT + ADDOLD*POT(I)
      POT(J) = ( T0A*RS-T0B*RM  +T1P23*TAU(J)+T1P2*TAU(I)
     &          -T13M23*D2R(J)-T13M2*D2R(I) -T4H*(SSS+SSM)
     &          +RSPOWM*(RS*(T3ASP*RS-T3B*RM)-T3BS*(RP*RP+RM*RM) ) )
     &         *ADDACT + ADDOLD*POT(J)
C
C                                  COMPOSE SPIN-ORBIT POTENTIAL
C
      D1P    = D1R(I)
      D1M    = D1R(J)
      D1S    = D1P+D1M
      POTLS(I) = (T4H*(D1S+D1P)+(R1M2X*SJ(I)-R1P2X*SJ(J)))*RINVS(I)
     &          *ADDACT + ADDOLD*POTLS(I)
      POTLS(J) = (T4H*(D1S+D1M)+(R1M2X*SJ(J)-R1P2X*SJ(I)))*RINVS(I)
     &          *ADDACT + ADDOLD*POTLS(J)
C
C                                  COMPOSE INVERSE EFFECTIVE MASS
C
      BMASS(I) = (AMFC(1) +T1P2*RS-T1M2*RP)*ADDACT
     &          + ADDOLD*BMASS(I)
      BMASS(J) = (AMFC(2) +T1P2*RS-T1M2*RM)*ADDACT
     &          + ADDOLD*BMASS(J)
C                                  ACCUMULATE REARRANGEMENT ENERGY
      ENREAR = RSQUAR(I)*(RSPOWM*RS*(T3AS*RS*RS-T3BS*(RP*RP+RM*RM))
     &                    -EXCHLF*RPPOW3*RP                   )
     &        + ENREAR
C
   20 CONTINUE
C
      ENREAR = -FRPIRS*HALF*ENREAR
      POTLS(1) = 1.3333333*POTLS(2)-0.3333333*POTLS(3)
      POTLS(NGRID+1) = 1.3333333*POTLS(NGRID+2)
     &                -0.3333333*POTLS(NGRID+3)
C
C      COULOMB-ENERGY
C       THE FIELDS 'SQB' AND 'SQM' ARE USED AS WORK-SPACE INSIDE 'COULMB
C       THE FIELD 'BINV' IS USED AS WORKSPACE FOR CARRYING THE COULOMB
C       POTENTIAL
C
      IF(ACOUL.NE.ZERO) THEN
       CALL COULMB(RHO(1),BINV,ACOUL)
       DO 240 I=1,NGRID
  240  POT(I) = BINV(I)*ADDACT + POT(I)
C
C       FOR IFRHOC.EQ.1 A CORRECTION TO THE COULOMB-ENERGY
C       IS CALCULATED COMING FROM THE FINITE EXTENSION OF
C       PROTON.
C       PARAMETERS : 4*PI*E**2 = 18.09557
C                    12/RADPROT**2 = 18.75
C       THE FIELD 'AUX1' IS USED AS WORKSPACE FOR THE LAPLACIAN
C       INVERSION. THE WORK-FIELDS 'POTL', 'SQB' AND 'D2B'
C       ARE PREOCCUPIED AS TO DESCRIBE THE FOLDING EQUATION
C         ( -LAPLACIAN + 18.75 ) 'YUK' = 'RHO' .
C
       IF(IFRHOC.EQ.1) THEN
C                                  PREPARE RHS AND POTENTALS FOR LAPLACE
        UMIN   = ZERO
        RFAC   = -18.09557*RSTEP
        DO 270 I=1,NGRID
        AUX1(I)  = (I-1)*RFAC*RHO(I)
        SQB(I)  = ONE
        D2B(I)  = ZERO
        POTL(I) = 18.75
  270   CONTINUE
C                                  SOLVE LAPLACE EQUATION
        CALL INVERT(AUX1(1),AUX1(1),-1)
C                                  CONSTRUCT FINITE RANGE CONTRIBUTION
        AUX1(1) = (8.0*AUX1(2)-AUX1(3))/(6.0*RSTEP)
        POT(1) = AUX1(1)*ADDACT + POT(1)
        DO 280 I=2,NGRID
        AUX1(I) = AUX1(I)*RINVS(I)
        POT(I) = AUX1(I)*ADDACT + POT(I)
  280   CONTINUE
C                                  CONTRIB. TO REARRANGEMENT ENERGY
        VOR    = ONE/(18.09557*RSTEP)
        ECCORR = ZERO
        DO 290 I=2,NGRID-1
        D2BA   = (I*AUX1(I+1)-2.0*(I-1)*AUX1(I)+(I-2)*AUX1(I-1))
     &          *VOR*RINVS(I)
 290    ECCORR = RSQUAR(I)*AUX1(I)*(RHO(I)+D2BA) + ECCORR
        ECCORR = FRPIRS*ECCORR
        ENREAR = ECCORR+ENREAR
C
        IF(IWR.GE.-1 .AND. ITER.EQ.1) THEN
         WRITE(06,'(A,G12.4)')' CORRECTION TO COULOMB-CORRECTION=',
     &                        ECCORR
         WRITE(06,'(1H0,A,20(/1X,10G12.4))')
     &        'TESTPRINT COUL.COR-POTENTIAL:', (AUX1(I),I=1,NGRID)
        ENDIF
       ENDIF
C
      ENDIF
C
      RETURN
      END
C-----COULMB------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE COULMB(CRHO,COULPT,CHPART)
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     * * * * * * * * * *      COULOMB POTENTIAL         * * * * * * * *
C
C     EVALUATES THE COULOMB POTENTIAL FOR GIVEN CHARGE DENSITY.
C     THE PARAMETERS IN THE CALLING LIST MEAN:
C      CRHO    = DENSITY OF PARTICLES FROM WHICH THE COULOMB
C                POTENTIAL IS TO BE COMPUTED ( IN [FM**(-3)] ).
C      COULPT  = EMERGING COULOMB POTNETIAL ( IN [MEV]).
C      CHPART  = FRACTIONAL CHARGE OF THE PARTICLES WHICH CONSTITUTE
C                'CRHO'. E.G. FOR PROTONS SET 'CHPART'=1 .
C     GRID PROPERTIES ARE TRANSFERRED VIA COMMON /GRID/.
C
C      THE FIELD 'BINV' OF THE COMMON /POTINV/ IS USED AS
C      WORK-SPACE FOR SOLVING THE POISSON EQUATION.
C
C     THE RESULTING COULOMB POTENTIAL IS RETURNED ON 'COULPT'.
C
       COMMON /SKYPAR/ T0,T1,T2,T3,T4,X0,X1,X2,X3, POWER,
     &                 PAIRFP,PAIRFN,      ACOUL,
     &                 T0A,T0B,T3A,T3B, T1P2,T1M2,T13M2,T1P23,
     &                 T13M23,T1P2X,T1M2X,T4H,T3AS,T3ASP,T3BS,
     &                 AMFC(2),
     &                 GPP,GPN,DELTP,DELTN,     IFPAIR(2)
       COMMON /NUMPAR/ DABR,DABE,ADDNEW,EPSPR,X0DAMP,E0DAMP,
     &                 IFEX,IFTM,IFDFMS,IFZPE,IFRHOC,
     &                 ITMAX,ITPR,IWR,IFPLOT
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
      COMMON /POTINV/ UMIN,POTL(KG1),SQB(KG1),D2B(KG1),
     &                SQM(KG1),POTEFF(KG1),AINV(KG1),BINV(KG1)
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
      DIMENSION CRHO(KG1),COULPT(KG1)
C
C     SOME CONSTANTS NEEDED BELOW:
C          EZW   = 1/12
C          FSX   = 5/6
C
      DATA         EZW,        FSX
     &    /0.083333333,0.833333333/
C
C-----------------------------------------------------------------------
C
C     COMPUTE TOTAL CHARGE FROM DENSITY 'CRHO' AND FRACTIO 'CHPART',
C     AND PREPARE R-WEIGHTED CHARGE ON WORKSPACE 'SQB'.
C
      IF(CHPART.EQ.ZERO) THEN
       DO 210 IR=1,NGRID
  210  COULPT(IR) = ZERO
      ELSE
       VOR    = 1.440*FRPIRS*CHPART
       CHARGE = ZERO
       DO 20 I=1,NGRID
       CHARGE = RSQUAR(I)*CRHO(I) + CHARGE
   20  SQB(I) = VOR*CRHO(I)*(I-1)
       CHARGE = FRPIRS*CHARGE
       IF(IWR.GE.0)
     &  WRITE(6,'(A,F11.5)') ' TOTAL CHARGE FROM RHOCHR=',CHARGE
C
C      FORWARD ELMINATION OF LOWER OFF-DIAGIONAL LINE. STOR RESULT ON 'B
C
       INTM   = NGRID-1
       BINV(1) = ZERO
       DO 21 I=2,INTM
   21  BINV(I) = EZW*(SQB(I+1)+SQB(I-1))+FSX*SQB(I)
     &         +BINV(I-1)*(I-2)/(I-ONE)
C
C      LOOP BACKWARD AND COLLECT R-WEIGHTED COULOMB POTENTIAL ON 'SQB'
C
       RSTEP2 = RSTEP*RSTEP
       RCOLPT = ( EZW*SQB(INTM)+FSX*SQB(NGRID)
     &           +(BINV(INTM)*(NGRID-2))/INTM   )
     &                    *(RSTEP2*INTM)/NGRID
     &             +  (1.440*CHARGE*NGRID)/NGRIDP
       COULPT(NGRID) = RCOLPT*RINVS(NGRID)
       DO 23 I=INTM,2,-1
       RCOLPT = (BINV(I)*RSTEP2+RCOLPT)*(I-ONE)/I
       COULPT(I) = RCOLPT*RINVS(I)
   23  CONTINUE
       COULPT(1)  = (4.0*COULPT(2)-COULPT(3))/3.0
      ENDIF
C
      RETURN
      END
C-----WELFU ------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE WELFU
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     * * * *   ITERATION STEP FOR THE SINGLE PARTICLE WAVE FUNCTIONS  *
C
C     THE ITERATION CONSISTS IN APPLYING THE INVERSE MEAN-FIELD
C     HAMILTONIAN:
C        |NEW-'WF'> = (H - 'UMIN')**(-1) |OLD-'WF'>
C     WHERE H IS THE MEAN-FIELD HAMILTONIAN AND 'UMIN' THE
C     MINIMUM OF THE ACTUAL POTENTIAL (INCLUDING ZENTRIFUGAL FORCE).
C
C     THE ROUTINE LOOPS THROUGH ALL SINGLE PARTICLE STATES WITH ISOSPIN
C     COMPOSED ANG.MOM. 'JS' AND RADIAL QUANTUM NUMBER 'N'.
C     FOR GIVEN 'ISO' THE AUXILIARY FIELDS 'SQB' AND 'D2B' ARE
C     OCCUPIED. FOR ADDITIONALLY GIVEN 'JS' THE EFFECTIVE POTENTIAL
C     (INCLUDING THE ZENTRIFUGAL POTENTIAL) IS COMPUTED ON 'POTL'.
C
C     THESE PIECES CONSTITUTE THE SINGLE PARTICLE HARTREE-FOCK HAMILTONI
C     FROM WHICH THE SINGLE PARTICLE ENERGIES 'SPENRG' ARE COMPUTED.
C     THE SINGLE PARTICLE ENERGIES ARE ADDED UP AND GIVE TOGETHER
C     WITH THE TOTAL KINETIC ENERGY THE TOTAL ENERGY ON 'ESHL'.
C
C     THE EFFECTIVE HAMILTONIAN GOES VIA COMMON /POTINV/ INTO THE
C     ROUTINE 'INVERT' WHERE ONE ITERATION STEP IS PERFORMED BY SOLVING
C       (H - 'UMIN') |NEW-'WF'> =  |OLD-'WF'>
C     FOR |NEW-'WF'>.
C     THE ITERATION IS COMPLETED THEN BY ORTHOGONALISING THE NEW SET
C     OF WAVE FUNCTIONS.
C
      COMMON /WAVFUN/ WF(KX11),WFS(KX11),
     &                BMASS(KGR2),POT(KGR2),POTLS(KGR2),D1B(KGR2),
     &                RHO(KGR2),
     &                TAU(KGR2),SJ(KGR2),SJS(KGR2),D2R(KGR2),D1R(KGR2),
     &                AUX1(KG1),AUX2(KG1)
      COMMON /SHELLS/ WEIGHT(KSL2),WLS(19),
     &                APROT,ANEUT,ANUMB,EFEP,EFEN,
     &                JSP(46),JSMAX(2),NPLA(KNMXP,KJMX2),
     &                NPROT,NNEUT,NNUMB,NMAXP,NMAXN,NMINN,NMAXTO
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
       COMMON /SKYPAR/ T0,T1,T2,T3,T4,X0,X1,X2,X3, POWER,
     &                 PAIRFP,PAIRFN,      ACOUL,
     &                 T0A,T0B,T3A,T3B, T1P2,T1M2,T13M2,T1P23,
     &                 T13M23,T1P2X,T1M2X,T4H,T3AS,T3ASP,T3BS,
     &                 AMFC(2),
     &                 GPP,GPN,DELTP,DELTN,     IFPAIR(2)
       COMMON /NUMPAR/ DABR,DABE,ADDNEW,EPSPR,X0DAMP,E0DAMP,
     &                 IFEX,IFTM,IFDFMS,IFZPE,IFRHOC,
     &                 ITMAX,ITPR,IWR,IFPLOT
       COMMON /RESULT/ HPSWID(KSL2),SPENRG(KSL2),
     &                 FORMF(KQMAX),RHOCHR(KG1),
     &                 RMS,RMSC,RMSP,RMSN,RDMS,RDMSC,RDMSP,RDMSN,
     &                 SURF,SURFC,SURFP,SURFN,RMSC0,RDMSC0,SURFC0,
     &                 ETOTAL,ESHL(2),ENREAR,EPAIR,ZPE
      COMMON /POTINV/ UMIN,POTL(KG1),SQB(KG1),D2B(KG1),
     &                SQM(KG1),POTEFF(KG1),AINV(KG1),BINV(KG1)
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
C-----------------------------------------------------------------------
C
C     ISO-LOOP
C      'ISOADD' IS A POINTER FOR THE POTENTIAL AND MASS FIELDS;
C      'ISNPAD' IS A POINTER FOR THE WAVE FUNCTION POINTER 'NPLA';
C      ON 'EGX' IS ACCUMULATED LATERON THE SHELL-ENERGY.
C
      DO 1000 ISO=1,2
      ISOADD = (ISO-1)*NGRID
      ISNPAD = (ISO-1)*KJMX
      EGX    = ZERO
C
C     SQUARE ROOT OF INVERSE MASS 'BMASS' ON 'SQB';
C     D/DR**2 'SQB' / 'SQB' ON 'D2B';
C     D/DR('BMASS')/R ON 'D1B'.
C
      DO 10 I=1,NGRID
   10 SQB(I) = SQRT(BMASS(I+ISOADD))
C
      CALL DERV25(SQB(1),D2B(1),ONE,NGRID,RSTEP)
      DO 20 I=1,NGRID
   20 D2B(I) = D2B(I)/SQB(I)
C
      CALL DERV15(BMASS(ISOADD+1),D1B(1),ONE,NGRID,RSTEP)
      D1B(1)=(16.0*BMASS(2+ISOADD)-15.0*BMASS(1+ISOADD)
     *        -BMASS(3+ISOADD))/(6.0*RSTEP**RSTEP)
      DO 30 I=2,NGRID
   30 D1B(I) = D1B(I)*RINVS(I)
C
C     LOOP OVER COMPOSED ANG.MOM. 'JS'
C      'LL' IS THE ORBITAL ANG.MOM.;
C      'SIG' IS THE PARITY OF THE WAVE FUNCTION 'WF' (IT IS -PARITY
C      OF THE STATE BECAUSE 'WF' IS MULTIPLIED BY R);.
C      'PHASJS' IS THE DEGENERACY OF THE SHELL.
C      'JSNPL' IS POINTER TO TO NUCLEON SHELL IN POINTER FIELD 'NPLA'.
C
      DO 40 JS=1,JSMAX(ISO)
      JSNPL = JS+ISNPAD
      NMAX  = NPLA(1,JSNPL)
      IF(NMAX.GT.0) THEN
       LL     = JS/2
       SIG    = FLOAT(MOD(LL,2)*2-1)
       XLP    = FLOAT(LL*LL+LL)
       XL0    = WLS(JS)
       PHASJS = FLOAT(JS-LL)
C
C      THE EFFECTIVE POTENTIAL FOR GIVEN 'JS' AND 'ISO' ON 'POTL';
C      ITS MINIMUM ON 'UMIN';
C      THE ZENTRIFUGAL FORCE ON 'AUX1'.
C
       AUX1(1) = ZERO
       POTL(1) = POT(1+ISOADD)+XL0*POTLS(1+ISOADD)+D1B(1)
       UMIN   = 1000.0
       DO 60 I=2,NGRID
       N      = I+ISOADD
       Y      = XLP*ZENTRF(I)
       AUX1(I) = Y
       Y       = POT(N)+XL0*POTLS(N)+BMASS(N)*Y+D1B(I)
       UMIN   = MIN(Y,UMIN)
       POTL(I) = Y
   60  CONTINUE
C
C      LOOP OVER RADIAL QUANTUM NUMBER 'N'.
C       ACCUMULATING ENERGIES AND PERFORMING ONE W.F. ITERATION.
C       'NPL' IS WAVE FUNCTION POINTER,
C       'NSHL' IS THE NUMBER OF THE STATE IN HARMONIC OSCILLATOR ORDERIN
C
       DO 70 N=1,NMAX
       NPL    = NPLA(N+1,JSNPL)
       NPLM   = NPL-1
       NSHL   = NPL/NGRID+1
C                                         W.F. ITERATION BY H-INVERSION
       IF(N.EQ.1) THEN
        IREP   = -1
       ELSE
        IREP   = +1
       ENDIF
       CALL INVERT(AUX1,WF(NPL),IREP)
C                                         EXRACT SINGLE PARTICLE ENERGY
       SPE    = ZERO
       DO 310 I=2,NGRID
       SPE    = AUX1(I)*WF(NPLM+I) + SPE
       WF(NPLM+I) = AUX1(I)
  310  CONTINUE
       SPE    = UMIN+ONE/(RSTEP*SPE)
       SPENRG(NSHL) = SPE
       EGX    = SPE*(WEIGHT(NSHL)*PHASJS) + EGX
C
   70  CONTINUE
C
C      SCHMIDT-ORTHONORMALISATION
C
       CALL ORTHON(NPLA(2,JSNPL),NMAX)
C
C      DERIVATIVE OF 'WF' ON 'WFS'
C
       DO 210 N=1,NMAX
       NPL    = NPLA(N+1,JSNPL)
       CALL DERV15(WF(NPL),WFS(NPL),SIG,NGRID,RSTEP)
  210  CONTINUE
C
      ENDIF
   40 CONTINUE
C
C     COMPUTE KINETIC ENERGY AND STORE TOTAL SHELL-ENERGY ON 'ESHL'
C
      EKIN    = ZERO
      R       = ZERO
      DO 410 I=2,NGRID
      R       = RSTEP+R
  410 EKIN    = R*R*AMFC(ISO)*TAU(ISOADD+I) + EKIN
      EKIN    = HALF*FRPIRS*EKIN
      EGX     = EGX + EKIN
C
      ESHL(ISO)=EGX
C
 1000 CONTINUE
C
      RETURN
      END
C-----WELFDR------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE WELFDR
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     * * *   WAVE FUNCTION ITERATION WITH DIRECT ACTION OF 'HPSI'   * *
C
C     THE ROUTINE USES THE GRADIENT STEP WITH KINETIC-ENERGY DAMPING.
C     IT PERFORMS ONE ITERATION STEP AS:
C
C                                'X0DAMP'
C      |WF_NEW> = |WF_OLD> - ----------------- [H-'SPENRG(WF)'] |WF_OLD>
C                             T_KIN + 'E0DAMP'
C
C     WHERE T_KIN = P**2/2M IS THE OPERATOR OF THE KINETIC ENERGY,
C     H IS THE MEAN-FIELD HAMILTONIAN, 'X0DAMP' AND 'E0DAMP' ARE STEP
C     PARAMETERS, AND 'SPENRG(WF)' IS THE SINGLE PARTICLE ENERGY OF
C     THE WAVE FUNCTION, 'SPENRG' = <WF|H|WF> .
C
C     THE SINGLE PARTICLE ENERGIES AND THE SINGLE PARTICLE KINETIC ENERG
C     ARE ADDED UP TO THE SHELL-PART OF THE TOTAL ENERGY ON 'ESHL'.
C
      COMMON /WAVFUN/ WF(KX11),WFS(KX11),
     &                BMASS(KGR2),POT(KGR2),POTLS(KGR2),D1B(KGR2),
     &                RHO(KGR2),
     &                TAU(KGR2),SJ(KGR2),SJS(KGR2),D2R(KGR2),D1R(KGR2),
     &                AUX1(KG1),AUX2(KG1)
      COMMON /SHELLS/ WEIGHT(KSL2),WLS(19),
     &                APROT,ANEUT,ANUMB,EFEP,EFEN,
     &                JSP(46),JSMAX(2),NPLA(KNMXP,KJMX2),
     &                NPROT,NNEUT,NNUMB,NMAXP,NMAXN,NMINN,NMAXTO
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
       COMMON /NUMPAR/ DABR,DABE,ADDNEW,EPSPR,X0DAMP,E0DAMP,
     &                 IFEX,IFTM,IFDFMS,IFZPE,IFRHOC,
     &                 ITMAX,ITPR,IWR,IFPLOT
       COMMON /SKYPAR/ T0,T1,T2,T3,T4,X0,X1,X2,X3, POWER,
     &                 PAIRFP,PAIRFN,      ACOUL,
     &                 T0A,T0B,T3A,T3B, T1P2,T1M2,T13M2,T1P23,
     &                 T13M23,T1P2X,T1M2X,T4H,T3AS,T3ASP,T3BS,
     &                 AMFC(2),
     &                 GPP,GPN,DELTP,DELTN,     IFPAIR(2)
       COMMON /RESULT/ HPSWID(KSL2),SPENRG(KSL2),
     &                 FORMF(KQMAX),RHOCHR(KG1),
     &                 RMS,RMSC,RMSP,RMSN,RDMS,RDMSC,RDMSP,RDMSN,
     &                 SURF,SURFC,SURFP,SURFN,RMSC0,RDMSC0,SURFC0,
     &                 ETOTAL,ESHL(2),ENREAR,EPAIR,ZPE
      COMMON /POTINV/ UMIN,POTL(KG1),SQB(KG1),D2B(KG1),
     &                SQM(KG1),POTEFF(KG1),AINV(KG1),BINV(KG1)
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
C-----------------------------------------------------------------------
C
C     ISO-LOOP
C      'ISOADD' IS A POINTER FOR THE POTENTIAL AND MASS FIELDS;
C      'ISNPAD' IS A POINTER FOR THE WAVE FUNCTION POINTER 'NPLA';
C      ON 'EGX' IS ACCUMULATED LATERON THE SHELL-ENERGY.
C      'EWIDTO' ACCUMULATES THE FLUCTUATION OF THE ENERGY.
C
      DO 1000 ISO=1,2
      ISOADD = (ISO-1)*NGRID
      ISNPAD = (ISO-1)*KJMX
      EGX    = ZERO
      EWIDTO = ZERO
C
C     SQUARE ROOT OF INVERSE FREE MASS ON 'SQB';
C     D/DR**2 'SQB' / 'SQB' ON 'D2B';
C     D/DR 'BMASS' /R ON 'D1B'.
C
      CALL DERV15(BMASS(ISOADD+1),D1B(ISOADD+1),ONE,NGRID,RSTEP)
      SQFREE = SQRT(AMFC(ISO))
      DO 10 I=1,NGRID
   10 SQB(I) = SQFREE
C
C     LOOP OVER COMPOSED ANG.MOM. 'JS'
C      'LL' IS THE ORBITAL ANG.MOM.;
C      'SIG' IS THE PARITY OF THE WAVE FUNCTION 'WF' (IT IS -PARITY
C      OF THE STATE BECAUSE 'WF' IS MULTIPLIED BY R);.
C      'PHASJS' IS THE DEGENERACY OF THE SHELL.
C
      DO 40 JS=1,JSMAX(ISO)
      JSNPL = JS+ISNPAD
      NMAX  = NPLA(1,JSNPL)
      IF(NMAX.GT.0) THEN
       LL     = JS/2
       SIG    = FLOAT(MOD(LL,2)*2-1)
       XLP    = FLOAT(LL*LL+LL)
       XL0    = WLS(JS)
       PHASJS = FLOAT(JS-LL)
C
C      PREPARE EFFECTIVE POTENTIAL FOR KINETIC-ENERGY INVERSION
C
       XLFAC  = SQFREE**2*XLP
       DO 45 I=1,NGRID
   45  POTL(I) = E0DAMP + XLFAC*ZENTRF(I)
       UMIN   = ZERO
C
C
C      LOOP OVER RADIAL QUANTUM NUMBER 'N'.
C       ACCUMULATING ENERGIES AND PERFORMING ONE W.F. ITERATION.
C       'NPL' IS WAVE FUNCTION POINTER,
C       'NSHL' IS NUMBER OF STATE IN HARMONIC OSCILLATOR ORDERING.
C
       DO 70 N=1,NMAX
       NPL    = NPLA(N+1,JSNPL)
       NPLM   = NPL-1
       NSHL   = NPL/NGRID+1
       SPEOLD = SPENRG(NSHL)
C
C      S.P. KINETIC ENERGY
C
       CALL TPSI(WF(NPL),AUX1,AUX2,JS,ISO,ZERO)
       SPEKIN = ZERO
       DO 90 I=2,NGRID
   90  SPEKIN = WF(I+NPLM)*AUX1(I) + SPEKIN
       SPEKIN = RSTEP*SPEKIN
       EGX    = SPEKIN*(WEIGHT(NSHL)*PHASJS) + EGX
C
C      ACTION OF THE MEAN-FIELD HAMILTONIAN
C
       CALL HPSI(WF(NPL),AUX1,WFS(NPL),AUX2,0,JS,ISO,SPEOLD)
C
C      SINGLE PARTICLE ENERGY AND ENERGY-FLUCTUATION
C
       XNORM  = ZERO
       EWID   = ZERO
       SPE    = ZERO
       DO 80 I=2,NGRID
       XNORM  = WF(NPLM+I)*WF(NPLM+I) + XNORM
       EWID   = AUX1(I)*AUX1(I) + EWID
   80  SPE    = WF(NPLM+I)*AUX1(I) + SPE
       XNORM  = RSTEP*XNORM
       SPE    = RSTEP*SPE/XNORM
       EWID   = RSTEP*EWID/XNORM - SPE*SPE
       EWIDTO = ABS(EWID)+EWIDTO
       HPSWID(NSHL) = SIGN(SQRT(ABS(EWID)),EWID)
       SPENRG(NSHL) = SPE+SPEOLD
       EGX    = SPENRG(NSHL)*(WEIGHT(NSHL)*PHASJS) + EGX
C
C      W.F. ITERATION BY T-INVERSION OF [H-'SPENRG']|WF>
C
       DO 85 I=1,NGRID
   85  AUX1(I) = AUX1(I) - SPE*WF(NPLM+I)
       IREP   = 2*MIN(2,N)-3
       CALL INVERT(AUX1,AUX1,IREP)
       DO 75 I=1,NGRID
   75  WF(NPLM+I) = WF(NPLM+I) - X0DAMP*AUX1(I)
C
   70  CONTINUE
C
C      SCHMIDT-ORTHONORMALISATION
C
       CALL ORTHON(NPLA(2,JSNPL),NMAX)
C
C      DERIVATIVE OF 'WF' ON 'WFS'
C
       DO 210 N=1,NMAX
       NPL    = NPLA(N+1,JSNPL)
       CALL DERV15(WF(NPL),WFS(NPL),SIG,NGRID,RSTEP)
  210  CONTINUE
C
      ENDIF
   40 CONTINUE
C
C     STORE TOTAL SHELL-ENERGY ON 'ESHL'
C
      ESHL(ISO)=EGX
C
C     PRINT ENERGY WIDTH
C
      IF(ISO.EQ.1 .AND. IWR.EQ.-1) THEN
       EWIDTO = SQRT(EWIDTO/NMAXP)
       WRITE(6,'(A,G12.5)') ' AVERAGE ENERGY-WIDTH FOR PROTONS=',EWIDTO
      ENDIF
      IF(IWR.GE.0) THEN
       IF(ISO.EQ.1) THEN
        WRITE(6,'(A,10(/1X,10G12.4))')
     &   ' ENERGY WIDTH FOR PROTONS:',(HPSWID(NSHL),NSHL=1,NMAXP)
       ELSE
        WRITE(6,'(A,10(/1X,10G12.4))')
     &   ' ENERGY WIDTH FOR NEUTRONS:',(HPSWID(NSHL),NSHL=NMINN,NMAXTO)
       ENDIF
      ENDIF
C
 1000 CONTINUE
C
      RETURN
      END
C-----ORTHON------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE ORTHON(NPA,NMAX)
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     SCHMIDT-ORTHONORMALISATION OF THE WAVE FUNCTIONS BELONGING TO
C     ONE ANGULAR MOMENTUM AND GIVEN BY THE POINTER FIELD 'NPA'.
C     'NMAX' IS THE NUMBER OF WAVE FUNCTION TO BE ORTHONORMALISED.
C
      DIMENSION NPA(KNMX)
C
      COMMON /WAVFUN/ WF(KX11),WFS(KX11),
     &                BMASS(KGR2),POT(KGR2),POTLS(KGR2),D1B(KGR2),
     &                RHO(KGR2),
     &                TAU(KGR2),SJ(KGR2),SJS(KGR2),D2R(KGR2),D1R(KGR2),
     &                AUX1(KG1),AUX2(KG1)
      COMMON /SHELLS/ WEIGHT(KSL2),WLS(19),
     &                APROT,ANEUT,ANUMB,EFEP,EFEN,
     &                JSP(46),JSMAX(2),NPLA(KNMXP,KJMX2),
     &                NPROT,NNEUT,NNUMB,NMAXP,NMAXN,NMINN,NMAXTO
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
C
C-----------------------------------------------------------------------
C
C     LOOP OVER THE STATES TO BE ORTHONORMALISED
C
       DO 110 N=1,NMAX
       NPL    = NPA(N)
       NPLM   = NPL-1
       NPLE   = NPL+NGRID-1
       IF(N.GT.1) THEN
C
C      LOOP OVER THE PREVIOUS STATES, ALREADY ORTHONORMALISED
C
        DO 120 N2=1,N-1
        NPL2   = NPA(N2)
        NPL2M  = NPL2-1
C
C       OVERLAP <WF_N|WF_N2>
C
        WFOVLP = WF(NPL)*WF(NPL2)*0.5
        DO 125 I=2,NGRID
  125   WFOVLP = WF(I+NPLM)*WF(I+NPL2M)+WFOVLP
        WFOVLP = WFOVLP*RSTEP
C
C       PROJECT PIECE OF |WF_N2> OUT OF |WF_N>
C
        XNORM  = -WFOVLP
        NDIF   = NPL2-NPL
        DO 130 I=NPL,NPLE
  130   WF(I)  = XNORM*WF(I+NDIF) + WF(I)
  120   CONTINUE
       ENDIF
C
C      NORMALISE |WF_N>
C
       WFNORM = WF(NPL)*WF(NPL)*0.5
       DO 140 I=2,NGRID
  140  WFNORM = WF(I+NPLM)*WF(I+NPLM)+WFNORM
       WFNORM = WFNORM*RSTEP
C
       XNORM  = 1./SQRT(WFNORM)
       DO 150 I=NPL,NPLE
  150  WF(I)  = XNORM*WF(I)
C
C
  110  CONTINUE
C
       RETURN
       END
C-----PAIR  ------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE PAIR(E,GW,NPART,NMAX,GP,EFERM,DELTA,PARTNM,ENPAIR,
     &                ITER,EPS,IAB)
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     * * * * * * * * * *     PAIRING ITERATION      * * * * * * * * * *
C
C     DETERMINES THE FERMI-ENERGY 'EFERM' AND THE GAP 'DELTA'
C     SUCH THAT THE "GAP-EQUATION" AND THE "PARTICLE NUMBER CONDITION"
C     ARE FULFILLED SIMULTANOUSLY. THIS IS ACHIEVED BY ITERATION
C     WITH A GRADIENT SCHEME (NEWTON'S TANGENTIAL FORMULA)
C     WHERE THE GRADIENT IS EVALUATED BY FINITE DIFFERENCES.
C
C     THERE ARE TWO SCHEMES POSSIBLE:
C     1. THE "CONSTANT FORCE" APPROACH, WHERE THE PAIRING FORCE IS GIVEN
C                                       IN 'GP'.
C     2. THE "CONSTANT GAP" APPROACH,   WHERE THE GAP IS KEPT FIXED AND
C                                       IS GIVEN IN 'DELTA'.
C     THERE IS ONLY 'EFERM' TO BE DETERMINED IN THE "CONSTANT GAP"
C     APPROACH. THE GAP-EQUATION IS USED AT THE END TO DETERMINE AN
C     ACCORDING FORCE 'GP'.
C     THE SCHEMES ARE SWITCHED BY SIGN('ITER').
C
C     INPUT VIA LIST:
C      E       = ARRAY(1..NMAX) OF SINGLE PARTICLE ENERGIES.
C      GW      = ARRAY(1..NMAX) OF OCCUPATION PROBABILITIES,
C                INPUT IS USED AS INITIAL GUESS FOR THE ITERATION.
C      NPART   = DESIRED PARTICLE NUMBER
C      NMAX    = MAXIMUM NUMBER OF SINGLE PARTICLE STATES
C                (NEEDS TO BE SMALLER THAN THE PARAMETER 'KSL2'
C                 AND SMALLER THAN 46).
C      GP      = SIZE OF PAIRING-FORCE, IS INPUT IN CASE OF
C                "CONSTANT FORCE" APPROACH.
C      EFERM   = FERMI-ENERGY, INPUT IS USED AS INITIAL GUESS;
C                IF EFERM=0.0 IS INPUT THEN A SUITABLE INITIAL GUESS
C                IS COMPUTED FROM INPUT 'GW'.
C      DELTA   = PAIRING GAP, IS INPUT IN CASE OF "CONSTANT GAP" APPROAC
C      ITER    = SWITCH FOR PAIRING TYPE AND NUMBER OF PAIRING ITERATION
C                 ITER>0  -->  "CONSTANT FORCE" APPROACH, USING
C                              PAIRING FORCE 'GP'
C                 ITER<0  -->  "CONSTANT GAP" APPROACH, USING
C                              GIVEN GAP 'DELTA'
C                ABS(ITER) IS THE NUMBER OF ITERATIONS
C      EPS     = END CONDITION FOR PAIRING ITERATION;
C                ITERATION TERMINATES IF ERROR IN PARTICLE NUMBER
C                IS SMALLER THAN 'EPS' AND IF 'EFERM' AND/OR 'DELTA'
C                ARE SMALLER THAN 'EPS'.
C      IAB     = PRINT LEVEL; SIGNIFICANT VALUES ARE -2, -1, 0 AND 1;
C                LARGER VALUE PRINTS MORE.
C
C     OUTPUT VIA LIST:
C      GW      = ARRAY(1..NMAX) OF THE OCCUPATION PROBABILITIES
C                FINALLY ACHIEVED.
C      GP      = SIZE OF PAIRING-FORCE, IS OUTPUT IN CASE OF
C                "CONSTANT GAP" APPROACH.
C      DELTA   = PAIRING GAP, IS OUTPUT IN CASE OF
C                "CONSTANT FORCE" APPROACH.
C      EFERM   = FERMI-ENERGY.
C      PARTNM  = ACTUAL PARTICLE NUMBER,
C                FROM ADDING 'WEIGHT' WITH DEGENERACY 'PH'.
C
C     SOME AUXILIARY FIELDS ARE:
C      PH      = ARRAY(1..46) OF THE MULTIPLICITIES OF THE SINGLE
C                PARTICLE LEVELS. ARRAY IS ORDERED ACCORDING TO
C                THE HARMONIC OSCILLATOR SCHEME, WITH RISING SHELL
C                NUMBER AND LOWERING ANGULAR MOMENTUM WITHIN EACH SHELL.
C      DPARN   = ARRAY(1..3) OF VARIATION IN THE PARTICLE NUMBER AS
C                CONSEQUENCE OF 'DEFERM' AND 'DDELTA'.
C      DGAP    = ARRAY(1..3) OF VARIATION IN THE GAP EQUATION AS
C                CONSEQUENCE OF 'DEFERM' AND 'DDELTA'.
C      GR      = DOUBLE ARRAY OF VARIATION OF PARTICLE NUMBER AND OF
C                GAP EQUATION, USED FOR CONSTRUCTION OF THE TANGANTIAL
C                STEP
C
      DIMENSION E(KSL2),GW(KSL2),PH(46)
      DIMENSION DPARN(3),DGAP(3),GR(2,2)
C
      DATA PH/1.,2.,1.,3.,2.,1.,4.,3.,2.,1.,5.,4.,3.,2.,1.,6.,5.,
     &        4.,3.,2.,1.,7.,6.,5.,4.,3.,2.,1.,8.,7.,6.,5.,4.,3.,2.,1.,
     &        9.,8.,7.,6.,5.,4.,3.,2.,1.,10./
      DATA GR,DPARN,DGAP/10*0./
C
C     FURTHER NUMERICAL VARIABLES ARE:
C      DEFERM  = STEP IN THE FERMI-ENERGY, TO EVALUATE
C                NUMERICALLY THE DERIVATIVES.
C      DDELTA  = STEP IN THE GAP, TO EVALUATE NUMERICALLY THE
C                DERIVATIVES; USED ONLY IN THE "CONSTANT FORCE" APPROACH
C      DAMPIN  = DAMPING FACTOR FOR THE TANGENTIAL STEP
C      EFMAX,DLMAX,DETMIN,DEFMIN,DDLMIN  = LIMITATIONS FOR THE STEP
C
C     NOTE: THESE PARAMETERS ARE ADJUSTED FOR AN APPLICATION WITH
C           THE NUCLEAR SHELL MODEL. IT IS ASSUMED THAT THE SINGLE
C           PARTICLE ENERGIES ARE GIVEN IN UNITS OF [MEV] AND DISPLAY
C           A REASONABLE NUCLEAR SPECTRUM.
C
      DATA DAMPIN/0.9/
      DATA EFMAX,DLMAX,DETMIN,DEFMIN,DDLMIN/3.,.6,.1E-3,.1E-3,.1E-3/
C
      DATA XMAXLW,X10LW/1.0E-30,1.0E-10/
      DATA ONE,ZERO/1.0,0.0/
C
C-----------------------------------------------------------------------
C
C     CHECK 'NMAX'
C
      IF(NMAX.GT.46 .OR. NMAX.GT.KSL2)
     &  STOP 'TOO LARGE NMAX IN CALL TO SUBROUTINE PAIR'
C
C      SET SWITCH VARIABLES
C
      IWARNG = 0
      DEFERM = ONE
      DDELTA = 0.1
C
      IF(IAB.GE.1)
     & WRITE(6,'(/A,I4,3(A,F9.4)/A,10(/1X,10F8.3))')
     &   ' *** PAIR ENTERED WITH: ITER=',ITER,'  DELTA=',DELTA,
     &   '  EFERM=',EFERM,'  GP=',GP,
     &   '                        SINGLE PARTICLE ENERGIES:',
     &   (E(I),I=1,NMAX)
C
C      PREPARE FERMI-ENERGY 'EFERM', IF NOT YET INITIALISED.
C
      IF(EFERM.EQ.ZERO) THEN
       EOCC   = -10000.
       ISUM   = 0
  110  CONTINUE
        EMIN   = 10000.
        DO 120 IT=1,NMAX
         IF(E(IT).LE.EOCC .OR. EMIN.LT.E(IT) ) GOTO 120
         ITMIN  = IT
         EMIN   = E(IT)
  120   CONTINUE
        EOCC   = EMIN
        ISUM   = INT(PH(ITMIN)+.000001) +ISUM
        IF(ISUM+ISUM-NPART) 110,130,130
  130  CONTINUE
       EFERM  = EOCC+ONE
       IF(IAB.GE.1) WRITE(06,'(5X,A,I5,A,G11.4)')
     &   'INITIALISTION: ISUM=',ISUM,'  EFERM=',EFERM
C
      ENDIF
C
      IF(ITER.GT.0) THEN
C
C-----------------------------------------------------------------------
C
C     CASE OF CONSTANT PAIRING-FORCE, GIVEN BY 'GP'.
C      GAP 'DELTA', FERMI-ENERGY 'EFERM', AND OCCUPATIONS 'GW'
C      ARE COMPUTED.
C
C-----------------------------------------------------------------------
C
       DELTI  = DELTA
       IF(ABS(DELTI).LT.X10LW) DELTI = ONE
       DO 200 IT=1,ABS(ITER)
C
C       GAP-EQUATION & PARTICLE-NUMBER AT 'EFERM' & 'DELTI' (FOR K=1)
C       AND AT 'EFERM' VARIED (K=2) AND AT 'DELTA' VARIED (K=3).
C
        DO 210 KA=1,3
C                                          ACTUAL FERMI-ENERGY AND GAP
        K      = 4-KA
        IF(K.EQ.1) THEN
         ELAM   = EFERM
         DELACT = DELTI
        ELSEIF(K.EQ.2) THEN
         ELAM   = EFERM+DEFERM
         DELACT = DELTI
        ELSE
         ELAM   = EFERM
         DELACT = DELTI+DDELTA
        ENDIF
C                                         COMPUTE ACTUAL QUASIPARTICLE E
C                                         AND OCCUPATION-WEIGHTS,
C                                         ACCUMULATE GAP-EQUATION AND
C                                         PARTICLE NUMBER
        PARNUM = ZERO
        GAPEQ  = ZERO
         DO 220 I=1,NMAX
         EQUASI = SQRT((E(I)-ELAM)*(E(I)-ELAM)+DELACT*DELACT)
         GW(I)  = 0.5-0.5*(E(I)-ELAM)/EQUASI
         GAPEQ  = PH(I)/EQUASI   + GAPEQ
         PARNUM = GW(I)*PH(I)    + PARNUM
  220    CONTINUE
C                                         STORE ACTUAL PART.NUMBER AND
C                                         GAP-EQUATION
        DGAP(K)  = 0.5*GP*GAPEQ-ONE
        DPARN(K) = PARNUM+PARNUM-NPART
  210   CONTINUE
C
C       CONSTRUCTION OF THE GRADIENT-MATRIX AND ITS INVERSE
C        ( DETERMINANT 'DET' IS LIMITED IN VALUE TO AVOID SINGULARITIES
C
        GR(1,1) = ( DGAP(2)- DGAP(1))/DEFERM
        GR(1,2) = (DPARN(2)-DPARN(1))/DEFERM
        GR(2,1) = ( DGAP(3)- DGAP(1))/DDELTA
        GR(2,2) = (DPARN(3)-DPARN(1))/DDELTA
        DET     = GR(1,1)*GR(2,2)-GR(1,2)*GR(2,1)
        DET     = SIGN(MAX(ABS(DET),DETMIN),DET)
        IF(ABS(DET).LT.XMAXLW)  DET    = SIGN(XMAXLW,DET)
C
        IF(IAB.GE.1) THEN
         WRITE(6,'(A,I4,3(A,G11.3)/A,3G11.3,A,3G11.3/A,4G11.3)')
     &    ' ITERATION AT IT=',IT,' :  DELTI=',DELTI,'  EFERM=',EFERM,
     &    '  DET=',DET,
     &    ' DGAP=',DGAP,' ,  DPARN=',DPARN,
     &    '   GR=',GR
         WRITE(6,'(A,10F7.4,10(/6X,10F7.4))')
     &    '   GW=',GW
        ENDIF
C
        GRSAV   =  GR(1,1)
        GR(1,1) =  GR(2,2)/DET
        GR(1,2) = -GR(1,2)/DET
        GR(2,1) = -GR(2,1)/DET
        GR(2,2) = GRSAV/DET
C
C       TANGENTIAL STEP  (INCLUDING SOME STEP LIMITERS)
C
        EFOLD  = EFERM
        DELOLD = DELTI
        EFSTEP = DAMPIN*(GR(1,1)*DGAP(1)+GR(2,1)*DPARN(1))
        DLSTEP = DAMPIN*(GR(1,2)*DGAP(1)+GR(2,2)*DPARN(1))
        EFERM  = EFERM-SIGN(MIN(ABS(EFSTEP),EFMAX),EFSTEP)
        DELTI  = ABS(DELTI-SIGN(MIN(ABS(DLSTEP),DLMAX),DLSTEP) )
        DEFERM = EFOLD-EFERM
        DDELTA = DELOLD-DELTI
        IF(ABS(DEFERM).LT.DEFMIN) DEFERM = DEFMIN
        IF(ABS(DDELTA).LT.DDLMIN) DDELTA = DDLMIN
C
        IF(IAB.EQ.0)
     &   WRITE(6,'(A,I4,2(A,G11.3))')
     &    ' PAIRING ITERATION IT=',IT,'  :  DELTI=',DELTI,
     &    '  EFERM=',EFERM
C
        IF(ABS(DGAP(1)).LT.EPS .AND. ABS(DPARN(1)).LT.EPS)   GOTO 299
  200   CONTINUE
        IWARNG = 1
C
  299   CONTINUE
        DELTA  = DELTI
C
      ELSE
C
C-----------------------------------------------------------------------
C
C      CASE OF CONSTANT PARING-GAP, GIVEN BY 'DELTA'.
C
C-----------------------------------------------------------------------
C
       DO 310 IT=1,ABS(ITER)
C
C      PARTICLE NUMBER AT 'EFERM' (K=1) AND 'EFERM' VARIED (K=2).
C
        DO 320 KA=1,2
C                                         SET ACTUAL FERMI-ENERGY 'ELAM'
        K      = 3-KA
        IF(K.EQ.2) THEN
         ELAM   = EFERM+DEFERM
        ELSE
         ELAM   = EFERM
        ENDIF
C                                         COMPUTE ACTUAL PARTICLE NUMBER
        PARNUM = ZERO
         DO 330 I=1,NMAX
         EQUASI = SQRT( (E(I)-ELAM)*(E(I)-ELAM) + DELTA*DELTA )
         GW(I)  = 0.5-0.5*(E(I)-ELAM)/EQUASI
         PARNUM = GW(I)*PH(I)    + PARNUM
  330    CONTINUE
C                                         STORE PARTICLE NUMBER
        DPARN(K) = PARNUM+PARNUM-NPART
  320   CONTINUE
C
C      GRADIENT STEP TO NEXT 'EFERM'   (INCLUDING STEP LIMITERS)
C
        GR(1,1) = (DPARN(2)-DPARN(1))/DEFERM
        DET    = SIGN(MAX(ABS(GR(1,1)),DETMIN),GR(1,1))
        EFOLD  = EFERM
        EFSTEP = DAMPIN*DPARN(1)/DET
        EFERM  = EFERM-SIGN(MIN(ABS(EFSTEP),EFMAX),EFSTEP)
        DEFERM = EFOLD-EFERM
        DEFERM = SIGN(MAX(ABS(DEFERM),DEFMIN),DEFERM)
        IF(IAB.EQ.0)
     &   WRITE(6,'(A,I4,2(A,G11.3))')
     &    ' PAIRING ITERATION IT=',IT,'  :  EFERM=',EFERM,
     &    '  DPARN(1)=',DPARN(1)
        IF(IAB.GE.1)
     &   WRITE(6,'(A,I4,2(A,G11.3)/A,2G11.3,A,G11.3/
     &             A,10F7.4,10(/6X,10F7.4))')
     &    ' ITERATION AT IT=',IT,' :   EFERM=',EFERM,
     &    '  DET=',DET,
     &    ' DPARN=',DPARN(1),DPARN(2),' ;   GR=',GR(1,1),
     &    '   GW=',GW
        IF(ABS(DPARN(1)).LT.EPS)   GOTO 350
  310   CONTINUE
        IWARNG = 1
  350  CONTINUE
C
C      DETERMINE FORCE 'GP' ACCORDING TO GIVEN 'DELTA' AND THE
C      EQUILIBRIUM REACHED.
C
       GAPEQ  = ZERO
        DO 360 I=1,NMAX
  360   GAPEQ = PH(I)/SQRT((E(I)-EFERM)*(E(I)-EFERM)+DELTA*DELTA)
     *           + GAPEQ
       GP     = 2.0/GAPEQ
C
      ENDIF
C
C-----------------------------------------------------------------------
C
C     FINALLY THE GAP-EQUATION AND PARTICLE-NUMBER ARE CHECKED AND PRINT
C     AND THE PAIRING ENERGY IS COMPUTED.
C
C-----------------------------------------------------------------------
C
      GPHALF = GP*0.5
      DEL2   = MAX(XMAXLW,DELTA*DELTA)
      GAPEQ  = ZERO
      PARTNM = ZERO
       DO 410 I=1,NMAX
       PARTNM = GW(I)*PH(I) + PARTNM
  410  GAPEQ  = GPHALF*PH(I)/SQRT(DEL2+(E(I)-EFERM)**2) + GAPEQ
C
      IF(IAB.GE.-1)
     & WRITE(6,'(A,I4,2(A,G13.5))')
     &  ' PAIR FINISHED WITH ',IT,' ITERATIONS: GAP-EQ.=',GAPEQ,
     &  '  PART.NR=',2.0*PARTNM
C
C     IN CASE OF INCOMPLETE CONVERGENCE PRINT A WARNING
C
      IF(IWR.GE.-1 .AND. IWARNG.EQ.1)
     & WRITE(6,'(2(A,G11.3),2(A,I3))')
     &  ' ---> NO CONVERGENCE IN PAIR! ERR(GAP-EQ)=',DGAP(1),
     &  '  ERR(PART.NR)=',DPARN(1),'  NPART=',NPART,'  NMZX=',NMAX
C
C      PAIRING ENERGY
C
      ENPAIR = - DELTA*DELTA/(GP+XMAXLW)
C
      RETURN
      END
C-----ZPECOR------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE ZPECOR
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     * * * * * *    CENTER-OF-MASS CORRECTION FOR THE ENERGY    * * * *
C
C     ALL NECESSARY INFORMATION IS HANDLED VIA COMMON'S.
C     INPUT IS:
C      IFZPE    IS THE SWITCH, ENTERED VIA 'NUMPAR'
C      WF       ARE THE WAVE FUNCTIONS, ENETERD VIA 'WAVFUN'
C     AND FURTHER INFORMATION ON SHELL ORDERING, GRID ETC, COMES
C     VIA THE ACCORDING COMMON'S (SEE THERE FOR FURTHER EXPLANATIONS).
C
C     OUTPUT IS:
C      ZPE      THE ZERO-POINT ENERGY, RETURNED VIA 'RESULT'
C
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
       COMMON /NUMPAR/ DABR,DABE,ADDNEW,EPSPR,X0DAMP,E0DAMP,
     &                 IFEX,IFTM,IFDFMS,IFZPE,IFRHOC,
     &                 ITMAX,ITPR,IWR,IFPLOT
       COMMON /SKYPAR/ T0,T1,T2,T3,T4,X0,X1,X2,X3, POWER,
     &                 PAIRFP,PAIRFN,      ACOUL,
     &                 T0A,T0B,T3A,T3B, T1P2,T1M2,T13M2,T1P23,
     &                 T13M23,T1P2X,T1M2X,T4H,T3AS,T3ASP,T3BS,
     &                 AMFC(2),
     &                 GPP,GPN,DELTP,DELTN,     IFPAIR(2)
      COMMON /WAVFUN/ WF(KX11),WFS(KX11),
     &                BMASS(KGR2),POT(KGR2),POTLS(KGR2),D1B(KGR2),
     &                RHO(KGR2),
     &                TAU(KGR2),SJ(KGR2),SJS(KGR2),D2R(KGR2),D1R(KGR2),
     &                AUX1(KG1),AUX2(KG1)
      COMMON /SHELLS/ WEIGHT(KSL2),WLS(19),
     &                APROT,ANEUT,ANUMB,EFEP,EFEN,
     &                JSP(46),JSMAX(2),NPLA(KNMXP,KJMX2),
     &                NPROT,NNEUT,NNUMB,NMAXP,NMAXN,NMINN,NMAXTO
       COMMON /RESULT/ HPSWID(KSL2),SPENRG(KSL2),
     &                 FORMF(KQMAX),RHOCHR(KG1),
     &                 RMS,RMSC,RMSP,RMSN,RDMS,RDMSC,RDMSP,RDMSN,
     &                 SURF,SURFC,SURFP,SURFN,RMSC0,RDMSC0,SURFC0,
     &                 ETOTAL,ESHL(2),ENREAR,EPAIR,ZPE
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
C-----------------------------------------------------------------------
C
C     CHECK WHETHER 'ZPE' IS WANTED
C
      IF(IFZPE.NE.1) THEN
       ZPE    = ZERO
      ELSE
C
C-----------------------------------------------------------------------
C
C      FULL EVALUATION OF MOMENTUM WIDTH <P**2> AND SUBSEQUENT CLASSICAL
C      ZPE CORRECTION.
C
C-----------------------------------------------------------------------
C
C      ISOSPIN LOOP. THE SAME ISOSPIN APPLIES FOR THE 'A'-STATE AND
C      THE 'B'-STATE, BECAUSE THE P-OPERATOR DOES NOT MIX ISOSPIN.
C
       DIAG   = 0.0
       OFFDIG = 0.0
       DO 10 ISO=1,2
       ISNPAD = (ISO-1)*KJMX
C
C      'A'-LOOP OVER THE ANGULAR MOMENTA 'JSA'.
C        THE DERIVED QUANTITIES ARE:
C         'XJA'   = TOTAL ANGULAR MOMENTUM
C         'XLA'   = ORBITAL ANGULAR MOMENTUM
C         'LA'    =    "       "       "      AS INTEGER
C
       DO 20 JSA=1,JSMAX(ISO)
       NMAXA  = NPLA(1,JSA+ISNPAD)
       IF(NMAXA.LE.0) GOTO 20
       XJA    = FLOAT((JSA-1)/2)+0.5
       LA     = JSA/2
       XLA    = ONE*LA
       XLA2   = XLA*XLA+XLA
C
C      THE DIAGONAL CONTRIBUTION FROM P**2.
C
       DO 30 NA=1,NMAXA
       NPTA   = NPLA(NA+1,JSA+ISNPAD)
       NPTMA  = NPTA-1
       SUM    = 0.0
       DO 35 I=2,NGRID
       SUM    = ( (WFS(I+NPTMA)*WFS(I+NPTMA))
     *           +(WF(I+NPTMA)*WF(I+NPTMA))*XLA2*ZENTRF(I) )
     *         + SUM
   35  CONTINUE
       SUM    = RSTEP*SUM
       DIAG   = WEIGHT(NPTA/NGRID+1)*(XJA+XJA+ONE)*SUM + DIAG
   30  CONTINUE
C
C      THE LOOP OVER THE 'B'-ANGULAR MOMENTA 'JSB'.
C        THE DERIVED QUANTITIES ARE:
C         'XJB'   = TOTAL ANGULAR MOMENTUM
C         'XLB'   = ORBITAL ANGULAR MOMENTUM
C         'LB'    =    "       "       "      AS INTEGER
C
       DO 40 JSB=1,JSA
       NMAXB  = NPLA(1,JSB+ISNPAD)
       IF(NMAXB.LE.0) GOTO 40
       XJB    = FLOAT((JSB-1)/2)+0.5
       LB     = JSB/2
       XLB    = ONE*LB
C
C      CHECK TRIANGULAR RELATION FOR ANGULAR MOMENTUM SELECTION RULES
C
       IF(MOD(LA+LB,2).NE.1) GOTO 40
       IF(IABS(LA-LB).GT.1) GOTO 40
       IF(ABS(XJA-XJB).GT.ONE) GOTO 40
C
C      COMPUTE FACTORS FOR REDUCED MATRIX ELEMENT.
C
       IF(IABS(LA-LB).EQ.1) THEN
        IF(XJA-XLA.EQ.XJB-XLB) THEN
         SIXFCU = SQRT((XLA+XJB+2.5)*(XLA+XJB-0.5)
     *                 /((XLA+XLA+ONE)*(XLB+XLB+ONE)))
        ELSE
         SIXFCU = SQRT((XJB-XLA+1.5)*(XLA-XJB+1.5)
     *                 /((XLA+XLA+ONE)*(XLB+XLB+ONE)))
     *            *2.0*(XJB-XLB)
        ENDIF
        IF(XLA.GT.XLB) THEN
         FACDRU = SQRT(XLA)
         FACCTU = -XLA
        ELSE
         FACDRU = -SQRT(XLB)
         FACCTU = XLB
        ENDIF
       ELSE
        SIXFCU = ZERO
        FACDRU = ZERO
        FACCTU = ZERO
       ENDIF
C
C      THE RADIAL MATRIX ELEMENTS FOR GIVEN JSA AND JSB, SUMS RUNNING
C      OVER ALL NA (TO JSA) AND NB (TO JSB).
C
       DO 50 NA=1,NMAXA
       NPTA   = NPLA(NA+1,JSA+ISNPAD)
       NPTMA  = NPTA-1
       V2A    = WEIGHT(NPTA/NGRID+1)
       UVA    = SQRT(V2A-V2A*V2A)
C
       DO 50 NB=1,NMAXB
       NPTB   = NPLA(NB+1,JSB+ISNPAD)
       NPTMB  = NPTB-1
       V2B    = WEIGHT(NPTB/NGRID+1)
       UVB    = SQRT(V2B-V2B*V2B)
C
       RADMTU = ZERO
       DO 60 I=2,NGRID
       RA     = (I-1)*RSTEP
       RADMTU = WF(I+NPTMB)
     *                   *(-WFS(I+NPTMA)+FACCTU*WF(I+NPTMA)/RA)
     *          + RADMTU
   60  CONTINUE
       RADMTU = RSTEP*RADMTU
       OFFDIG = (RADMTU*FACDRU*SIXFCU)**2*(V2A*V2B+UVA*UVB)
     *         + OFFDIG
C
   50  CONTINUE
   40  CONTINUE
   20  CONTINUE
   10  CONTINUE
C
C      FINALLY ASSEMBLING THE ZPE-CORRECTION  (IN MEV).
C
       PWIDTH = (DIAG-OFFDIG-OFFDIG)
       ZPE    = PWIDTH*HALF*(AMFC(1)+AMFC(2))/ANUMB
C
C      OPTIONALLY COMPARISION WITH SIMPLE ESTIMATES FOR 'ZPE'
C
       IF(IWR.GE.0) THEN
        WRITE(06,'(5(A,G12.5))') ' ZPE=',ZPE,' PWIDTH=',PWIDTH,
     *                ' DIAG=',DIAG,' OFFDIG=',OFFDIG
C
C      AVERAGE ZPE ADJUSTED TO SKYRME-HARTREE-FOCK RESULTS
C       (REPRODUCES TRENDS IN PARTICLE NUMBER, MISSES ISOTOPIC EFFECTS)
C
        ZPE1  = 17.3*ANUMB**(-0.2)
C
C      ESTIMATE FROM THE HARMONIC OSCILLATOR SHELL MODEL
C       (ONLY A ROUGH APPROACH)
C
        ZPE2  = .75*41.*ANUMB**(-0.3333333)
        WRITE(06,'(2(A,G12.5))') ' SCHEMATIC:  ZPE(POWER 1/3)=',ZPE2,
     *            ' ZPE(POWER 0.2)=',ZPE1
       ENDIF
C
      ENDIF
C
      RETURN
      END
C-----RADIUS------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE RADIUS
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     * * * * *    RMS-RADIUS, DMS-RADIUS AND SURFACE-THICKNESS    * * *
C     * * * *    FOR PROTON-, NEUTRON-, TOTAL- AND CHARGE-DENSITY    * *
C
C     THE CHARGE-DENSITY INCLUDES FOLDING WITH INTRINSIC ELECTRIC AND
C     MAGENTIC FORMFACTORS OF PROTON AND NEUTRON.
C
C     REQUIRED INFORMATION ON DENSITIES, GRIDSIZE AND 'ZPE'
C     IS TRANSFERRED VIA COMMON'S.
C     RESULTING RADII, FORMFACTOR AND CHARGE DENSITY ARE RETURNED
C     VIA COMMON /RESULT/.
C
C     THE FOLLOWING FIELDS 'FOC' ETC ARE WORKSPACE FOR FORMFACTORS:
C      FOC    = COMPLETE CHARGE FORMFACTOR, INCLUDING ALSO THE FOLDING W
C               THE ANOMALOUS MAGNETIC MOMENT
C      FOC0   = CHARGE FORMFACTOR, INCLUDING FOLDING ONLY WITH ELECTRIC
C               NUCLEON DISTRIBUTION
C      FOP    = FORMFACTOR OF THE PROTON DISTRIBUTION
C      FON    = FORMFACTOR OF THE NEUTORN DISTRIBUTION
C      FO     = FORMFACTOR OF THE TOTAL NUCLEON DISTRIBUTION
C
      DIMENSION FOC(KQMAX),FOP(KQMAX),FON(KQMAX),FO(KQMAX),FOC0(KQMAX)
C
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
       COMMON /RESULT/ HPSWID(KSL2),SPENRG(KSL2),
     &                 FORMF(KQMAX),RHOCHR(KG1),
     &                 RMS,RMSC,RMSP,RMSN,RDMS,RDMSC,RDMSP,RDMSN,
     &                 SURF,SURFC,SURFP,SURFN,RMSC0,RDMSC0,SURFC0,
     &                 ETOTAL,ESHL(2),ENREAR,EPAIR,ZPE
       COMMON /NUMPAR/ DABR,DABE,ADDNEW,EPSPR,X0DAMP,E0DAMP,
     &                 IFEX,IFTM,IFDFMS,IFZPE,IFRHOC,
     &                 ITMAX,ITPR,IWR,IFPLOT
      COMMON /WAVFUN/ WF(KX11),WFS(KX11),
     &                BMASS(KGR2),POT(KGR2),POTLS(KGR2),D1B(KGR2),
     &                RHO(KGR2),
     &                TAU(KGR2),SJ(KGR2),SJS(KGR2),D2R(KGR2),D1R(KGR2),
     &                AUX1(KG1),AUX2(KG1)
      COMMON /SHELLS/ WEIGHT(KSL2),WLS(19),
     &                APROT,ANEUT,ANUMB,EFEP,EFEN,
     &                JSP(46),JSMAX(2),NPLA(KNMXP,KJMX2),
     &                NPROT,NNEUT,NNUMB,NMAXP,NMAXN,NMINN,NMAXTO
       COMMON /SKYPAR/ T0,T1,T2,T3,T4,X0,X1,X2,X3, POWER,
     &                 PAIRFP,PAIRFN,      ACOUL,
     &                 T0A,T0B,T3A,T3B, T1P2,T1M2,T13M2,T1P23,
     &                 T13M23,T1P2X,T1M2X,T4H,T3AS,T3ASP,T3BS,
     &                 AMFC(2),
     &                 GPP,GPN,DELTP,DELTN,     IFPAIR(2)
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
C-----------------------------------------------------------------------
C
C     COMPUTE 'CMWID' AS WIDTH FOR FOR C.M.CORRECTION ON THE FORMFACTOR
C
      IF(IFZPE.EQ.0) THEN
       CMWID  = 1.58/(6.0*ANUMB**0.66666667)
      ELSE
       CMWID  = 0.375*0.5*(AMFC(1)+AMFC(2))/(ANUMB*ZPE)
      ENDIF
C
C      FORMFACTOR BY FOURIER-BESSEL TRANSFORMATION
C
C                                                 Q=0.0 SEPARATELY
      SUMP   = ZERO
      SUMN   = ZERO
      SUMSP  = ZERO
      R      = ZERO
       DO 500 IR=2,NGRID
       R     = RSTEP+R
       SUMP   = R*R*RHO(IR)+SUMP
       SUMN   = R*R*RHO(IR+NGRID)+SUMN
  500  CONTINUE
      FOC0(1) = FRPIRS*SUMP
      FOP(1)  = FOC0(1)
      FON(1)  = FRPIRS*SUMN
      FO(1)   = FOP(1)+FON(1)
      FOC(1)  = FOC0(1)
C                                                      ALL OTHER Q
      DO 530 IQ=2,IQMAX
      Q1     = IQ*DELQ-DELQ
      CALL FOURF(Q1,CMWID,FOC0(IQ),FOP(IQ),FON(IQ),FO(IQ),FOC(IQ))
  530 CONTINUE
C
C     FINDING FIRST DIFFRACTION RADII 'RDMS..' AT FIRST ZERO
C     OF THE FORMFACTOR,
C
C     THE ENDINGS INDICATE THE TYPE OF RADIUS:
C      ....C  = RADIUS OF THE COMPLETE CHARGE DISTRIBUTION
C      ....C0 = RADIUS OF THE CHARGE DISTRIBUTION WITHOUT SPIN-ORBIT EFF
C      ....P  = RADIUS OF THE PROTON DISTRIBUTION
C      ....N  = RADIUS OF THE NEUTRON DISTRIBUTION
C      ....   = RADIUS OF THE TOTAL MASS DISTRIBUTION
C
      RDMSC  = 4.493/QZERO(FOC,1)
      IF(IWR.GE.-1) THEN
       RDMSC0 = 4.493/QZERO(FOC0,1)
       RDMS   = 4.493/QZERO(FO,1)
       RDMSP  = 4.493/QZERO(FOP,1)
       RDMSN  = 4.493/QZERO(FON,1)
      ENDIF
      RDMSCA=RDMSC/ANUMB**.3333333
C
C      EVALUATING SURFACE WIDTH FROM HEIGHT OF FIRST MAXIMUM.
C      THE 'Q1'="MOMENTUM_OF_FIRST_MAXIMUM" IS ESTIMATED FROM
C      'RDMSC' AS IN A SQUARE-WELL DENSITY-DISTRIBUTION.
C
      Q1     = 5.600/RDMSC
      QR     = Q1*RDMSC
      SURFC  = SQRT(ABS(2./(Q1*Q1)*LOG(ABS((SIN(QR)/QR-COS(QR))
     &              *3.*NPROT/(QR*QR*FBINT(Q1,FOC))))))
      IF(IWR.GE.-1) THEN
       QR     = Q1*RDMS
       SURF   = SQRT(ABS(2./(Q1*Q1)*LOG(ABS((SIN(QR)/QR-COS(QR))
     &               *3.*(NPROT+NNEUT)/(QR*QR*FBINT(Q1,FO))))))
       QR     = Q1*RDMSP
       SURFP  = SQRT(ABS(2./(Q1*Q1)*LOG(ABS((SIN(QR)/QR-COS(QR))
     &               *3.*NPROT/(QR*QR*FBINT(Q1,FOP))))))
       QR     = Q1*RDMSN
       SURFN  = SQRT(ABS(2./(Q1*Q1)*LOG(ABS((SIN(QR)/QR-COS(QR))
     &            *3.*NNEUT/(QR*QR*FBINT(Q1,FON))))))
       QR     = Q1*RDMSC
       SURFC0 = SQRT(ABS(2./(Q1*Q1)*LOG(ABS((SIN(QR)/QR-COS(QR))
     &            *3.*NPROT/(QR*QR*FBINT(Q1,FOC0))))))
      ENDIF
C
C     RMS-RADII FROM CURVATURE OF FORMFACTOR AT Q=0.
C     THE CURVATURE IS COMPUTED BY 5-POINT FINITE DIFFERENCES
C     WITH STEPSIZE 'DQT'.
C
      DQT    = DELQ/4.0
      DQTD2  = 6.0/(DQT*DQT)
      RMSC   = SQRT(ABS(DQTD2*(1.25*FOC(1)-1.33333333*FBINT(DQT,FOC)
     &                       +FBINT(DQT+DQT,FOC)/12.0)/FOC(1) ))
      IF(IWR.GE.-1) THEN
       RMSC0  = SQRT(ABS(DQTD2*(1.25*FOC0(1)-1.33333333*FBINT(DQT,FOC0)
     &                        +FBINT(DQT+DQT,FOC0)/12.0)/FOC0(1) ))
       RMSP   = SQRT(ABS(DQTD2*(1.25*FOP(1)-1.33333333*FBINT(DQT,FOP)
     &                        +FBINT(DQT+DQT,FOP)/12.0)/FOP(1) ))
       RMSN   = SQRT(ABS(DQTD2*(1.25*FON(1)-1.33333333*FBINT(DQT,FON)
     &                        +FBINT(DQT+DQT,FON)/12.0)/FON(1) ))
       RMS    = SQRT(ABS(DQTD2*(1.25*FO(1)-1.33333333*FBINT(DQT,FO)
     &                        +FBINT(DQT+DQT,FO)/12.0)/FO(1) ))
      ENDIF
C
C     SAVE COMPLETE CHARGE FORMFACTOR ON 'FORMF'.
C
      DO 540 IQ=1,IQMAX
  540 FORMF(IQ)=FOC(IQ)
C
C     TESTPRINTS OF CONTRIBUTION FROM ANOMALOUS MAGNETIC MOMENT
C
      IF(IWR.GE.0) THEN
       WRITE(06,'(/A,20(/1X,10G12.4))') ' FOC0:',
     &                 (FOC0(IQ),IQ=1,IQMAX)
       WRITE(06,'(A,20(/1X,10G12.4))') ' FOC:',
     &                 (FOC(IQ),IQ=1,IQMAX)
      ENDIF
C
C     CHARGE DENSITY BY FOURIER BACK-TRANSFORMATION
C
      DPI3   = HALF/(PI*PI)
C                                                         R=0.0 SEPARATE
      SUM    = ZERO
      DO 550 IQ=2,IQMAX
      QA     = DELQ*IQ-DELQ
  550 SUM    = QA*QA*FORMF(IQ)+SUM
      RHOCHR(1) = ABS(SUM*DELQ*DPI3)
C                                                         NOW ALL OTHER
      R      = ZERO
      DO 590 IR=2,NGRID
      R      = RSTEP+R
C
      DC     = COS(R*DELQ)
      DS     = SIN(R*DELQ)
      C      = ONE
      S      = ZERO
      SUM    = ZERO
      QA     = ZERO
      DO 595 IQ=2,IQMAX
      QA     = DELQ+QA
      X      = C*DC-S*DS
      S      = S*DC+C*DS
      C      = X
      SUM    = QA*S*FOC(IQ)+SUM
  595 CONTINUE
      RHOCHR(IR) = ABS(SUM*DELQ*DPI3/R)
C
  590 CONTINUE
C
C     PRINT RESULTS
C
      IF(IWR.GE.-1)
     & WRITE(06,'(/16X,A,5(/1X,A,3G13.4))')
     &   ' DIFF.RADIUS    SURFACE     RMS-RADIUS',
     &   ' CHARGE DENSITY:',RDMSC,SURFC,RMSC,
     &   '   MASS DENSITY:',RDMS,SURF,RMS,
     &   ' PROTON DENSITY:',RDMSP,SURFP,RMSP,
     &   'NEUTRON DENSITY:',RDMSN,SURFN,RMSN,
     &   ' CHARGE NO S.O.:',RDMSC0,SURFC0,RMSC0
C
      IF(IWR.GE.-1) WRITE(06,'(/A,50(/1X,10G13.5))')
     &            ' CHARGE DENSITY:', (RHOCHR(I),I=1,NGRID)
C
      RETURN
      END
C-----FOURF ------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE FOURF(Q1,CMWID,FOC0,FOP,FON,FO,FOC)
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     INPUT PARAMETERS:
C      Q1    : RADIAL MOMENTUM AT WHICH THE FOURIER-TRANSFORMATION
C              IS TO BE EVALUATED
C      CMWID : PARAMETER FOR CENTER OF MASS CORRECTION
C     OUTPUT PARAMATERS:
C      FOC0 :   CHARGE FORMFACTOR
C      FOP  :   PROTON "
C      FON  :   NEUTRON    "
C      FO   :   TOTAL      "
C      FOC  :   CHARGE     "   INCLUDING ANOMALOUS MAGNETIC MOMENT
C
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
       COMMON /NUMPAR/ DABR,DABE,ADDNEW,EPSPR,X0DAMP,E0DAMP,
     &                 IFEX,IFTM,IFDFMS,IFZPE,IFRHOC,
     &                 ITMAX,ITPR,IWR,IFPLOT
      COMMON /WAVFUN/ WF(KX11),WFS(KX11),
     &                BMASS(KGR2),POT(KGR2),POTLS(KGR2),D1B(KGR2),
     &                RHO(KGR2),
     &                TAU(KGR2),SJ(KGR2),SJS(KGR2),D2R(KGR2),D1R(KGR2),
     &                AUX1(KG1),AUX2(KG1)
      COMMON /SHELLS/ WEIGHT(KSL2),WLS(19),
     &                APROT,ANEUT,ANUMB,EFEP,EFEN,
     &                JSP(46),JSMAX(2),NPLA(KNMXP,KJMX2),
     &                NPROT,NNEUT,NNUMB,NMAXP,NMAXN,NMINN,NMAXTO
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
C      THE PARAMETERS IN DATA ARE FOR THE SACHS-FORMFACTORS:
C       SA..,SM.. ARE FOR THE ISOSCALAR ELECTRIC FORMFACTOR
C       VA..,VM.. ARE FOR THE ISOVECTOR ELECTRIC FORMFACTOR
C       GP..,GM.. ARE FOR THE MAGNETIC FORMFACTORS OF PROTON AND NEUTRON
C
C       ISOSCALAR AND ISOVECTOR FORMFACTORS ARE RECOUPLED TO
C       THE ELECTRIC FORMFACTORS OF PROTON AND NEUTRON.
C
C     THE SACHS-FORMFACTORS ARE THEN RECOUPLED TO THE NUCLEON
C     VECTOR FORMFACTOR (FORM1..) AND THE NUCLEON TENSOR
C     FORMFACTOR (FORM2..).
C
C
C     PARAMETERS FOR SCALAR AND VECTOR ELECTRIC FORMFACTOR
C     (WALTHER, PRIV.COMM., SEPT. 86)
C
      DATA    SA1,    SA2,    SA3,   SA4,   SM1,  SM2,  SM3,  SM4
     *    /2.2907,-0.6777,-0.7923,0.1793, 15.75,26.68,41.01,134.2/
      DATA    VA1,    VA2,    VA3,   VA4,   VM1,  VM2,  VM3,  VM4
     *    /0.3681, 1.2263,-0.6316,0.0372,  5.00,15.02,44.08,154.2/
C
C     MAGNETIC FORMFACTOR , SIMON ET AL N.P. A333 (1980) 381
C
      DATA    GP1,    GP2,    GP3,   GP4,   GM1,  GM2,  GM3,  GM4
     *    / 0.694,  0.719,-0.418 ,0.005 ,  8.50,15.02,44.08,355.4/
C
C     THE ANOMANLOUS MAGNETIC MOMENTS AND THE DARWIN FACTOR 'D4M'
C
      DATA XMGNE,XMGPR,D4M/.04197,-.06131,.010989/
C
C----------------------------------------------------------------
C
C     FOURIER-BESSEL TRANSFORMATION FOR PROTON- AND NEUTRON-DENSITY
C     GIVEN ON FIELD 'RHO' ON COMMON /WAVFUN/.
C
      DC     = COS(Q1*RSTEP)
      DS     = SIN(Q1*RSTEP)
      R      = ZERO
      SUMP   = ZERO
      SUMN   = ZERO
      C      = ONE
      S      = ZERO
       DO 10 I=2,NGRID
       R      = RSTEP+R
       X      = C*DC-S*DS
       S      = S*DC+C*DS
       C      = X
       SUMP   = R*S*RHO(I)+SUMP
       SUMN   = R*S*RHO(I+NGRID)+SUMN
   10  CONTINUE
      SUMP   = FRPIRS*SUMP/Q1
      SUMN   = FRPIRS*SUMN/Q1
C
C     FOURIER-BESSEL TRANSFORMATION FOR SPIN-ORBIT DENSITY OF
C     PROTONS AND NEUTRONS GIVEN ON FIELD 'SJS'.
C
      SUMSP  = ZERO
      SUMSN  = ZERO
      R      = ZERO
      C      = ONE
      S      = ZERO
       DO 20 I=2,NGRID
       R      = RSTEP+R
       X      = C*DC-S*DS
       S      = S*DC+C*DS
       C      = X
       SUMSP  = R*S*SJS(I)+SUMSP
       SUMSN  = R*S*SJS(I+NGRID)+SUMSN
   20  CONTINUE
      SUMSP=FRPIRS*SUMSP/Q1
      SUMSN=FRPIRS*SUMSN/Q1
C
C      FOLDING WITH FREE NUCLEON FORMFACTOR PARAMETRISED
C      BY SUM OF LORENTZIANS, SEE DATA ON SA.., VA..  AND GP..
C
C      ISOSCALAR AND ISOVECTOR ELECTRICAL FORMACTORS ON 'SCHSES'
C      AND 'SCHSEV', RECOUPLED THEN TO PROTON AND NEUTRON ELECTRIC
C      FORMFACTORS  'SCHSEP' AND 'SCHSEN'. PROTON AND NEUTRON
C      MAGNETIC FORMFACTOR ON 'SCHSMP' AND 'SCHSMN'.
C
      QA     = Q1*Q1
      SCHSES = SA1/(1.+QA/SM1)+SA2/(1.+QA/SM2)+SA3/(1.+QA/SM3)
     &        +SA4/(1.+QA/SM4)
      SCHSEV = VA1/(1.+QA/VM1)+VA2/(1.+QA/VM2)+VA3/(1.+QA/VM3)
     &        +VA4/(1.+QA/VM4)
      SCHSEP = HALF*(SCHSES+SCHSEV)
      SCHSEN = HALF*(SCHSES-SCHSEV)
      SCHSM  = ( GP1/(ONE+QA/GM1)+GP2/(ONE+QA/GM2)+GP3/(ONE+QA/GM3)
     &          +GP4/(ONE+QA/GM4) )
      SCHSMP = SCHSM*XMGPR - SCHSEP*D4M
      SCHSMN = SCHSM*XMGNE - SCHSEN*D4M
C
      SUMC   = SUMP*SCHSEP+SUMN*SCHSEN
C
C      FACTOR FOR DARWIN CORRECTION 'DARFAC'
C      AND THE FACTOR FOR THE C.M. CORRECTION 'EXPHF'.
C
      QA     = Q1*Q1
      DARFAC = ONE/SQRT(ONE+QA*D4M)
      EXPHF  = EXP(CMWID*QA)
C
C     FINALLY ASSEMBLING THE FORMFACTORS
C
      FOC0   = EXPHF*SUMC
      FOP    = EXPHF*SUMP
      FON    = EXPHF*SUMN
      FO     = EXPHF*(SUMP+SUMN)
      FOC    = EXPHF*(SUMC*DARFAC + (SCHSMP*SUMSP+SCHSMN*SUMSN))
C
      RETURN
      END
C-----FBINT ------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      FUNCTION FBINT(Q,FORMFA)
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     EVALUATES AND RETURNS FORMFACTOR AT THE MOMENTUM 'Q' BY
C     FOURIER-BESSEL INTERPOLATION
C     FROM FORMFACTORS AT FOURIER-GRID POINTS GIVEN ON ARRAY 'FORMFA'.
C
C     GRID PROPERTIES ARE TRANSFERRED VIA COMMON /GRID/
C
      DIMENSION FORMFA(KQMAX)
C
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
C     'PRECIS' DEFINES THE NEIGHBOURHOOD OF A POLE-TERM FOR WHICH THE
C     ROUTINE SWITCHES TO AN EXPLICIT LAURENT EXPANSION.
C
      DATA PRECIS/1.E-2/
C
C-----------------------------------------------------------------------
C
      QEFF   = Q*RLENG
      XFX    = (QEFF/PI)
      XFX2   = XFX*XFX
      IXFX   = (XFX+PRECIS)
C
C     THE FOURIER-BESSEL INTERPOLATION RUNS INTO PROBLEMS WITH ROUND-OFF
C     ERRORS IF 'QEFF' COMES TOO CLOSE TO A MULTIPLE OF 'PI'. WE SWITCH
C     TO AN EXPLICIT TREATMENT OF THE POLE-TERM IN THAT CASE (I.E. FIRST
C     CASE IN THE IF-CLOSURE).
C
      IF(ABS(XFX-IXFX) .LT. PRECIS) THEN
C                                             POLE TERM SEPARATELY
       IPOLE  = IXFX+1
       SIGNUM = -ONE
       SUM    =  ZERO
       DO 20 I=2,IQMAX
       SIGNUM = -SIGNUM
   20  IF(I.NE.IPOLE)
     *  SUM    = FORMFA(I)*SIGNUM/(ONE-XFX2/FLOAT((I-1)*(I-1))) + SUM
       SIGNUM = (MOD(IPOLE,2)*2-1)
       QDIF   = (XFX-IXFX)
       SUM2   = SIGNUM*FORMFA(IPOLE)*(IXFX*IXFX)/((IXFX+IXFX)+QDIF)
       QDIF   = QDIF*PI
       SINQ   = (ONE-QDIF*QDIF*0.166666667)*SIGNUM
       FBINT  = 2.0*(SUM*QDIF+SUM2*PI)*SINQ/QEFF
      ELSE
C                                             NORMAL CASE
       SIGNUM = -ONE
       SUM    = ZERO
       DO 10 I=2,IQMAX
       SIGNUM = -SIGNUM
   10  SUM    = FORMFA(I)*SIGNUM/(ONE-XFX2/FLOAT((I-1)*(I-1))) + SUM
       FBINT  = (SUM+SUM)*SIN(QEFF)/QEFF
      ENDIF
C
      RETURN
      END
C-----QZERO ------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      FUNCTION QZERO(FOIN,IQSTRT)
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     EVALUATES AND RETURNS THE MOMENTUM AT WHICH THE FORMFACTOR
C     GIVEN ON ARRAY 'FOIN' HAS A ZERO.
C     SCAN FOR ZERO STARTS AT THE FIELD POSITION 'IQSTRT'.
C
      DIMENSION FOIN(KQMAX)
C
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
C     SOME NUMERICAL PARAMETERS FOR TERMINATION OF THE SEARCH
C
      DATA ITQ0MX,ENDQ0/3,0.0001/
C
C---------------------------------------------------------------------
C
C     SCAN CHANGING SIGN IN 'FOIN'.
C      'IQ1' IS POSITION BEFORE THE ZERO AND 'IQ1' AFTER THE ZERO.
C
      IQMAXM = IQMAX-1
      DO 10 ISCAN=IQSTRT,IQMAXM
      IF(FOIN(ISCAN)*FOIN(ISCAN+1).LE.ZERO) GOTO 19
   10 CONTINUE
   19 CONTINUE
      IQ1   = ISCAN
      IQ2   = IQ1+1
      IF(FOIN(IQ1).LE.ZERO) IQ2   = IQ1-1
      Q1    = IQ1*DELQ-DELQ
      Q2    = IQ2*DELQ-DELQ
      F1    = FOIN(IQ1)
      F2    = FOIN(IQ2)
C
C     COME CLOSER TO 'FOIN'=0.0 BY REPEATED LINEAR, INTERPOLATION.
C
      Q3     = Q1-F1*(Q2-Q1)/(F2-F1)
      DO 20 ITQ0=1,ITQ0MX
      F3     = FBINT(Q3,FOIN)
      IF(F1*F3.GT.ZERO) THEN
       Q1     = Q3
       F1     = F3
      ELSE
       Q2     = Q3
       F2     = F3
      ENDIF
      Q3OLD  = Q3
      Q3     = Q1-F1*(Q2-Q1)/(F2-F1)
      IF(ABS(Q3-Q3OLD).LT.ENDQ0) GOTO 29
   20 CONTINUE
   29 CONTINUE
C
C     IMPROVE POSITION OF THE ZERO BY QUADRATIC INTERPOLATION:
C
C                         THE COEFFICIENTS OF THE INTERPOLATING BINOMIAL
C
      F1     = FBINT(Q1,FOIN)
      F2     = FBINT(Q2,FOIN)
      F3     = FBINT(Q3,FOIN)
      CA     = ONE/((Q1-Q2)*(Q2-Q3)*(Q3-Q1))
      C1     = CA*(Q3*(Q3-Q2)*Q2*F1+Q1*(Q1-Q3)*Q3*F2+Q2*(Q2-Q1)*Q1*F3)
      C2     = CA*((Q2*Q2-Q3*Q3)*F1+(Q3*Q3-Q1*Q1)*F2+(Q1*Q1-Q2*Q2)*F3)
      C3     = ((Q3-Q2)*F1+(Q1-Q3)*F2+(Q2-Q1)*F3)*CA
C
C                         THE TWO ZEROES OF THE INTERPOLATING BINOMIAL
C
      QA1    = ( SQRT(ABS(C2*C2-4.*C1*C3))-C2)/(C3+C3)
      QA2    = (-SQRT(ABS(C2*C2-4.*C1*C3))-C2)/(C3+C3)
C
C                         SELECT THE ZERO WHICH IS CLOSER TO Q3
C
      Q      = QA1
      IF(ABS(QA1-Q3).GT.ABS(QA2-Q3)) Q=QA2
C
C     RETURN ZERO THUS FOUND.
C
      QZERO  = Q
C
      RETURN
      END
C-----DRPOT ------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE DRPOT(IFILE)
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     PRINTS DENSITIES AND POTENTIALS ON UNIT 'IFILE'.
C
C     THE PRINTED FIELDS AND LENGTH OF THE ARRAYS ARE TRSNFERRED
C     VIA COMMON'S, SEE THE INCLUDE STATEMENTS.
C
      COMMON /WAVFUN/ WF(KX11),WFS(KX11),
     &                BMASS(KGR2),POT(KGR2),POTLS(KGR2),D1B(KGR2),
     &                RHO(KGR2),
     &                TAU(KGR2),SJ(KGR2),SJS(KGR2),D2R(KGR2),D1R(KGR2),
     &                AUX1(KG1),AUX2(KG1)
      COMMON /SHELLS/ WEIGHT(KSL2),WLS(19),
     &                APROT,ANEUT,ANUMB,EFEP,EFEN,
     &                JSP(46),JSMAX(2),NPLA(KNMXP,KJMX2),
     &                NPROT,NNEUT,NNUMB,NMAXP,NMAXN,NMINN,NMAXTO
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
       COMMON /NUMPAR/ DABR,DABE,ADDNEW,EPSPR,X0DAMP,E0DAMP,
     &                 IFEX,IFTM,IFDFMS,IFZPE,IFRHOC,
     &                 ITMAX,ITPR,IWR,IFPLOT
       COMMON /RESULT/ HPSWID(KSL2),SPENRG(KSL2),
     &                 FORMF(KQMAX),RHOCHR(KG1),
     &                 RMS,RMSC,RMSP,RMSN,RDMS,RDMSC,RDMSP,RDMSN,
     &                 SURF,SURFC,SURFP,SURFN,RMSC0,RDMSC0,SURFC0,
     &                 ETOTAL,ESHL(2),ENREAR,EPAIR,ZPE
C
C-----------------------------------------------------------------------
C
C     POTENTIALS, ONLY ON STANDARD WRITE-UNIT '6'
C
      IF(IFILE.EQ.6) THEN
       WRITE(IFILE,38) 'INVERSE MASS:',(BMASS(I),I=1,NGRID)
       WRITE(IFILE,39)   (BMASS(I),I=NGRIDP,NGRID2)
       WRITE(IFILE,38) 'POTENTIAL:',(   POT(I),I=1,NGRID)
       WRITE(IFILE,39)      (POT(I),I=NGRIDP,NGRID2)
       WRITE(IFILE,38) 'L*S-POT.:',(    POTLS(I),I=1,NGRID)
       WRITE(IFILE,39)      ( POTLS(I),I=NGRIDP,NGRID2)
      ENDIF
C
C     THE PROTON AND NEUTRON DENSITY
C
      WRITE(IFILE,38) '     DENSITY:',(RHO(I),I=1,NGRID)
      WRITE(IFILE,39)   (RHO(I),I=NGRIDP,NGRID2)
C
C     FURTHER DENSITIES, ONLY ON STANDARD WRITE-UNIT '6'
C
      IF(ITMAX.LE.1 .AND. IFILE.EQ.6) THEN
       WRITE(IFILE,38) ' KIN.-DENSI.:',(TAU(I),I=1,NGRID)
       WRITE(IFILE,39)   (TAU(I),I=NGRIDP,NGRID2)
       WRITE(IFILE,38) ' SPIN-DENSI.:',( SJ(I),I=1,NGRID)
       WRITE(IFILE,39)   ( SJ(I),I=NGRIDP,NGRID2)
       WRITE(IFILE,38) 'SPINS-DENSI.:',(SJS(I),I=1,NGRID)
       WRITE(IFILE,39)   (SJS(I),I=NGRIDP,NGRID2)
       WRITE(IFILE,38) ' D/DR-DENSI.:',(D1R(I),I=1,NGRID)
       WRITE(IFILE,39)   (D1R(I),I=NGRIDP,NGRID2)
       WRITE(IFILE,38) ' D/DR**2-DE.:',(D2R(I),I=1,NGRID)
       WRITE(IFILE,39)   (D2R(I),I=NGRIDP,NGRID2)
      ENDIF
C
C     SINGLE PARTICLE PROPERTIES
C
      WRITE(IFILE,40)
   40 FORMAT(/1X,'SINGLE PARTICLE ENERGIES:')
      WRITE(IFILE,45) (SPENRG(I),I=1,NMAXP)
      WRITE(IFILE,39) (SPENRG(I),I=NMINN,NMAXTO)
      WRITE(IFILE,41)
   41 FORMAT(/1X,'SINGLE PARTICLE OCCUPATION WEIGHTS:')
      WRITE(IFILE,45) (WEIGHT(I),I=1,NMAXP)
      WRITE(IFILE,39) (WEIGHT(I),I=NMINN,NMAXTO)
C
      RETURN
C
   38 FORMAT(/1X,A/1X,' PROTONS',20(/1X,10G13.5))
   39 FORMAT(1X,' NEUTRONS',20(/1X,10G13.5))
   45 FORMAT (1X,' PROTONS',20(/1X,10G13.5))
C
      END
C-----PRIWF ------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE PRIWF(IFILE)
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     PRINTING THE SINGLE PARTICLE WAVE FUNCTIONS ON UNIT 'IFILE'.
C
C     THE PRINTED INFORMATION IS TRANSFERRED VIA COMMON'S.
C
      COMMON /WAVFUN/ WF(KX11),WFS(KX11),
     &                BMASS(KGR2),POT(KGR2),POTLS(KGR2),D1B(KGR2),
     &                RHO(KGR2),
     &                TAU(KGR2),SJ(KGR2),SJS(KGR2),D2R(KGR2),D1R(KGR2),
     &                AUX1(KG1),AUX2(KG1)
      COMMON /SHELLS/ WEIGHT(KSL2),WLS(19),
     &                APROT,ANEUT,ANUMB,EFEP,EFEN,
     &                JSP(46),JSMAX(2),NPLA(KNMXP,KJMX2),
     &                NPROT,NNEUT,NNUMB,NMAXP,NMAXN,NMINN,NMAXTO
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
C
C-----------------------------------------------------------------------
C
C     LOOP OVER ISOSPIN
C
      DO 40 ISO=1,2
      ISADD  = NGRID*NMAXP*(ISO-1)
      WRITE(06,43) ISO
43    FORMAT(//1X,'THE SINGLE PARTICLE WAVE FUNCTIONS FOR ISO=',I3)
      IF(ISO.EQ.1) THEN
       NEND   = NMAXP
      ELSE
       NEND   = NMAXN
      ENDIF
C
C     LOOP OVER STATES IN OSCILLATOR ORDERING
C
      DO 42 NSHL=1,NEND
      JS     = JSP(NSHL)
      LL     = JS/2
      J2     = ((JS+1)/2)*2-1
      IE     = NSHL*NGRID+ISADD
      IA     = IE-NGRID+1
C
      WRITE(06,44) NSHL,J2,LL,(WF(I),I=IA,IE)
   44 FORMAT(/1X,'NSHL=',I3,'J=',I3,'/2  L=',I3,20X,
     &        G13.5,40(/1X,10G13.5))
C
   42 CONTINUE
C
   40 CONTINUE
C
      RETURN
      END
C-----PLOT  ------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE PLOT(IFILE)
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     PRINTING DENSITIES AND SINGLE PARTICLE ENERGIES IN COLUMNS
C     SUCH THAT THE PRINTOUT CAN EASILY BE READ BY MANY PLOTTING
C     SYSTEMS.
C     OUTPUT IS WRITTEN ON UNIT 'IFILE'.
C     PRINTED INFORMATION IS TRANSFERRED VIA COMMON'S.
C
      COMMON /WAVFUN/ WF(KX11),WFS(KX11),
     &                BMASS(KGR2),POT(KGR2),POTLS(KGR2),D1B(KGR2),
     &                RHO(KGR2),
     &                TAU(KGR2),SJ(KGR2),SJS(KGR2),D2R(KGR2),D1R(KGR2),
     &                AUX1(KG1),AUX2(KG1)
      COMMON /SHELLS/ WEIGHT(KSL2),WLS(19),
     &                APROT,ANEUT,ANUMB,EFEP,EFEN,
     &                JSP(46),JSMAX(2),NPLA(KNMXP,KJMX2),
     &                NPROT,NNEUT,NNUMB,NMAXP,NMAXN,NMINN,NMAXTO
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
       COMMON /NUMPAR/ DABR,DABE,ADDNEW,EPSPR,X0DAMP,E0DAMP,
     &                 IFEX,IFTM,IFDFMS,IFZPE,IFRHOC,
     &                 ITMAX,ITPR,IWR,IFPLOT
       COMMON /RESULT/ HPSWID(KSL2),SPENRG(KSL2),
     &                 FORMF(KQMAX),RHOCHR(KG1),
     &                 RMS,RMSC,RMSP,RMSN,RDMS,RDMSC,RDMSP,RDMSN,
     &                 SURF,SURFC,SURFP,SURFN,RMSC0,RDMSC0,SURFC0,
     &                 ETOTAL,ESHL(2),ENREAR,EPAIR,ZPE
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
C-----------------------------------------------------------------------
C
C     SOME GLOBAL INFOMATION AS A HEADER
C
      WRITE(IFILE,'(3(A,G13.5)/3(A,G13.5))')
     &        '   MASS RADII: RMS=',RMS,
     &        '  RDMS=',RDMS,'  SURFACE=',SURF,
     &        ' CHARGE RADII: RMS=',RMSC,
     &        '  RDMS=',RDMSC,'  SURFACE=',SURFC
      WRITE(IFILE,'(3(A,1PG12.5))')
     &        '  TOTAL ENERGY=',ETOTAL,
     &                '   ZPE=',ZPE,'  EPAIR=',EPAIR
C
C     PRINT SINGLE PARTICLE ENERGIES AND OCCUPATION WEIGHTS
C
      IF(IFPLOT.GE.1) THEN
       WRITE(IFILE,'(/2A)') '  PROTON SPECTRUM:  J     L',
     &       '    ENERGY       WEIGHT'
       DO 20 NSHL=1,NMAXP
       JS=JSP(NSHL)
       LL=JS/2
       IF(2*LL.EQ.JS) JS=JS-1
       WRITE(IFILE,'(18X,I3,A,I5,2G13.5)') JS,'/2',LL,
     &       SPENRG(NSHL),WEIGHT(NSHL)
   20  CONTINUE
       WRITE(IFILE,'(2A)') ' NEUTRON SPECTRUM:  J     L',
     &       '    ENERGY       WEIGHT'
       DO 30 NSHLN=1,NMAXN
       NSHL=NSHLN+NMAXP
       JS=JSP(NSHLN)
       LL=JS/2
       IF(2*LL.EQ.JS) JS=JS-1
       WRITE(IFILE,'(18X,I3,A,I5,2G13.5)') JS,'/2',LL,
     &       SPENRG(NSHL),WEIGHT(NSHL)
   30  CONTINUE
      ENDIF
C
C     PRINT DENSITIES IN PLOT FORMAT
C
      IF(IFPLOT.GE.2) THEN
       WRITE(IFILE,'(A/2A)')  ' PLOT THE DENSITIES:',
     &     '  I     R        RHO-COUL      RHO-PROT   ',
     &     '   RHO-NEUT     RHO-MASS'
       DO 10 I=1,NGRID
       R=(I-1)*RSTEP
       WRITE(IFILE,'(I5,F7.3,2X,4G14.5)')  I,R,RHOCHR(I),
     &         RHO(I),RHO(I+NGRID),(RHO(I)+RHO(I+NGRID))
   10  CONTINUE
      ENDIF
C
C     PRINT FORMFACTOR
C
      IF(IFPLOT.GE.3) THEN
       WRITE(IFILE,'(/A)')
     &   ' CHARGE FORMFACTOR:   Q      F(Q)'
       WRITE(IFILE,'(17X,F8.4,1PG11.4)')    ZERO,FORMF(1)
       DO 50 IQ=2,2*IQMAX
       Q      = (IQ-1)*DELQ*HALF
       WRITE(IFILE,'(17X,F8.4,1PG11.4)')    Q,FBINT(Q,FORMF)
   50  CONTINUE
      ENDIF
C
      RETURN
C
      END
C-----INVERT------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE INVERT(R,RHS,IREP)
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
      DIMENSION R(KG1),RHS(KG1)
C
      COMMON /POTINV/ UMIN,POTL(KG1),SQB(KG1),D2B(KG1),
     &                SQM(KG1),POTEFF(KG1),AINV(KG1),BINV(KG1)
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
       DATA FSX,EZW/.83333333333333,.8333333333333E-1/
C
C
C      DETERMINES 'R' AS SOLUTION OF THE INHOMOGENOUS LINEAR DIFF. EQ.:
C       " (-D/DX (SQB(X)**2) D/DX + (POTL(X) - UMIN ) ) R = RHS  "
C      FOR GIVEN 'RHS' WHERE 'SQB**2' IS X-DEPENDENT INVERSE MASS,
C      'POTL' A POTENTIAL AND 'UMIN' A SHIFT CONSTANT.
C
C      THE ARRAYS IN THE CALLING LIST MEAN:
C       R      = THE SOLUTION OF THE EQUATION
C       RHS    = THE RIGHT HAND SIDE (INHOMOGENEITY) OF THE EQUATION.
C                R AND RHS MAY BE THE SAME ARRAYS IN THE CALLING ROUTINE
C                RHS IS THEN OVERWRITTEN.
C      THE PARAMETERS IN THE CALLING LIST MEAN:
C       IREP   = SWITCH: IREP=0 MEANS NEW POTL,SQB SUCH THAT FULL
C                        INVERSION HAS TO BE PERFORMED FROM SCRATCH.
C                        IREP=1 MEANS THAT PREVIOUS POTL,SQB STILL APPLY
C                        THAN PARTS OF THE FIRST PASS CAN BE TAKEN FROM
C                        THE PREVIOUS CALLS, WHOSE RESULTS HAVE BEEN
C                        SAVED ON THE FIELDS AINV AND BINV.
C
C      INFORMATION ON THE HAMILTONIAN IS TRANSFERRED VIA COMMON /POTINV/
C       SQB    = INVERSE SQUARE-ROOT OF X-DEPENDENT EFFECTIVE MASS
C       POTL   = EFFECTIVE POTENTIAL BEFORE MASS TRANSFORMATION,
C                TO BE PREPARED IN SUBROUTINE 'WELFU'.
C       UMIN   = CONSTANT ENERGY SHIFT
C
C      THE OTHER ARRAYS IN /POTINV/ ARE USED AS WORKSPACE FOR THIS SUBRO
C      THEY NEED TO BE KEPT UNDESTROYED IF 'INVERT' IS CALLED SUBSEQUENT
C      WITH 'IREP'>0 .
C
C      INFORMATION ON THE GRID IS TRANSFERRED VIA COMMON /GRID/.
C
C      NOTE: THE PROGRAM IS WRITTEN FOR SOLVING THE SCHROEDINGER EQUATIO
C            IN RADIALLY SYMMETRIC PROBLEMS. THUS IT IMPLIES THE RHS AND
C            POTEFF TO BE SUCH THAT R(X) VANISHES AT THE ORIGIN.
C
C      THE SOLUTION PROCEEDS AS FOLLOWS:
C
C      BY INTRODUCING SCALED WAVE FUNCTIONS
C       " REFF = R/SQB "
C      AND
C       " RHSEFF = RHS/SQB ".
C      THE EQUATIONS IS TRANSFORMED TO A LAPLACIAN EQUATION
C       " (-D/DX**2 + POTEFF(X) ) REFF = RHSEFF "
C      WITH CONSTANT MASS AND AN EFFECTIVE POTENTIAL
C       " POTEFF = (POTL(X)-UMIN)/(SQB(X)*SQB(X)) + D2B(X) "
C      WHERE
C       " D2B = (D/DX**2 SQB)/SQB " .
C      AFTER SOLVING THE LAPLACIAN EQUATION, THE SOLUTION IS TRANSFORMED
C      BACK BY
C       " R   = REFF*SQB" .
C
C      THE D/DX**2 IS TREATED EFFECTIVELY IN 5-POINT PRECISION.
C      IN ADDITION TO A STANDARD 3-POINT FORMULA FOR D/DX**2
C      A COMPLEMENTING 3-POINT AVERAGING OF UEFF*REFF AND RHSEFF
C      IS USED WHICH BOTH TOGETHER MAKE UP THE 5-POINT PRECISION.
C      (SEE R.ZURMUEHL, "PRAKTISCHE MATHEMATIK", CH. VII, SECT. 3,
C       SPRINGER VERLAG, BERLIN 1963)
C
C
C-----------------------------------------------------------------------
C
C      SQUARE-ROOT OF INVERSE EFF. MASS ON 'SQB',
C      SECOND DERIVATIVE OF 'SQB' ON 'D2B'.
C      FINALLY ASSEMBLING  THE EFFECTIVE POTENTIAL ON 'POTEFF'.
C       THIS PART CAN BE OVERRIDDEN IF THE ROUTINE IS CALLED FOR
C       THE SAME 'POTL' AND 'SQB' AGAIN AND IF THE WORKSPACES
C       'SQM' AND 'POTEFF' ARE NOT DESTROYED IN THE MEANTIME;
C       THIS SITUATION SHOULD BE INDICATED BY 'IREP>0' IN THE CALL.
C
      IF(IREP.LE.0) THEN
       SQM(1) = ONE/SQB(1)
        DO 80 I=2,NGRID
        SQM(I)    = ONE/SQB(I)
        POTEFF(I) = D2B(I)+(POTL(I)-UMIN)*(SQM(I)*SQM(I))
   80   CONTINUE
      ENDIF
C
C      TRANSFORM TO EFFECTIVE R.H.S., STORE RESULT ON R.
C
       DO 17 I=1,NGRID
   17  R(I)   = RHS(I)*SQM(I)
C
C     PREPARE PARAMETERS FOR KINETIC ENERGY AND LOOP-ENDS.
C
        OFFDIG = ONE/(RSTEP*RSTEP)
        OFFDG2 = OFFDIG+OFFDIG
        NMAXM  = NGRID-1
C
C      CHECK REPETITION SWITCH. IF NEW POTL,SQM ARE INDICATED BE IREP=0
C      THEN BEGIN FIRST PASS ELIMINATING THE LOWER OFF-DIAGONAL ELEMENT.
C      NEW DIAGONAL AND UPPER OFF-DIAGONAL ELEMNTS ARE SAVED ON A AND B.
C      THE SECOND PASS, FORWARD ELIMINATION OF THE R.H.S., IS DONE WITHI
C      THE SAME LOOP; RESULT IS STORED ON FIELD T.
C
       IF(IREP.LE.0) THEN
C
        BINV(1) = ZERO
        AINV(1) = ONE
        X      = ZERO
        Y      = ONE
        RIM1   = R(1)
C
        DO 13 I=2,NMAXM
C                                         FORWARD ELIM. FOR R.H.S.
        X      = EZW*(R(I+1)+RIM1)+FSX*R(I)- X*(BINV(I-1)/Y)
        RIM1   = R(I)
        R(I)   = X
C                                         FORWARD ELIM. FOR MATRIX
        UI     = POTEFF(I)
        Z      = -OFFDIG+EZW*UI
        BINV(I) = Z
        Y      = OFFDG2+FSX*UI-Z*(BINV(I-1)/Y)
        AINV(I) = Y
   13   CONTINUE
C                                         LAST ELIM. STEP EXPLICITELY
C                                         BECAUSE R(I+1) IS NOT AVAILABL
        R(NGRID) = EZW*RIM1+FSX*R(NGRID)-X*(BINV(NMAXM)/Y)
        UI     = POTEFF(NGRID)
        Z      = -OFFDIG+EZW*UI
        BINV(NGRID) = Z
        Y      = OFFDG2+FSX*UI-Z*(BINV(NMAXM)/Y)
        AINV(NGRID) = Y
C
C      IF UNCHANGED POTL,SQM ARE INDICATED BY IREP=1 THEN PERFORM
C      IN THE SECOND PASS THE FORWARD ELIMINATION FOR THE R.H.S.
C      USING THE DIAGONAL AND OFF-DIAGONAL ELEMENTS OF THE PREVIOUS
C      CALL.
C
       ELSE
        X      = ZERO
        RIM1   = R(1)
        DO 14 I=2,NMAXM
        X      = EZW*(R(I+1)+RIM1)+FSX*R(I)- X*BINV(I-1)/AINV(I-1)
        RIM1   = R(I)
        R(I)   = X
   14   CONTINUE
        R(NGRID)  = (EZW*RIM1+FSX*R(NGRID)-X*BINV(NMAXM)/AINV(NMAXM))
       ENDIF
C
C      IN THE THIRD PASS RESOLVE THE REMAINING UPPER TRIANGULAR EQUATION
C      BACKWARD.
C
       X      = R(NGRID)/AINV(NGRID)
       R(NGRID) = X*SQM(NGRID)
       DO 15 I=NMAXM,2,(-1)
       X      = (R(I)-X*BINV(I+1))/AINV(I)
       R(I)   = X*SQM(I)
   15  CONTINUE
       R(1)   = ZERO
C
       RETURN
       END
C-----HPSI  ------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE HPSI(WFIN,HWFOUT,D1WFIN,D2WFIN,IFD1WF,JSA,ISO,SUBFAC)
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     ACTION OF THE MEAN-FIELD HAMILTONIAN
C
C                     ^
C         |HWFOUT> = (H - SUBFAC) |WFIN>
C
C     WHERE:
C       WFIN    = INPUT WAVE FUNCTION FIELD ,
C       HWFOUT  = OUTPUT WAVE FUNCTION FIELD ,
C       D1WFIN  = FIRST DERIVATIVE IF 'WFIN'.
C       D2WFIN  = SECOND DERIVATIVE IF 'WFIN'.
C       IFD1WF  = DECIDES ON THE COMPUTATION OF 'D1WFIN':
C                 IFD1WF>0 --> THE 'D1WFIN' IS INTERPRETED AS
C                              WORKSPACE AND THE FIRST DERIVATIVE
C                              IS COMPUTED ANEW;
C                 IFD1WF=0 --> THE 'D1WFIN' CONTAINS ALREADY THE
C                              FIRST DERIVATIVE IF 'WFIN'.
C       JSA     = COMBINED ANGULAR MOMENTUM QUANTUM NUMBER
C                 OF WFIN AND HWFOUT,
C       ISO     = ISOSPIN OF THE WAVE FUNCTIONS,
C       SUBFAC  = CONSTANT ENERGY SUBTRACTED FROM HAMILTONIAN.
C
C     THE FIELDS FOR THE MEAN-FIELD HAMILTONIAN ARE TRANSFERRED
C     VIA COMMON /WAVFUN/:
C       POT     = POTENTIAL
C       POTLS   = SPIN-ORBIT POTENTIAL
C       BMASS   = INVERSE EFFECTIVE MASS
C       D1B     = DERIVATIVE OF INVERSE EFFECTIVE MASS
C
C     GRID PROPERTIES ARE TRANSFERRED VIA COMMON /GRID/
C
      DIMENSION WFIN(KG1),HWFOUT(KG1),D1WFIN(KG1),D2WFIN(KG1)
C
      COMMON /WAVFUN/ WF(KX11),WFS(KX11),
     &                BMASS(KGR2),POT(KGR2),POTLS(KGR2),D1B(KGR2),
     &                RHO(KGR2),
     &                TAU(KGR2),SJ(KGR2),SJS(KGR2),D2R(KGR2),D1R(KGR2),
     &                AUX1(KG1),AUX2(KG1)
      COMMON /SHELLS/ WEIGHT(KSL2),WLS(19),
     &                APROT,ANEUT,ANUMB,EFEP,EFEN,
     &                JSP(46),JSMAX(2),NPLA(KNMXP,KJMX2),
     &                NPROT,NNEUT,NNUMB,NMAXP,NMAXN,NMINN,NMAXTO
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
C-----------------------------------------------------------------------
C
C     THE QUANTUM NUMBERS OF THE WAVE FUNCTION
C      LA      = ORBITAL ANGULAR MOMENTUM OF STATE  WFIN>
C      PARITY  = PARITY FOR THE RADIAL WAVE FUNCTION (NOTE THAT IT
C                CONTAINS AN EXTRA FACTOR 'R' SUCH THAT THE 1S1/2
C                STATE HAS PARITY=-1 ETC)
C      ISOADD  = STACK-POINTER FOR POTENTIAL FIELDS POT, POTLS
C                AND ISOADD
C      XL0     = SPIN-ORBIT SPLITTING FOR STATE  WFIN>
C
      LA     = JSA/2
      XLP    = (LA*LA+LA)
      PARITY = (MOD(LA,2)*2-1)
      ISOADD = (ISO-1)*NGRID
      XL0    = WLS(JSA)
C
C     THE DERIVATIVES OF THE WAVE FUNCTION
C
      IF(IFD1WF.GT.0)
     &   CALL DERV15(WFIN(1),D1WFIN(1),PARITY,NGRID,RSTEP)
      CALL DERV25(WFIN(1),D2WFIN(1),PARITY,NGRID,RSTEP)
C
C     THE ACTION OF THE HAMILTONIAN
C
      HWFOUT(1) = ZERO
      DO 10 IR=2,NGRID
      IRS    = IR+ISOADD
      POTACT = POT(IRS)+XL0*POTLS(IRS)
     &        +BMASS(IRS)*XLP*ZENTRF(IR)+D1B(IRS)*RINVS(IR)
      HWFOUT(IR) = (POTACT-SUBFAC)*WFIN(IR)
     &            -D1B(IRS)*D1WFIN(IR)-BMASS(IRS)*D2WFIN(IR)
   10 CONTINUE
C
      RETURN
      END
C-----TPSI  ------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE TPSI(WFIN,HWFOUT,D2WFIN,JSA,ISO,SUBFAC)
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     ACTION OF THE KINETIC ENERGY
C
C     WHERE:
C       WFIN    = INPUT WAVE FUNCTION FIELD ,
C       HWFOUT  = OUTPUT WAVE FUNCTION FIELD ,
C       JSA     = COMBINED ANGULAR MOMENTUM Q.N. OF WFIN AND HWFOUT,
C       ISO     = ISOSPIN OF THE WAVE FUNCTIONS,
C       SUBFAC  = CONSTANT ENERGY SUBTRACTED FROM KINETIC ENERGY OPERATO
C
C     GRID PROPERTIES ARE TRANSFERRED VIA COMMON /GRID/
C
      DIMENSION WFIN(KG1),HWFOUT(KG1),D2WFIN(KG1)
C
C      INCLUDE 'WAVFUN.INC'
      COMMON /GRID/   ZENTRF(KG1),RINVS(KG1),RSQUAR(KG1),
     &                RSTEP,RLENG,DELQ,FRPIRS,
     &                NGRID,IQMAX,             NGRIDP,NGRID2
      COMMON /CONSTN/ PI,SQ2,FOURPI,D4PI,SQFRPI,XSMALL,ZERO,ONE,HALF
C
C-----------------------------------------------------------------------
C
C     THE QUANTUM NUMBERS OF THE WAVE FUNCTION
C      LA      = ORBITAL ANGULAR MOMENTUM OF STATE  WFIN>
C      PARITY  = PARITY FOR THE RADIAL WAVE FUNCTION (NOTE THAT IT
C                CONTAINS AN EXTRA FACTOR 'R' SUCH THAT THE 1S1/2
C                STATE HAS PARITY=-1 ETC)
C      ISOADD  = STACK-POINTER FOR POTENTIAL FIELDS POT, POTLS
C                AND ISOADD
C
      LA     = JSA/2
      XLP    = (LA*LA+LA)
      PARITY = (MOD(LA,2)*2-1)
      ISOADD = (ISO-1)*NGRID
C
C     THE DERIVATIVES OF THE WAVE FUNCTION
C
      CALL DERV25(WFIN,D2WFIN,PARITY,NGRID,RSTEP)
C
C     THE ACTION OF THE KINETIC ENERGY
C
      HWFOUT(1) = 20.7525*D2WFIN(1)
      DO 10 IR=2,NGRID
      R      = (IR-1)*RSTEP
      POTACT = 20.7525*XLP*ZENTRF(IR)
      HWFOUT(IR) = (POTACT-SUBFAC)*WFIN(IR) - 20.7525*D2WFIN(IR)
   10 CONTINUE
C
      RETURN
      END
C-----DERV15------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE DERV15(WFIN,DWFOUT,PARITY,NGRID,DELR)
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     FIRST DERIVATIVE OF 'WFIN' ON 'DWFOUT',
C     USING FIVE POINT FORMULA.
C
C     INPUT VIA CALLING LIST:
C      WFIN    = ARRAY FOR WHICH 2.DERIVATIVE IS TO BE COMPUTED
C      PARITY  = THE RADIAL PARITY OF THE FIELD 'WFIN'
C                ( > 0 IF THE FIELD STARTS WITH EVEN POWER OF R, < 0 ELS
C      NGRID   = LENGTH OF THE ARRAYS
C      DELR    = DISTANCE BETWEEN GRID POINTS
C     OUTPUT VIA CALLING LIST:
C      DWFOUT  = ARRAY CONTAINING THE 2. DERIVATIVE
C
      DIMENSION WFIN(NGRID),DWFOUT(NGRID)
C
C     CONSTANTS NEEDED:
C      VDR   = 4/3
C      ESX   = 1/6
C      ZDR   = 2/3
C      EZW   = 1/12
C      FSX   = 5/6
C      FZWT  = 25/12
C
      DATA              VDR,               ESX,               ZDR
     &    /1.33333333333333,0.1666666666666667,0.6666666666666667/
      DATA                 EZW,               FSX,            FZWT
     &    /0.08333333333333333,0.8333333333333333,2.08333333333333/
      DATA ONE,ZERO/1.0,0.0/
C
C-----------------------------------------------------------------------
C
C     COMPUTE FREQUENTLY OCCURING PARAMETERS
C
      DELINV = ONE/DELR
      ZDRH   = ZDR*DELINV
      EZWH   = EZW*DELINV
C
C     DERIVATIVES NEAR THE ORIGIN, USE 'PARITY' TO CONTINUE THE WAVE FUN
C
      IF(PARITY.GT.0.) THEN
       DWFOUT(1) = ZERO
      ELSE
       DWFOUT(1) = DELINV*(VDR*WFIN(2)-ESX*WFIN(3))
      ENDIF
      DWFOUT(2) = ZDRH*(WFIN(3)-WFIN(1))
     *            -EZWH*(WFIN(4)-PARITY*WFIN(2))
C
C     THE STRAIGHTFORWARD "MID-REGION"
C
      DO 10 I=3,NGRID-2
      DWFOUT(I) = EZWH*(WFIN(I-2)-WFIN(I+2))
     *           +ZDRH*(WFIN(I+1)-WFIN(I-1))
   10 CONTINUE
C
C     NEAR THE BOUNDARIES ASSUME THAT WF(I>NGRID)=WF(NGRID)
C
      I=NGRID-1
      DWFOUT(I) = EZWH*(WFIN(I-2)-WFIN(I+1))
     *           +ZDRH*(WFIN(I+1)-WFIN(I-1))
      I=NGRID
      DWFOUT(I) = EZWH*(WFIN(I-2)-WFIN(I)  )
     *           +ZDRH*(WFIN(I)  -WFIN(I-1))
C
      RETURN
      END
C-----DERV25------------ PART OF THE HARTREE-FOCK PACKAGE --------------
C
      SUBROUTINE DERV25(WFIN,DWFOUT,PARITY,NGRID,DELR)
C
CDOUB   IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
       PARAMETER (KG1=61,KNMX=4,KJMX=15,KMAXN=29,KMAXP=22,KQMAX=20,
     &            KNMXP=KNMX+1,KJMX2=2*KJMX,
     &            KSL2=KMAXP+KMAXN,KSLM=KMAXN,
     &            KGR2=2*KG1,KGR2P=KGR2+1,KX11=KSL2*KG1)
C
C     SECOND DERIVATIVE OF 'WFIN' ON 'DWFOUT',
C     USING FIVE POINT FORMULA.
C
C     INPUT VIA CALLING LIST:
C      WFIN    = ARRAY FOR WHICH 2.DERIVATIVE IS TO BE COMPUTED
C      PARITY  = THE RADIAL PARITY OF THE FIELD 'WFIN'
C                ( > 0 IF THE FIELD STARTS WITH EVEN POWER OF R, < 0 ELS
C      NGRID   = LENGTH OF THE ARRAYS
C      DELR    = DISTANCE BETWEEN GRID POINTS
C     OUTPUT VIA CALLING LIST:
C      DWFOUT  = ARRAY CONTAINING THE 2. DERIVATIVE
C
      DIMENSION WFIN(NGRID),DWFOUT(NGRID)
C
C     CONSTANTS NEEDED:
C      VDR   = 4/3
C      EZW   = 1/12
C
      DATA              VDR,                  EZW
     &    /1.33333333333333,0.0833333333333333333/
      DATA ONE,ZERO/1.0,0.0/
C
C----------------------------------------------------------------------
C
C     COMPUTE FREQUENTLY OCCURING PARAMETERS
C
      DELIN2 = ONE/(DELR*DELR)
      FHHH   = 2.5*DELIN2
      VDRHH  = VDR*DELIN2
      EZWHH  = EZW*DELIN2
C
C     DERIVATIVES NEAR THE ORIGIN, USE 'PARITY' TO CONTINUE THE WAVE FUN
C
      IF(PARITY.GT.0.) THEN
       DWFOUT(1) = 2.0*(VDRHH*WFIN(2)-EZWHH*WFIN(3))-FHHH*WFIN(1)
      ELSE
       DWFOUT(1) = ZERO
      ENDIF
      DWFOUT(2) = -FHHH*WFIN(2)+VDRHH*(WFIN(3)+WFIN(1))
     *            -EZWHH*(WFIN(4)+PARITY*WFIN(2))
C
C     THE STRAIGHTFORWARD "MID-REGION"
C
      DO 10 I=3,NGRID-2
      DWFOUT(I) = -FHHH*WFIN(I)+VDRHH*(WFIN(I-1)+WFIN(I+1))
     *                      -EZWHH*(WFIN(I-2)+WFIN(I+2))
   10 CONTINUE
C
C     USE ONLY 3-POINT FORMULA ONE GRID-POINT BEFORE BOUNDARY
C
      DWFOUT(NGRID-1)= (WFIN(NGRID)-2.0*WFIN(NGRID-1)+WFIN(NGRID-2))
     *                *DELIN2
C
C     EXTRAPOLATE LINEARLY TO GRID BOUNDARY
C
      DWFOUT(NGRID) = 2.0*DWFOUT(NGRID-1)-DWFOUT(NGRID-2)
C
      RETURN
      END
