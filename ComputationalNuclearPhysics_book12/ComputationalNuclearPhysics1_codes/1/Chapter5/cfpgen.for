	PROGRAM CFPGEN
C      SEE FOR FORMULAS FOR THE DIMENSIONS PROG. PHINT
C --- WRITTEN TO TAPE ON 80/08/21.AT 14.56.43.
C     use for extension to N=7
      COMMON/REDMAT/REDGS( 57,5),BETFAC( 16,2),IBDEL(2,3)
      DATA NDM,IDIB,IDB,IDGS/7,3,16,57/
C       use for extension to N=14
C      COMMON/REDMAT/REDGS( 375,5),BETFAC( 56,2),IBDEL(2,5)
C      DATA NDM,IDIB,IDB,IDGS/14,5,56,375/
C       Use for extension to N=16 :
C      COMMON / REDMAT / REDGS(546,5), BETFAC(72,2), IBDEL(2,6)
C      DATA  NDM, IDIB, IDB, IDGS / 16, 6, 72, 546 /
C       Here and everywhere else.
C
C      dimensions for arrays in
C		 COMMON / REDMAT /REDGS(idgs,5),BETFAC(idb,2),IBDEL(2,idib)
C      used for the computation of reduced mat. elements of d+
C      NDM=maximum number of phonons used in the program
C         IDIB=NDM/3+1
C         IDB=(K+1)*(NDM-K)  ; K=(NDM+1)/2
C         IDGS=(K+1)*( (NDM-3*K)*(NDM-1-K)+1+K*NDM )   ;  K=NDM/3
C				Note: in FORTRAN 3*K .ne. NDM
C
C	NDM	7	9	11	14	16
C	IDIB	3	4	4	5	6
C	IDB	16	20	35	56	72
C	IDGS	57	112	192	375	546
C      these dimensions must be exactly equal to those in
C       COMMON/REDMAT , used in main programs and subroutine RED
C	 NOTE: subroutine RED occurs here and in library.
      OPEN(UNIT=2,FILE='CFPGEN.OUT')
      OPEN(UNIT=3,FILE='PHINT.CFP',STATUS='UNKNOWN',FORM='UNFORMATTED'
     & ,RECL=2048)
      NPHMSU=NDM
      CALL GENBTA(BETFAC,IDB,NPHMSU)
      WRITE(2,*) BETFAC
      CALL IBGEN(IBDEL,IDIB,NPHMSU,IDGS)
      WRITE(2,*) 'IBDEL',IBDEL
      CALL GENGS(REDGS,IDGS,NPHMSU)
	DO 1 I=1,57
      WRITE(2,*) (REDGS(I,J),J=1,5)
1	CONTINUE
      CALL NCGEN(REDGS,IDGS,NPHMSU,IBDEL,IDIB)
      CALL CFPTST(NPHMSU)
      CALL WRTRED(NDM,IDGS,IDB,IDIB,REDGS,BETFAC,IBDEL)
      STOP
      END
      SUBROUTINE IBGEN(IBDEL,IDIM,NDMAX,IDGS)
C
C      IBDEL(NCD+1,NCMIN+1)
C      GIVES BASE LINE FOR THIS SORT OF RED. MAT. IN
C      ARRAY  REDGS
C
      DIMENSION IBDEL(2,IDIM)
      CHARACTER*4 IBD(2),IGS(2)
      DATA IBD /'IBDE','L   '/ ,IGS /'REDG','S   '/
      IDM=NDMAX/3+1
      IF(IDM.GT.IDIM) GOTO 99
      IBDEL(1,1)=0
      IBDEL(2,1)=NDMAX*(NDMAX+1)/2
      DO 1 I=2,IDM
      IBDEL(1,I)=IBDEL(2,I-1)+(NDMAX+4-3*I)*(NDMAX+5-3*I)/2
      IBDEL(2,I)=IBDEL(1,I)+(NDMAX+3-3*I)*(NDMAX+4-3*I)/2
    1 CONTINUE
      IDM=IBDEL(2,IDM)
      IF(IDM.GT.IDGS) CALL DIMER(IGS,IDM)
      RETURN
   99 CALL DIMER(IBD,IDM)
      RETURN
      END
      SUBROUTINE GENBTA(BETFAC,DIM,NDM)
C
C      <ND+1,NBPR,NCPR,IPR//D+//ND,NB,NC,I>=
C      =BETFAC(J,L)*<ND+1--2*NBPR,0,NCPR,IPR//(D+ OR D)//ND-2*NB,0,NC,I>
C      J=(K+1)*(ND-K)+1+NB  WITH K=ND/2
C      L=NBPR-NB+1
C      DIMBET=(K+1)*(NDM-1-K)+1+K  WITH K=(NDM-1)/2
C
      INTEGER DIM
      DIMENSION BETFAC(DIM,2)
      NDMM=NDM-1
      K=NDMM/2
      IDIM=K+1+(K+1)*(NDMM-K)
      IF(IDIM.GT.DIM) GOTO 99
      DO 1 K=1,IDIM
       DO 1 I=1,2
    1 BETFAC(K,I)=1.
      DO 2 ND=1,NDMM
      K=ND/2
      I=1+(K+1)*(ND-K)
      KP=K+1
      DO 3 NBP=1,KP
       NB=NBP-1
      NDB=ND-2*NB
      BETFAC(I+NB,1)=SQRT(CV(NDB+1,NB,NB)/CV(NDB,NB,NB))
      BETFAC(I+NB,2)=CV(NDB-1,NBP,NB)/SQRT(CV(NDB-1,NBP,NBP)*CV(NDB,NB,N
     &B))
    3 CONTINUE
    2 CONTINUE
      RETURN
   99 WRITE(2,200)  IDIM,DIM
  200 FORMAT(10X,'GENBTA : ',I5,' GT ',I5)
      RETURN
      END
      FUNCTION CV(ND,NBP,NB)
C      NBP .GE. NB
      CV=1.
      IF(NB.EQ.0) RETURN
      DO 1 KP=1,NB
    1 CV=CV*(NBP-KP+1)*(ND+NBP-KP+2.5)
      RETURN
      END
      SUBROUTINE GENGS(REDGS,DIM,NDM)
C
C      DIM=NDM*(NDM+1)/2
C      K=ND*(ND-1)/2+1+LR
C      LD==LR-LL+3
C       REDGS(K,LD)=<ND+1,LL//D+//ND,LR>  NB=NC=0   ; ND<=L<=2*ND
C
      INTEGER T,TP,DIM
      LOGICAL FTIME
      DIMENSION REDGS(DIM,5)
      K=NDM*(NDM+1)/2
      CAN=0.
      CBN=0.
      CBB=0.
      CBA=0.
      CAA=0.
      DO 1 ND=1,DIM
       DO 1 LDELT=1,5
    1 REDGS(ND,LDELT)=0.
C
C      FILL IN STRECHED CASES
C
      DO 2 ND=1,NDM
       K=ND*(ND+1)/2
    2 REDGS(K,1)=SQRT(FLOAT(ND*(4*ND+1)))
      DO 3 ND=2,NDM
      L2MAX=2*(ND-2)
      L3MAX=L2MAX-2
       L4MAX=2*(ND-4)
      L5MAX=2*(ND-5)
      KS=(ND-1)*(ND-2)/2-1+2*ND
      LM=2*ND
      DO 4 L=ND,LM
      IF(L.EQ.(LM-1)) GOTO 4
      FTIME=.TRUE.
       AFAC=0.
      BFAC=0.
      DO 5 LDELT=1,5
      LT=LDELT-3+L
      T=LM-2-LT
      IF(T) 4,30,31
   31 IF(T-1) 30,5,32
   32 IF(T-ND) 30,5,5
   30 KST=KS-T
      IF(L.GT.L2MAX) GOTO 11
C
C      STATE WITH (ND-1,NB.NE.0) POSSIBLE
C
      CAA=ND+0.5
      LD=6-LDELT
      K=(ND-2)*(ND-3)/2+1+L
      CAN=(-1)**T*REDGS(K,LD)/SQRT(2.*L+1.)
      IF(L.EQ.(L3MAX-1)) GOTO 12
      IF(L.LE.L3MAX) GOTO 13
C
   12 CONTINUE
C      NO STATE (ND-1,NC.NE.0) POSSIBLE
C
      AFAC=CAN/CAA
      GOTO 11
   13 IF(.NOT.FTIME) GOTO 33
      CBB=3*T0(ND-3,L)
C
C      STATE (ND-1,NB.NE.0,NC.NE.0) POSSIBLE
C
      IF(L.GT.L4MAX) GOTO 15
      RNUM=CV(ND-4,2,2)
      IF(L.GT.L5MAX) GOTO 16
      IF((L+1).EQ.L5MAX) GOTO 16
      RNUM=RNUM-(CV(ND-4,2,1)*CBANRM(T,ND-2,L,REDGS,DIM))**2/
     1   PPTERM(ND,L,REDGS,DIM)
   16 CONTINUE
      CBB=CBB-4*(CBANRM(T,ND-1,L,REDGS,DIM)**2)/RNUM
   15 CONTINUE
      CBA=CBANRM(T,ND,L,REDGS,DIM)
   33 CONTINUE
      CBN=CBNNRM(T,ND,L,REDGS,DIM)
      RNOEM=CAA*CBB-CBA*CBA
      AFAC=(CAN*CBB-CBA*CBN)/RNOEM
      BFAC=(CBN*CAA-CAN*CBA)/RNOEM
   11 IF(FTIME) GOTO 40
      GOTO 50
   40 FTIME=.FALSE.
C
C      FIRST TIME WITH THIS L AND ND :
C      SIGN IS FREE
C
      LR=LT
      CALL DDDAG(L,ND-1,0,LT,0,LR,CNN)
      RN=(-1)**L/SQRT(CNN-AFAC*CAN-BFAC*CBN)
      TP=T
      RN1=1/RN
      CDS=CAN
       CDT=CBN
      GOTO 60
   50 CONTINUE
C
C      NOT FIRST TIME WITH THIS L AND ND :
C       SIGNS ARE RELATED
C
      CALL DDDAG(L,ND-1,0,LT,0,LR,CDD)
      RN=RN1/(CDD-AFAC*CDS-BFAC*CDT)
   60 REDGS(KST,LDELT)=(-1)**L*SQRT(2.*L+1.)/RN
    5 CONTINUE
    4 CONTINUE
    3 CONTINUE
      RETURN
      END
      SUBROUTINE NCGEN(REDGS,IDGS,NDMAX,IBDEL,IDIB)
      DIMENSION REDGS(IDGS,5),IBDEL(2,IDIB)
      NCPM=NDMAX/3+1
      DO 1 NCP=2,NCPM
       NC=NCP-1
      NDI=3*NC
      DO 2 ND=NDI,NDMAX
C
C      COMPUTES RED MAT EL , NB=0  ND,NC => ND-1,NC-NCD
C
      LPI=ND-NDI+1
      LPF=2*LPI-1
      DO 3 LP=LPI,LPF
       L=LP-1
      IF(LP.EQ.(LPF-1)) GOTO 3
      L0=L+2
      FAC=(-1)**L*SQRT(FLOAT(L+LP))
      CCB=RED(ND-1,0,NC-1,L0,5,1,-1)*FAC/(2*L+1)
      CAB=FAC*RED(ND-1,0,NC-1,L0,5,1,0)/(2*L+1)
      CNB=RED(ND-1,0,NC-1,L0,5,0,0)*FAC/(2*L+1)
      CALL DDDAG(L,ND-1,NC-1,L0,NC-1,L0,ANS)
      B=ANS-CNB*CNB-CAB*CAB-CCB*CCB
      IF(B.LE.0) GOTO 9
      B=1/SQRT(B)
C
C      NCD=1
C
      LPRI=L-2
      K=ND+3-3*NC-1
      LPRM=2*K
      IF(LPRI.LT.K) LPRI=K
      NR=ND-3*NC
      KL=IBDEL(2,NC)+NR*(NR-1)/2+1+L
      DO 4 LPR=LPRI,LPRM
      LD=LPR-L+3
      IF(LD.GT.5) GOTO 44
      CALL DDDAG(L,ND-1,NC-1,L0,NC-1,LPR,CF)
      CF=CF*FAC
      CF=B*(CF-CNB*RED(ND-1,0,NC-1,LPR,LD,0,0)-CAB*RED(ND-1,0,NC-1,LPR,
     , LD,1,0)-CCB*RED(ND-1,0,NC-1,LPR,LD,1,-1))
      REDGS(KL,LD)=CF
    4 CONTINUE
   44 CONTINUE
C
C      NDC=0
C
      NR=ND-3*NC-1
      KL=IBDEL(1,NC+1)+NR*(NR-1)/2+1
      LPRPI=L-1
      K=ND-3*NC
      IF(K.LT.1) GOTO 55
      IF(LPRPI.LT.K) LPRPI=K
      LPRPM=2*K-1
      DO 5 LPRP=LPRPI,LPRPM
       LPR=LPRP-1
      LD=LPR-L+3
      IF(LD.GT.5) GOTO 55
      CALL DDDAG(L,ND-1,NC-1,L0,NC,LPR,CF)
      CF=CF*FAC
      CF=B*(CF-CAB*RED(ND-1,0,NC,LPR,LD,1,-1))
      REDGS(KL+LPR,LD)=CF
    5 CONTINUE
   55 CONTINUE
      GOTO 3
    9 WRITE(2,200) NC,ND,L,ANS,CNB,CAB
  200 FORMAT(' NCGEN ',3I4,3F10.5)
    3 CONTINUE
    2 CONTINUE
    1 CONTINUE
      RETURN
      END
      FUNCTION T0(ND,L)
      T0=3./35.*(ND*(4*ND+2)-L*(L+1))+6.*ND/5.+2
      RETURN
      END
      FUNCTION PPTERM(ND,L,REDGS,DIM)
      INTEGER DIM
      DIMENSION REDGS(DIM,5)
      PPTERM=(ND+0.5)*T0(ND-5,L)+6./35.*(L*(L+1)+ND-5)
      LI=L-2
      L2F=L+2
       L1F=L2F
      K=(ND-6)*2
      IF(K.LT.L2F) L2F=K
      IF(LI.GT.L2F) GOTO 9
      K=(ND-7)*2
      IF(K.LT.L1F) L1F=K
      IF(LI.GT.L1F) GOTO 9
      DO 1 L1=LI,L1F
      L1D=L1-L+3
      C=0.
      DO 2 L2=LI,L2F
      L12=L1-L2+3
       L2D=L2-L+3
      IF(L12.LT.1) GOTO 3
       IF(L12.GT.5) GOTO 2
      C=C+RACAHI(2,L1,2,L,L2,2)*RED(ND-7,0,0,L1,L12,0,0)*
     1     RED(ND-6,0,0,L2,L2D,0,0)
    2 CONTINUE
    3 CONTINUE
      PPTERM=PPTERM+C*RED(ND-6,0,0,L1,L1D,0,0)*
     1   CBANRM(T,ND-4,L1,REDGS,DIM)/SQRT(2*L1+1.)
    1 CONTINUE
    9 CONTINUE
      PPTERM=3*PPTERM
      WRITE(2,200) ND,L,PPTERM
  200 FORMAT(1X,2I4,F10.5)
      IF(PPTERM.EQ.0.) PPTERM=1.
      RETURN
      END
      SUBROUTINE DIMER(NAME,DIM)
      DIMENSION NAME(2)
      WRITE(2,200) NAME,DIM
  200 FORMAT(/,10X,'==== ERROR ====',/' DIMENSION OF ',2A4,' IN COMMON
     &REDMAT SHOULD BE AT LEAST ',I10)
      RETURN
      END
      FUNCTION CBANRM(T,ND,L,REDGS,DIM)
      INTEGER T,DIM
      DIMENSION REDGS(DIM,5)
      CBANRM=0.
      K1=(ND-3)*(ND-4)/2+1
      K2=(ND-4)*(ND-5)/2+1
      L2PI=L-1
      L2PF=L+3
      K=ND-3
      IF(L2PI.LT.K) L2PI=K
      K=2*K-1
       IF(L2PF.GT.K) L2PF=K
      L1PI=L-1
      L1PF=L+3
      K=ND-2
      IF(L1PI.LT.K) L1PI=K
      K=2*K-1
       IF(L1PF.GT.K) L1PF=K
      DO 1 L2P=L2PI,L2PF
      L2=L2P-1
      LD20=L2-L+3
      CB=0.
      DO 2 L1P=L1PI,L1PF
      L1=L1P-1
      LD10=L1-L+3
      LD21=L2-L1+3
      IF(LD21.LT.1) GOTO 3
      IF(LD21.GT.5) GOTO 2
      CB=CB+RACAHI(L,L2,2,2,2,L1)*REDGS(K1+L1,LD10)*REDGS(K2+L2,LD21)
    2 CONTINUE
    3 CONTINUE
      CBANRM=CBANRM+CB*REDGS(K2+L2,LD20)
    1 CONTINUE
      CBANRM=CBANRM*3/(2*L+1)
      RETURN
      END
      FUNCTION CBNNRM(T,ND,L,REDGS,DIM)
      INTEGER T,DIM
      DIMENSION REDGS(DIM,5)
      CBNNRM=0.
      L1PI=L-1
      L1PF=L+3
      K=ND-1
      IF(L1PI.LT.K) L1PI=K
      LT=2*ND-2-T
      K1=(ND-2)*(ND-3)/2+1
      K=(ND-3)*(ND-4)/2+1+L
      DO 1 L1P=L1PI,L1PF
      L1=L1P-1
      LDT1=L1-LT+3
      IF(LDT1.LT.1) GOTO 1
      IF(LDT1.GT.5) GOTO 2
      LD10=L-L1+3
      CBNNRM=CBNNRM+RACAHI(L,2,LT,2,L1,2)*REDGS(K1+L1,LDT1)*
     &     REDGS(K,LD10)
    1 CONTINUE
    2 CONTINUE
      CBNNRM=CBNNRM*(-1)**T/SQRT(2.*L+1.)*3
      RETURN
      END
      SUBROUTINE DDDAG(L,ND,NCL,LL,NCR,LR,ANS)
C      NCR .GE.NCL
C
C      ANS=THREEJ(L,2,LL,-M,DL,ML)*THREEJ(L,2,LR,-M,DR,MR)*
C           <ND,0,NCL,LL,ML/D*D+/ND,0,NCR,LR,MR>
C
      ANS=0.
      IF(LL.EQ.LR.AND.NCL.EQ.NCR) ANS=1.
      CALL DDHELP(AN1,ND,NCR,NCL,LR,LL,0,L)
      ANS=ANS+AN1
      IF(NCL-NCR) 99,3,99
    3 CONTINUE
      IF(NCR) 99,99,2
    2 CALL DDHELP(AN1,ND,NCR,NCL,LR,LL,1,L)
      ANS=ANS+AN1
   99 CONTINUE
      RETURN
      END
      SUBROUTINE DDHELP(ANS,ND,NCR,NCL,LR,LL,NCDL,L)
C
C      CALCULATES PART OF <ND,0,NCL,LL//D+*D//ND,0,NCR,LR>
C       WITH INTERMEDIATE STATE SPECIFIED BY NCDL
C      WAY OF COPLING : (LL,2)L  AND (LR,2)L
C
      ANS=0.
      NC=NCL-NCDL
      K=ND-3*NC-1
      NCDR=NCR-NC
      L1PI=K+1
      L1PF=2*K+1
      L1=LR-1
      IF(L1.GT.L1PI) L1PI=L1
      L1=LL-1
      IF(L1.GT.L1PI) L1PI=L1
      IF(L1PI.GT.L1PF) RETURN
      DO 1 L1P=L1PI,L1PF
      L1=L1P-1
      LDL=L1-LL+3
       LDR=L1-LR+3
      IF(LDL.GT.5) GOTO 2
      IF(LDR.GT.5) GOTO 2
      ANS=ANS+RACAHI(2,LR,LL,2,L1,L)*RED(ND-1,0,NC,L1,LDL,0,NCDL)*
     *        RED(ND-1,0,NC,L1,LDR,0,NCDR)
    1 CONTINUE
    2 CONTINUE
      RETURN
      END
      SUBROUTINE CFPTST(NDM)
C	 Checks some orthonormality relations
C	 Not essential, can be omitted.
      REAL KLD
      DIMENSION KLD(5),CFP(5)
      DO 1 ND=1,NDM
      NBPM=ND/2+1
      DO 2 NBP=1,NBPM
       NB=NBP-1
      NCPM=(ND-2*NB)/3+1
      DO 3 NCP=1,NCPM
       NC=NCP-1
      LPI=ND-2*NB-3*NC+1
      LPF=2*LPI-1
      DO 4 LP=LPI,LPF
       L=LP-1
      IF(L.LE.7) GOTO 16
      IF(ND.LE.3) GOTO 16
       IF(L.GT.2*(ND-3)) GOTO 16
      LI=L-2
      LF=L+2
      T=0
       DO 15 L1=LI,LF
       L1L=L1-L+3
      DO 14 L2=LI,LF
      L21=L2-L1+3
       LD2=L-L2+3
       T13=0.
      IF(L21.LT.1) GOTO 14
      IF(L21.GT.5) GOTO 15
      DO 13 NBD1P=1,2
       NBD1=NBD1P-1
       NB1=NB-NBD1
      DO 13 NBC1=1,2
      NCD1=NBC1-NBD1P
       NC1=NC-NCD1
       T12=0.
      DO 12 NB2P=1,2
      NB2=NB2P-1
      NB12=NB1-NB2
      DO 12 NC2P=1,2
      NC2=NC2P-1
      NC12=NC1-NC2
   12 T12=T12+RED(ND-3,0,0,L,LD2,NB2,NC2)*
     *        RED(ND-2,NB2,NC2,L2,L21,NB12,NC12)
   13 T13=T13+T12*RED(ND-1,NB1,NC1,L1,L1L,NBD1,NCD1)
   14 T=T+T13*RACAHI(L,L2,2,2,2,L1)*(-1)**(L+L2)
   15 CONTINUE
      S=0
      DO 25 L1=LI,LF
       L1D=L1-L+3
      LD1=L-L1+3
       S22=0.
      DO 22 NB1P=1,2
       NB1=NB1P-1
      NBD=NB-NB1
      DO 22 NC1P=1,2
       NC1=NC1P-1
      NCD=NC-NC1
   22 S22=S22+RED(ND-2,0,0,L,LD1,NB1,NC1)*RED(ND-1,NB1,NC1,L1,L1D,NBD,
     &  NCD)
   25 S=S+S22*(-1)**L1
      S=S/(4*L+2.)
      T=T/(2*L+1.)
      WRITE(2,234) ND,NB,NC,L,S,T
  234 FORMAT(30X,4I4,2F12.7)
   16 CONTINUE
      CF=0.
      DO 5 LD=1,5
       LR=LD+L-3
      DO 6 NBDP=1,2
       NBD=NBDP-1
      NBR=NB-NBD
      IF(NBR) 6,61,61
   61 DO 7 NCDP=1,3
       NCD=NCDP-2
      NCR=NC-NCD
      IF(NCR) 7,71,71
   71 CF=CF+(RED(ND-1,NBR,NCR,LR,LD,NBD,NCD))**2
    7 CONTINUE
    6 CONTINUE
    5 CONTINUE
      SUM=ND*(2*L+1)
      LBD=ND-2*NB-3*NC
      IF(L.EQ.(2*LBD-1)) SUM=0.
      DIF=ABS(CF-SUM)
      IF(DIF.LT.0.00001) GOTO 4
      WRITE(2,200) ND,NB,NC,L,CF
  200 FORMAT(4X,4I4,F12.7)
    4 CONTINUE
    3 CONTINUE
    2 CONTINUE
    1 CONTINUE
      DO 10 ND=1,NDM
      NBPM=ND/2+1
      DO 10 NBP=1,NBPM
      NB=NBP-1
      ND2=ND-2*NB
      NCPM=ND2/3+1
      DO 10 NCP=1,NCPM
      NC=NCP-1
      ND3=ND2-3*NC
      LPI=ND3+1
      LPF=2*ND3+1
      DO 10 LP=LPI,LPF
      L=LP-1
      IF(LP.EQ.(LPF-1)) GOTO 11
      FAC=SQRT((2.*L+1.)*ND)
      WRITE(2,201)
  201 FORMAT(1X)
C
      DO 20 NBDP=1,2
      NBD=NBDP-1
      NBR=NB-NBD
      IF(NBR) 20,21,21
   21 DO 30 NBC=1,2
       NCD=NBC-NBDP
       NCR=NC-NCD
      IF(NCR) 30,31,31
   31 NDR3=ND-1-2*NBR-3*NCR
      IF(NDR3) 30,32,32
   32 IF(L+2.LT.NDR3) GOTO 30
      IF(L-2.GT.2*NDR3) GOTO 30
      DO 40 LD=1,5
      LR=LD+L-3
      KLD(LD)=RED(ND-1,NBR,NCR,LR,LD,NBD,NCD)
      CFP(LD)=KLD(LD)/FAC
   40 CONTINUE
      WRITE(2,220) ND,NB,NC,L,NBR,NCR,LR,(KLD(LD),LD=1,5),(CFP(LD),LD=
     &    1,5)
  220 FORMAT(1X,7I4,4X,5F8.3,5F10.5)
   30 CONTINUE
   20 CONTINUE
   11 CONTINUE
   10 CONTINUE
      RETURN
      END
      SUBROUTINE WRTRED(NDM,IDGS,IDB,IDIB,REDGS,BETFAC,IBDEL)
      DIMENSION REDGS(IDGS,5),BETFAC(IDB,2),IBDEL(2,IDIB)
      WRITE(3) NDM,IDGS,IDB,IDIB
      WRITE(3) REDGS,BETFAC,IBDEL
      RETURN
      END
      FUNCTION RED(ND,NB,NC,L,LD,NBD,NCD)
C
C      RED=<ND+1,NB+NBD,NC+NCD,LPR//D+//ND,NB,NC,L>  ; LD=L-LPR+3
C      LD NEED TO LIE BETWEEN 1 AND 5  NO CHECK IS MADE ON THIS
C      VALUE RETURNED ONLY NON ZERO IF :
C          NBD=0 OR 1 AND NBD+NCD=0 OR 1
C       AND K,KP<=L,LP<=2*K,2*KP  ; K=ND-2*NB-3*NC
C
      COMMON/REDMAT/REDGS(57,5),BETFAC(16,2),IBDEL(2,3)
      RED=0.
      LPR=L+3-LD
      IF(ND.LT.0) GOTO 999
      IF(NB.LT.0) GOTO 999
      IF(NBD) 999,100,101
  101 IF(NBD-1) 999,200,999
C
  100 CONTINUE
C      DIFFERENCE IN NBETA(=(ND-SENIORITY)/2) EQUAL TO 0
C
      IF(NC.LT.0) GOTO 999
      IF(NCD) 999,110,111
  111 IF(NCD-1) 999,120,999
C
  110 CONTINUE
C      CND=0
C
      ND3=ND-2*NB-3*NC
      IF(ND3) 999,112,112
  112 IF(L.LT.ND3) GOTO 999
      IF(L.GT.2*ND3) GOTO 999
      K=ND/2
      RED=BETFAC(NB+1+(K+1)*(ND-K),1)
      K=ND3*(ND3-1)/2+1+L+IBDEL(1,NC+1)
      RED=RED*REDGS(K,LD)
      RETURN
C
  120 CONTINUE
C      NCD=1
C      NC = MIN
C
      ND3=ND-2*NB-3*NC-2
      IF(ND3) 999,122,122
  122 IF(LPR.LT.ND3) GOTO 999
      IF(LPR.GT.2*ND3) GOTO 999
      K=ND/2
      RED=BETFAC(NB+1+(K+1)*(ND-K),1)
      NCP=NC+1
      K=ND3*(ND3-1)/2+1+LPR+IBDEL(2,NCP)
      RED=RED*REDGS(K,LD)
      RETURN
C
  200 CONTINUE
C      NBD=1
C
      IF(NCD) 211,210,999
  211 IF(NCD+1) 999,220,999
C
  210 CONTINUE
C      NCD=0
C
      IF(NC.LT.0) GOTO 999
      ND3=ND-2*NB-3*NC-1
      IF(ND3) 999,212,212
  212 IF(LPR.LT.ND3) GOTO 999
      IF(LPR.GT.2*ND3) GOTO 999
      K=ND/2
      RED=BETFAC(NB+1+(K+1)*(ND-K),2)*(-1)**(L+LPR)
      K=ND3*(ND3-1)/2+1+LPR+IBDEL(1,NC+1)
      RED=RED*REDGS(K,6-LD)
      RETURN
C
  220 CONTINUE
C      CND=-1
C      NC = MAX
C
      IF(NC.LT.1) GOTO 999
      ND3=ND-2*NB-3*NC
      IF(ND3) 999,222,222
  222 IF(L.LT.ND3) GOTO 999
      IF(L.GT.2*ND3) GOTO 999
      NCM=NC-1
      IF(NCM) 999,221,221
  221 CONTINUE
      K=ND/2
      RED=BETFAC(NB+1+(K+1)*(ND-K),2)*(-1)**(L+LPR)
      K=ND3*(ND3-1)/2+1+L+IBDEL(2,NC)
      RED=RED*REDGS(K,6-LD)
      RETURN
C
  999 RED=0.
      RETURN
      END
