	PROGRAM PCIBEM
C		EM : ElectroMagnetic transition matrixelements
C		Modified versionn of program FBEM
C      REVISION JANUARY 1990 ,OLAF SCHOLTEN
      CHARACTER*1 PJ,PI
      LOGICAL SDEQSF,PRINT,MULT
      DIMENSION ICNTR(18),XYZ(3000)
      REAL M3DD,M1,M1N,M1ND,M1E2
      REAL M2DF,M4DF,M2SD,M4SD,M2DD,M4DD
      COMMON/REDMAT/REDGS(57,5),BETFAC(16,2),IBDEL(2,3)
      COMMON/FECSBK/IECSBK(50,2,2)
      COMMON/FCONTR/IAI,IAM,IPPI,IPPM,SDEQSF,NPHMSU,NPHMAX,NEIG
      CHARACTER*40 CMNT
      COMMON / CMT / ZEROEN
      COMMON /CMT2 / CMNT
      COMMON / MUL / COMUL(6),MULT,CHQ
      COMMON/PROGL/LENMIN,LENMAX,IWD
      COMMON/BEPAR/E0,M1,M1N,M1ND,M1E2,QND
     & ,E1DF,M2DF,E3DF,M4DF,E5DF,E1SD,M2SD,E3SD,M4SD,E5SD
     & ,E1DD,M2DD,E3DD,M4DD,E5DD
     & ,E2SD,E2DD,M3DD,E4DD,E3,E1D4F,E1QE3,PRINT
      EQUIVALENCE(ICNTR,IAI)
      DATA NDM,IDIB,IDB,IDGS/7,3,16,57/
C	!/14,5,56,375/ ! /16,6,72,546/
C
      OPEN(UNIT=2,STATUS='UNKNOWN',FILE='FBEM.OUT')
      OPEN(UNIT=3,STATUS='OLD',FILE='PHINT.CFP',FORM='UNFORMATTED',
     &  RECL=2048)
      OPEN(UNIT=10,STATUS='OLD',FILE='PHINT.WAV',FORM='UNFORMATTED')
C
      WRITE(2,200) 
      WRITE(*,200) 
  200 FORMAT(' --- Program PCibaEM ,version JANUARY 1990 ---')
C
	CALL THFACI
      CALL RDFTP(10,-1,1,1,1,IER,MV,XYZ(1),XYZ(1),XYZ(1))
      CALL PRTFHD(NPHMSU,NPHMAX,CMNT)
      CALL READRE(NDM,IDGS,IDB,IDIB,REDGS,BETFAC,IBDEL)
C
      CALL RDEM(XYZ)
	STOP ' full output on FBEM.OUT '
      END
	blockdata
      LOGICAL PRINT
      COMMON/PROGL/LENMIN,LENMAX,IWD
      COMMON/BEPAR/E0,M1,M1N,M1ND,M1E2,QND
     & ,E1DF,M2DF,E3DF,M4DF,E5DF,E1SD,M2SD,E3SD,M4SD,E5SD
     & ,E1DD,M2DD,E3DD,M4DD,E5DD
     & ,E2SD,E2DD,M3DD,E4DD,E3,E1D4F,E1QE3,PRINT
      REAL M3DD,M1,M1N,M1ND,M1E2
      REAL M2DF,M4DF,M2SD,M4SD,M2DD,M4DD
      DATA E0,M1,M1N,M1ND,M1E2,QND
     & ,E1DF,M2DF,E3DF,M4DF,E5DF,E1SD,M2SD,E3SD,M4SD,E5SD
     & ,E1DD,M2DD,E3DD,M4DD,E5DD
     & ,E2SD,E2DD,M3DD,E4DD,E3,E1QE3,E1D4F,PRINT
     &/1.,1.,4*0.,1.,14*0.,1.,0.,3*1.,2*0.,.FALSE./
      DATA LENMIN,LENMAX,IWD/1,3000,0/
	END
      SUBROUTINE CALCTR(I,IPP,PI , J,JPP,PJ , IDBT,B,LAMB)
C	Calculate in B transition matrixelements (multipolarity LAMB)
C		between initial state I,IPP and final state J,JPP
      LOGICAL SDEQSF
      CHARACTER*1 PI,PJ,SRT,TRS
      DIMENSION B(IDBT,IDBT)
      COMMON/FCONTR/IAI,IAM,IPPI,IPPM,SDEQSF,NPHMSU,NPHMAX,NEIG
      COMMON/FECSBK/IECSBK(50,2,2)
      COMMON/SC/BEK(4),KLD(4)
      IP=I+1
      JP=J+1
      N=IECSBK(IP,1,IPP)
      M=IECSBK(JP,1,JPP)
      IED=IECSBK(IP+1,1,IPP)-N
      JED=IECSBK(JP+1,1,JPP)-M
      NII=MIN0(IED,NEIG)
      NJJ=MIN0(JED,NEIG)
      IF(IED) 1,1,2
    2 IF(JED) 1,1,3
    3 CONTINUE
      MUL=IABS(LAMB)
      IF(IPP.GE.JPP) GOTO 4
C      TRCAL can only be called with frst IPP greater than last IPP
      CALL TRCAL( JP,JPP,NJJ,JED , IP,IPP,NII,IED , IDBT,B,MUL )
      FAC=SQRT(FLOAT(2*J+1)/(2*I+1))*(-1)**(MUL+J-I)
      DO 30 NR=1,IDBT
      DO 30 NI=NR,IDBT
      TRNS=FAC*B(NR,NI)
      B(NR,NI)=FAC*B(NI,NR)
   30 B(NI,NR)=TRNS
      GOTO 5
    4 CALL TRCAL( IP,IPP,NII,IED , JP,JPP,NJJ,JED , IDBT,B,MUL )
    5 CONTINUE
C      RESULT : B(NJJ,NII) IS FILLED IN
      IF(LAMB) 100,100,101
C
C      DO NOT SQUARE
  100 TRS='R'
      GOTO 120
C
C      SQUARE FOR BE OR BM
  101 DO 102 N=1,NJJ
      DO 102 M=1,NII
      RA=B(N,M)
      B(N,M)=RA*RA
  102 CONTINUE
      TRS='B'
  120 SRT='M'
      IF(((-1)**(MUL+IABS(IPP-JPP))).EQ.1) SRT='E'
      DO 31 NR=1,NII
      WRITE(2,200)(I,PI,NR,J,PJ,N,TRS,SRT,MUL,B(N,NR),N=1,NJJ)
  200 FORMAT(4(1X,I2,A1,'(',I2,')=>',I2,A1,'(',I2,')',2A1,I1,'=',
     &   F8.4,' /;/'))
	WRITE(*,600) (NR,N,B(N,NR),N=1,NJJ)
  600 FORMAT(4(1X,I2,'=>',I2,'=',F8.4,' /;/'))
   31 CONTINUE
    1 CONTINUE
      RETURN
      END
*DECK TRANS
      SUBROUTINE TRANS(IP,IPP,NEIGI,IED,STI,EIGI,
     &                 JP,JPP,NEIGJ,JED,STJ,EIGJ,
     &                 MUL,IDBT,B)
C
C      B(J,I)=<J//T//I>/SQRT(2*I+1)
C      ANSWER IS IN B(NEIGJ,NEIGI)
C
      LOGICAL SDEQSF,EM,PAS,PRINT
      REAL M3DD,M1,M1N,M1ND,M1E2,EMDD(4)
      DIMENSION B(IDBT,IDBT),EIGI(IED,NEIGI),EIGJ(JED,NEIGJ)
      INTEGER STI(4,IED),STJ(4,JED)
      COMMON/BEPAR/E0,M1,M1N,M1ND,M1E2,QND
     &  ,DF(5),SDF(5),DDF(5)
     & ,E2SD,E2DD,M3DD,E4DD,E3,E1D4F,E1QE3,PRINT
      COMMON/FCONTR/IAI,IAM,IPPI,IPPM,SDEQSF,NPHMSU,NPHMAX,NEIG
      COMMON/COFAC/SD0,SD(20),SDSEF0,SDSEF(20),SDEF0,SDEF(20)
      COMMON/FECSBK/IECSBK(50,2,2)
      EQUIVALENCE (E2DD,EMDD(2))
      DATA PAS/.FALSE./
      IF(PAS) GOTO 980
      NP=0
      DO 981 N=NP,NPHMAX
      SD(N)=SQRT(FLOAT(NPHMAX-N))
      SDEF(N)=SD(N)
      SDSEF(N)=NPHMAX-N+1
      IF(SDEQSF) GOTO 981
      SDEF(N)=1
      SDSEF(N)=SD(N)
  981 CONTINUE
      PAS=.TRUE.
  980 CONTINUE
      CALL RDFTP(10,IP,IPP,IED,NEIGI,IER,MVR,STI,EIGI,EIGI)
      IF(IER.NE.0) RETURN
      CALL RDFTP(10,JP,JPP,JED,NEIGJ,IER,MVR,STJ,EIGJ,EIGJ)
      IF(IER.NE.0) RETURN
      IANG=IP-1
      JANG=JP-1
      NCF=0
      IF(SDEQSF.AND. IPP.EQ.2) NCF=1
      M=JPP-1
      MP=IPP-1
      N3=M-MP
      EM=.TRUE.
      IF(N3.EQ.0) EM=.FALSE.
C      IF EM EQ .FALSE. NO CHANGE IN PARITY
      L2=MUL-2
      LF=3*M
      DO 7 J=1,NEIGJ
      DO 7 I=1,NEIGJ
    7 B(J,I)=0.
      IF(MUL) 998,998,999
  999 CONTINUE
      EM=.NOT. EM
      IF(MUL.GT.5) RETURN
      IF(MUL.EQ.5 .AND. EM) RETURN
C
      DO 3 I=1,IED
      NP=STI(1,I)
      NBP=STI(2,I)
      NCP=STI(3,I)
      LP=STI(4,I)
      DO 1 J=1,JED
      N =STJ(1,J)
      NB =STJ(2,J)
      NC =STJ(3,J)
      L =STJ(4,J)
      N2M=N-NP
      N2=N2M+1
      IF(EM) GOTO 200
C ==================
C           PARITY CHANGING TRANSITIONS
  100 IF(N2) 1,112,101
  101 IF(N2-2) 122,132,102
  102 IF(N2-3) 3,142,3
C ==================
C           NO CHANGE IN PARITY
  200 IF(L2) 1000,2000,3400
C -----     M1
 1000 IF(N2) 1,16,1001
 1001 IF(N2-2) 26,36,3
C -----     E2
 2000 IF(N2) 1,12,2001
 2001 IF(N2-2) 22,32,3
C -----     M3 AND E4
 3400 IF(N2M) 1,22,3
C ==================
C
C      |NP,NBP,NCP,LP,MP,IANG> IS INITIAL STATE
C      |N ,NB ,NC ,L ,M ,JANG> IS FINAL STATE
C
C      (1+QND*Nd)*E2SD*<F//S+*D//I>/SQRT(2*I+1) ; Nd=(Ndi+Ndf)/2
   12 CONTINUE
      LD=L-LP+3
      IF(LD.LT.1.OR.LD.GT.5) GOTO 1
      BE=E2SD*(-1)**(L+LP)*SD(N+NCF)*
     *   RED(N,NB,NC,L,LD,NBP-NB,NCP-NC)*(1.+QND*(N+NP)/2.)
      GOTO 4
C
C
C      (EMDD/SQRT(2*MUL+1))*<F//(D+*D)MUL//I>/SQRT(2*I+1)
   22 LD=IABS(L-LP)
      IF(LD.GT.MUL) GOTO 1
      BE=EMDD(MUL)*DPD(N,NB,NC,L,NBP,NCP,LP,MUL)*(1.+QND*(N+NP)/2.)
      GOTO 4
C
C
C      E2SD*<F//D+*S//I>/SQRT(2*I+1)
   32 CONTINUE
      LD=LP-L+3
      IF(LD.LT.1.OR.LD.GT.5) GOTO 1
      BE=E2SD*SD(NP+NCF)*(1.+QND*(N+NP)/2.)*
     *    RED(NP,NBP,NCP,LP,LD,NB-NBP,NC-NCP)
      GOTO 4
C
C
C       M1=TE2*L(OPERATOR)
   16 LD=L-LP+3
      IF(LD.LT.1.OR.LD.GT.5) GOTO 1
      BE=E2SD*(-1)**(L+LP)*RED(N,NB,NC,L,LD,NBP-NB,NCP-NC)*
     *   SD(N)
      GOTO 61
C
   26 LD=IABS(L-LP)
      IF(LD.GT.2) GOTO 1
      BE=E2DD*DPD(N,NB,NC,L,NBP,NCP,LP,2)
      GOTO 61
C
   36 LD=LP-L+3
      IF(LD.LT.1.OR.LD.GT.5) GOTO 1
      BE=E2SD*RED(NP,NBP,NCP,LP,LD,NB-NBP,NC-NCP)*SD(NP)
C
   61 BE=BE*M1E2*RACAHI(2,1,L,LP,1,LP)
C
C      M1=M1+(1+NS+ND)*L(OP)
      IF(N.EQ.NP.AND.NB.EQ.NBP.AND.NC.EQ.NCP.AND.L.EQ.LP) BE=BE+M1+
     +   M1N*NPHMAX+M1ND*N
      BE=BE*SQRT(FLOAT(LP*(LP+1)*(2*LP+1)))
      GOTO 4
C
C -----     PARITY CHANGING PART
C
C ----- (SDF(MUL)/SQRT(2*MUL+1))*<F//((S+*D)2*(S+*F)3)MUL//I>/SQRT(2I+1)
  112 CONTINUE
      IF(PRINT) WRITE (2,912) MUL,N,NB,NC,L,NP,NBP,NCP,LP,IANG
  912 FORMAT(1X,'MUL, N,NB,NC,L, NP,NBP,NCP,LP,I = ',
     1   I2,3X,'<',4I3, ' //',4X,'//',5I3,'>',6X, 'LABEL 112'/)
      LD=L-LP+3
      IF(LD.LT.1.OR.LD.GT.5) GOTO 1
      BE=SDF(MUL)*(-1)**(L+LP)*SD(N)*SDEF(NP)*
     &   RED(N,NB,NC,L,LD,NBP-NB,NCP-NC)*RACAHI(LP,3,JANG,MUL,IANG,2)
      GOTO 2
C ----------
C
C -----NP=N TERMS
  122 CONTINUE
      IF(PRINT) WRITE (2,922) MUL,N,NB,NC,L,NP,NBP,NCP,LP,IANG
  922 FORMAT(1X,'MUL, N,NB,NC,L, NP,NBP,NCP,LP,I = ',
     1   I2,3X,'<',4I3, ' //',4X,'//',5I3,'>',6X, 'LABEL 122'/)
      LD=IABS(L-LP)
      IF(LD.GT.4) GOTO 1
      BE=0.
      IF(MUL.NE.1.) GOTO 1220
      BE=E1D4F*DPD(N,NB,NC,L,NBP,NCP,LP,4)*SDEF(N)*
     &    RACAHI(LP,3,JANG,1,IANG,4)
C
C ---(E1QE3*E3DF/SQRT(21))<F//((S+*D)2*(D+*F)3)1//I>/SQRT(2*I+1)
      IF(E1QE3.EQ.O) GOTO 1220
      X=0.
      DO 1221 LAB=2,4
      X = X + (2*LAB+1.)*RACAHI(2,LAB,3,1,2,3)
     &    *RACAHI(LP,3,L,1,IANG,LAB)*DPD(N,NB,NC,L,NBP,NCP,LP,LAB)
 1221 CONTINUE
      BE = BE + X*E1QE3*DF(3)*SD(N)
  952 FORMAT(11X,'X = ',F7.3,5X,'BE = ',F7.3)
      IF(PRINT) WRITE (2,952) X,BE
 1220 CONTINUE
      IF(LD.GT.2) GOTO 2
C
C ----(DDF(MUL)/SQRT(5(2*MUL+1)))*<F//((D+*D)2*(S+*F)3)MUL//I>/SQRT(2I+1)
      BE=BE+DDF(MUL)*DPD(N,NB,NC,L,NBP,NCP,LP,2)*SDEF(N)*
     &    RACAHI(LP,3,JANG,MUL,IANG,2)
      IF(MUL.NE.3) GOTO 2
      IF(NB.NE.NBP) GOTO 2
      IF(NC.NE.NCP) GOTO 2
      IF(L.NE.LP) GOTO 2
C
C ----- +E3*<F//(S+*F)3//I>/SQRT(2I+1)
      BE=BE+E3*(-1)**(IANG+1+L)*SDEF(NP)
      GOTO 2
C ----------
C
C ----- NP-N=1 TERMS
  132 CONTINUE
      IF(PRINT) WRITE (2,932) MUL,N,NB,NC,L,NP,NBP,NCP,LP,IANG
  932 FORMAT(1X,'MUL, N,NB,NC,L, NP,NBP,NCP,LP,I = ',
     1   I2,3X,'<',4I3, ' //',4X,'//',5I3,'>',6X, 'LABEL 132'/)
      LD=IABS(L-LP)
      IF(LD.GT.4) GOTO 1
C
C ---(E1QE3*E2DD*E3DF/SQRT(105))*<F//((D+*D)2*(D+*F)3)1//I>/SQRT(2I+1)
      BE=0.
      IF(MUL.NE.1) GOTO 1320
      IF(E1QE3.EQ.0) GOTO 1320
      L2I = LP-2
      IF(L2I.LT.0) L2I=0
      L2F = LP+2
      DO 1321 L2=L2I,L2F
      L2D = LP-L2+3
      X=0.
      DO 1322 NBD2=0,1
      NB2 = NBP+NBD2
      DO 1322 NBC2=0,1
      NCD2=NBC2-NBD2
      NC2 = NCP+NCD2
      X = X+DPD(N,NB,NC,L,NB2,NC2,L2,2)*RED(NP,NBP,NCP,LP,L2D,NBD2,NCD2)
 1322 CONTINUE
      BE = BE + X*RACAHI(2,3,L,IANG,1,L2)*RACAHI(3,3,L2,LP,2,IANG)
      IF(PRINT) WRITE (2,953) L2,X,BE
  953 FORMAT(11X,'L2 = ',I2,5X,'X = ',F7.3,5X,'BE = ', F7.3)
 1321 CONTINUE
      BE = BE*E1QE3*E2DD*DF(3)
      IF(PRINT) WRITE (2,9533) BE
 9533 FORMAT(52X,'(D+*D)2*(D+*F)3 TERM ONLY:  BE = ',F7.3)
 1320 CONTINUE
      LD=LP-L+3
      IF(LD.LT.1.OR.LD.GT.5) GOTO 2
C
C ----- (SDF(MUL)/SQRT(2*MUL+1))*<F//((D+*S)2*(S+*F)3)MUL//I>/SQRT(2I+1)+
C      + (DF(MUL)/SQRT(2*MUL+1))*<F//(D+*F)MUL//I>/SQRT(2I+1)
      BE = BE + (SDF(MUL)*SDSEF(N)+DF(MUL))*
     &  RED(NP,NBP,NCP,LP,LD,NB-NBP,NC-NCP)*RACAHI(LP,3,JANG,MUL,IANG,2)
      GOTO 2
C
C ----(E1QE3*E3DF/SQRT(21))*<F//((D+*S)2*(D+*F)3)1//I>/SQRT(2I+1)
  142 CONTINUE
      IF(PRINT) WRITE (2,942) MUL,N,NB,NC,L,NP,NBP,NCP,LP,IANG
  942 FORMAT(1X,'MUL, N,NB,NC,L, NP,NBP,NCP,LP,I = ',
     1   I2,3X,'<',4I3, ' //',4X,'//',5I3,'>',6X, 'LABEL 142'/)
      IF(MUL.NE.1) GOTO 1
      IF(E1QE3.EQ.0) GOTO 1
      LD=IABS(L-LP)
      IF(LD.GT.4) GOTO 1
      BE=0.
      L2I = LP-2
      IF(L2I.LT.0) L2I=0
      L2F = LP+2
       DO 1421 L2=L2I,L2F
       X=0.
        DO 1422 LAB=2,4,2
        X = X + (2*LAB+1)*RACAHI(3,3,2,LAB,2,1)
     &    *RACAHI(3,1,LP,L,LAB,IANG)*RACAHI(2,2,L,LP,LAB,L2)
 1422 CONTINUE
        IF (X.EQ.0) GOTO 1421
        LD = L2-L+3
        LDP = LP-L2+3
         DO 1423 NBD2=0,1
         NB2 = NBP + NBD2
         DO 1423 NBC2=0,1
         NCD2 = NBC2 - NBD2
         NC2 = NCP + NCD2
         BE = BE + X*RED(N-1,NB2,NC2,L2,LD,NB-NB2,NC-NC2)
     &           *RED(NP,NBP,NCP,LP,LDP,NBD2,NCD2)
      IF(PRINT) WRITE (2,951) L2,NB2,NC2,X,BE
  951 FORMAT(11X,'L2 = ',I3,4X,'NB2 = ',I3,4X,'NC2 = ',
     1     I3,5X,'X = ',F7.3,5X,'BE = ',F7.3)
 1423    CONTINUE
C      IF(PRINT) WRITE (2,951) L2,NB2,NC2,X,BE
 1421   CONTINUE
 1420 BE = E1QE3*DF(3)*SD(N-1)*BE
      GOTO 2
C ----------
C
C       END BIG LOOPS
C
C      DECOUPLE 3- PHONON AND  DEVIDE BY SQRT(2*I+1)
C
    4 IF(LF) 5,5,6
    6 BE=BE*RACAHI(L,3,MUL,IANG,JANG,LP)*SQRT(FLOAT(JANG*2+1))
      GOTO 2
    5 BE=BE/SQRT(FLOAT(2*LP+1))
    2 CONTINUE
      IF(PRINT) WRITE (2,900) MUL,N,NB,NC,L,NP,NBP,NCP,LP,IANG,BE
  900 FORMAT(1X,'MUL, N,NB,NC,L, NP,NBP,NCP,LP,I = ',
     1   I3,3X,'<',4I3, ' //',4X,'//',4I3,',',I3,'>',6X,
     2   'RME = ',F7.3/)
      DO 50 NI=1,NEIGI
      DO 50 NJ=1,NEIGJ
      B(NJ,NI)=EIGJ(J,NJ)*BE*EIGI(I,NI)+B(NJ,NI)
   50 CONTINUE
    1 CONTINUE
    3 CONTINUE
C
      RETURN
C
C      E0
  998 CONTINUE
      DO 997 I=1,IED
C ----- E0*ND
      DO 997 NI=1,NEIGI
      DO 997 NJ=1,NEIGJ
      B(NJ,NI)=B(NJ,NI)+EIGI(I,NI)*EIGI(I,NJ)*STI(1,I)
  997 CONTINUE
C
      RETURN
      END
      SUBROUTINE TRCAL(IP,IPP,NII,IED
     &                 ,JP,JPP,NJJ,JED
     &                 ,IDBT,B,MUL)
C	This routine only calls TRANS. It is necessary as an intermediate
C		step to insure good bookkeeping of array's in workspace.
      DIMENSION B(1)
      COMMON/PROGL/LENMIN,LENMAX,IWD
      IST=IDBT*IDBT+1
      IEIG=IST+4*IED
      JST=IEIG+NII*IED
      JEIG=JST+4*JED
      LEN=JEIG+NJJ*JED+LENMIN
      IF(LEN.GT.LENMAX) GOTO 9
      CALL XRFLX(LEN,IWD)
      CALL TRANS(IP,IPP,NII,IED,B(IST),B(IEIG),
     &           JP,JPP,NJJ,JED,B(JST),B(JEIG),
     &           MUL,IDBT,B(1))
      LEN=LENMIN+IDBT*IDBT
      CALL XRFLX(LEN,IWD)
    9 RETURN
      END
	SUBROUTINE RDEM(XYZ)
C	Takes care of input manipulation for PCIBAEM
C	XYZ is the workspace array, used similarily as in PCIBAXW 
	CHARACTER*2 ANS
	DIMENSION XYZ(3000)
	CHARACTER*1 A,PJ,PI
	LOGICAL MULT
      COMMON/FECSBK/IECSBK(50,2,2)
      COMMON / MUL / COMUL(6),MULT,CHQ
      COMMON/BEPAR/E0,M1,M1N,M1ND,M1Q,QND
     & ,E1DF,M2DF,E3DF,M4DF,E5DF,E1SD,M2SD,E3SD,M4SD,E5SD
     & ,E1DD,M2DD,E3DD,M4DD,E5DD
     & ,E2SD,E2DD,M3DD,E4DD,E3SF,E1D4F,E1QE3,PRINT
      REAL M3DD,M1,M1N,M1ND,M1Q
      REAL M2DF,M4DF,M2SD,M4SD,M2DD,M4DD
C
C       E2DD=R*E2SD , R=-SQRT(35.)/2. TO SU(3) QUADR. OPERATOR
      E2DD=-SQRT(35.)*E2SD/2.
      IF(MULT) E2DD=CHQ*E2SD
C
      WRITE(2,600)
  600 FORMAT(/1X,'REDUCED MATRIX ELEMENTS ARE LABELLED RE OR RM.  ',
     1 'THEIR VALUES ARE DIVIDED BY SQRT(2*I+1), I=L INITIAL')
      WRITE(2,601)
  601 FORMAT(/4(' L,P(ST#)=>L,P(ST#) BE=',7X,'/;/'))
1000	WRITE(*,*) 'Transition Multipolarity (E0,M1,E1,E2,E3,E4,S=STOP)?'
	READ(*,10) ANS
10 	FORMAT(A2)
	IF(ANS.EQ.'E0') GOTO 100
	IF(ANS.EQ.'M1') GOTO 110
	IF(ANS.EQ.'E1') GOTO 120
	IF(ANS.EQ.'M2') GOTO 130
	IF(ANS.EQ.'E2') GOTO 140
	IF(ANS.EQ.'M3') GOTO 150
	IF(ANS.EQ.'E3') GOTO 160
	IF(ANS.EQ.'M4') GOTO 170
	IF(ANS.EQ.'E4') GOTO 180
	IF(ANS.EQ.'E5') GOTO 190
	IF(ANS.EQ.'S '.OR. ANS.EQ.'ST') GOTO 200
	GOTO 1000
200	CONTINUE
	RETURN
100	CONTINUE
C	E0 transitions
C         E0
	WRITE(*,101) E0
101	FORMAT(' E0 Transitions'/' parameter: E0=',F8.4)
	WRITE(*,*) 'Is this ok? Y/N'
	READ(*,11) A
11	FORMAT(A1)
	IF(A.NE.'N') GOTO 102
	CALL RDPAR('E0  ',E0,1)
	GOTO 100
102	WRITE(2,101) E0
	IDP=0
103	L=0
	CALL GETTR(L,IDP,ANS,*1000,XYZ)
      GOTO 103
110	CONTINUE
C	M1 transitions
C         M1,M1ND,M1Q
	WRITE(*,111) M1,M1ND,M1Q
111	FORMAT(' M1 Transitions'/' parameters: ,M1=',F8.4,
     & 	'  , M1ND=',F8.4,'  , M1Q=',F8.4)
	write(*,*) 'are these ok? Y/N'
	READ(*,11) A
	IF(A.NE.'N') GOTO 112
	CALL RDPAR('M1  ',M1,1)
	CALL RDPAR('M1ND',M1ND,1)
	CALL RDPAR('M1Q ',M1Q,1)
	GOTO 110
112	WRITE(2,111) M1,M1ND,M1Q
	IDP=0
113	L=1
	CALL GETTR(L,IDP,ANS,*1000,XYZ)
      GOTO 113
120	CONTINUE
C	E1 transitions
C          E1DF,E1Q
	WRITE(*,121) E1DF,E1Q
121	FORMAT(' E1 Transitions'/' parameters: E1DF=',F8.4,
     & 	'  , E1Q=',F8.4)
	write(*,*) 'are these ok? Y/N'
	READ(*,11) A
	IF(A.NE.'N') GOTO 122
	CALL RDPAR('E1DF',E1DF,1)
	CALL RDPAR('E1Q ',E1Q,1)
	GOTO 120
122	WRITE(2,121) E1DF,E1Q
	E1SD=E1Q*E2SD
	E1DD=E1Q*E2DD
	IDP=1
123	L=1
	CALL GETTR(L,IDP,ANS,*1000,XYZ)
      GOTO 123
130	CONTINUE
C	M2 transitions
C         M2DF,M2SD,M2DD
	GOTO 1000
140	CONTINUE
C	E2 transitions
C         E2SD,E2DD
	WRITE(*,141) E2SD,E2DD
141	FORMAT(' E2 Transitions'/' parameters: E2SD=',F8.4,
     & 	'  , E2DD=',F8.4)
	write(*,*) 'are these ok? Y/N'
	READ(*,11) A
	IF(A.NE.'N') GOTO 142
	CALL RDPAR('E2SD',E2SD,1)
	CALL RDPAR('E2DD',E2DD,1)
	GOTO 140
142	WRITE(2,141) E2SD,E2DD
	IDP=0
143	L=2
	CALL GETTR(L,IDP,ANS,*1000,XYZ)
      GOTO 143
150	CONTINUE
C	M3 transitions
C         M3DD
	GOTO 1000
160	CONTINUE
C	E3 transitions
C         E3SF,E3DF,E3Q
	WRITE(*,161) E3SF,E3DF,E3Q
161	FORMAT(' E3 Transitions'/' parameters: E3SF=',F8.4,
     & 	'  , E3DF=',F8.4,'  , E3Q=',F8.4)
	write(*,*) 'are these ok? Y/N'
	READ(*,11) A
	IF(A.NE.'N') GOTO 162
	CALL RDPAR('E3SF',E3SF,1)
	CALL RDPAR('E3DF',E3DF,1)
	CALL RDPAR('E3Q',E3Q,1)
	GOTO 160
162	WRITE(2,161) E3SF,E3DF,E3Q
	E3SD=E3Q*E2SD
	E3DD=E3Q*E2SD
	IDP=1
163	L=3
	CALL GETTR(L,IDP,ANS,*1000,XYZ)
      GOTO 163
170	CONTINUE
C	M4 transitions
C          M4DF,M4SD,M4DD,
	GOTO 1000
180	CONTINUE
C	E4 transitions
C         E4DD
	WRITE(*,181) E4DD
181	FORMAT(' E2 Transitions'/' parameters: E4DD=',F8.4)
	write(*,*) 'are these ok? Y/N'
	READ(*,11) A
	IF(A.NE.'N') GOTO 182
	CALL RDPAR('E4DD',E4DD,1)
	GOTO 180
182	WRITE(2,181) E4DD
	IDP=0
183	L=4
	CALL GETTR(L,IDP,ANS,*1000,XYZ)
      GOTO 183
190	CONTINUE
C	E5 transitions
C         E5DF,E5SD,E5DD
	GOTO 1000
      END
	SUBROUTINE GETTR(L,IDP,ANS,*,XYZ)
	CHARACTER*1 PJ,PI,PA(2)
	CHARACTER*2 ANS
	DIMENSION XYZ(3000)
      COMMON/FCONTR/IAI,IAM,IPPI,IPPM,SDEQSF,NPHMSU,NPHMAX,NEIG
	DATA PA/'+','-'/
	WRITE(*,*) 'initial state spin ='
	READ(*,12) IS
12	FORMAT(I3)
	IF(IS.LT.0) L=-L
C       IF L .LE.0 TRANS. AMPL. WON'T BE SQUARED
	IS=ABS(IS)
      IF(IS.GT.50) RETURN 1
	WRITE(*,*) 'initial state parity ='
	READ(*,11) PI
11	FORMAT(A1)
	IF(L.EQ.0) GOTO 144
	WRITE(*,*) 'final state spin ='
	READ(*,12) JS
	GOTO 145
144	JS=IS
145	CONTINUE
      IPP=1
      IF(PI.EQ.'-') IPP=2
      JPP=IPP+IDP
	IF(JPP.EQ.3) JPP=1
	PJ=PA(JPP)
	PI=PA(IPP)
      WRITE(2,617)
  617 FORMAT(//)
	WRITE(*,143) ANS,IS,PI,JS,PJ
143	FORMAT(1X,A2,' transitions from ',I2,A1,' to ',I2,A1)
      CALL CALCTR(IS,IPP,PI,JS,JPP,PJ,NEIG,XYZ,L)
	RETURN
	END
	
