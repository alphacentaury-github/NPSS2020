      PROGRAM QUASH

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C  ORGANISATION OF THE PROGRAM                                         C
C         SUBROUTINE CHANEL  CALCULATES THE CHANNEL MOMENTA K          C
C         SUBROUTINE LAGU    DETERMINES THE LAGUERRE-POLYNOMIALS AND   C
C                            NORMALISATION OF WAVE FUNCTIONS           C
C         SUBROUTINE ROMBER  PERFORMS THE INTEGRATION                  C
C         SUBROUTINE FUNK    CALCULATES THE REAL AND IMAGINARY PART OF C
C                            THE INTEGRAND                             C
C         SUBROUTINE INVERC  INVERTS A COMPLEX MATRIX AND CALCULATES   C
C                            THE DETERMINANT                           C
C         SUBROUTINE INVERD  INVERTS A SYMMETRIC DOUBLE PRECISION      C
C                            MATRIX                                    C
C         SUBROUTINE POLE    CALCULATES MATRIX ELEMENTS FOR COMPLEX    C
C                            ENERGIES AND YIELDS DET A                 C
C         SOUBROUTINE SCATT  CALCULATES THE S-MATRIX ELEMENTS          C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C   PARAMETER:                                                         C
C      ITMAX = LIMITS THE DOUBLING OF THE NUMBER OF MESH POINTS        C
C      LLMAX = MAXIMUM NUMBER OF BASIS STATES THAT ARE ALLOWED         C
C      LPOINT= NUMBER OF LAGUERRE POLYNOMIALS WHICH ARE CALCULATED     C
C      NPOIN = NUMBER OF MESH POINTS USED FOR THE FIRST ESTIMATE       C
C              OF THE INTEGRAL                                         C
C   IMPORTANT VARIABLES:                                               C
C      LA     = LAGUERRE POLYNOMIALS CALCULATED ON LPOINT' POINTS      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      IMPLICIT DOUBLE PRECISION(A-H,O-Z)

      PARAMETER (NPOIN=40,ITMAX=20,LLMAX=10,LPOINT=320)

      DOUBLE PRECISION LA(0:LLMAX,0:LPOINT),FACTOR(LLMAX+1)

C    ORGANISATION OF COMMON BLOCKS
C        FUNKPAR: PARAMETERS FOR THE CALCULATION OF THE INTEGRANDS
C        ROMPAR : CONTAINS THE INTEGRATION PARAMETERS
C        LAGUER : CONTAINS THE CALCULATED LAGUERRE POLYNOMIALS AND THE
C                 NORMALISATION CONSTANTS
C        FIELDC : MATRICES USED FOR THE INVERSION OF A COMPLEX MATRIX
C                 OR TO CALCULATE ITS DETERMINANT
C        FIELDD : MATRICES USED TO INVERT A SYMMETRIC DOUBLE PRECISION
C                 MATRIX

      COMMON/ROMPAR/EPS,NPOINT,ULIMIT,INTERV
      COMMON/LAGUER/LA,FACTOR,PI

      OPEN (1,FILE='SYM00',STATUS='UNKNOWN')
      OPEN (2,FILE='ASYM00',STATUS='UNKNOWN')
      OPEN (3,FILE='SYM11',STATUS='UNKNOWN')
      OPEN (4,FILE='ASYM11',STATUS='UNKNOWN')

      REWIND(1)
      REWIND(2)
      REWIND(3)
      REWIND(4)

      NAUS=0
      PI=.4D+1*ATAN(1.)
      NPOINT=NPOIN

C   PARAMETERS FOR THE INTEGRATION ROUTINE
C     EPS    = ERROR IN THE INTEGRATION ROUTINE
C     ULIMIT = UPPER BOUND OF THE INTEGRATION INTERVAL
C     INTERV = NUMBER OF SUBINTERVALS IN WHICH THE INTEGRATION INTERVAL
C              IS DIVIDED (NPOIN/INTERV=INTEGER > 1)
      EPS=1.D-10
      ULIMIT=.8D+1
      INTERV=20

      PRINT*,' THE ROUTINE HAS THE FOLLOWING VALUES FOR THE PARAMETERS'
      PRINT*,'              OF THE INTEGRATION ROUTINE:'
      PRINT*,'  '
      WRITE(*,1090)EPS,ULIMIT,INTERV
      PRINT*,'   '
      PRINT*,'IF YOU WANT TO CHANGE THESE VALUES TYPE 1, IF NOT, ANYTHIN
     1G ELSE '
      READ(*,*,ERR=4)NANS
      IF (NANS.NE.1) GOTO 4

1     JUMP=1
      PRINT*,' ACCURACY                         '
      READ(*,*,ERR=700)EPS
      JUMP=2
2     PRINT*,' UPPER INTEGRATION LIMIT?         '
      READ(*,*,ERR=700)ULIMIT
      JUMP=3
3     PRINT*,' IN HOW MANY INTERVALS DO YOU WANT TO DIVIDE THE INTEGRATI
     10N RANGE?'
      PRINT*,' ALLOWED VALUES ARE: 4,5,8,10,20  '
      READ(*,*,ERR=700)INTERV
      IF ((INTERV.NE.4).AND.(INTERV.NE.5).AND.(INTERV.NE.8).AND.(INTERV
     1    .NE.10).AND.(INTERV.NE.20)) INTERV=20

C  THE LAGUERRE POLYNOMIALS AND THE NORMALISATIONS ARE CALCULATED
4     CALL LAGU

C  PROGRAM SELECTION FROM THE MENU
5     PRINT*,' '
      PRINT*,'  '
      PRINT*,'         CHOSE THE DESIRED ROUTINE OUT OF THE MENU!'
      PRINT*,'  '
      PRINT*,'  1:  CALCULATION OF DET A FOR DETERMINATION OF POLE POSIT
     1IONS'
      PRINT*,'  2:  CALCULATION OF S-MATRIX ELEMENTS'
      PRINT*,'ELSE  END THE PROGRAM '
      PRINT*,' '
      JUMP=6
6     READ(*,*,ERR=700)NANS
      IF (NANS.EQ.1) THEN
        CALL POLE
      ELSEIF (NANS.EQ.2) THEN
        CALL SCATT
      ELSE
        NAUS=1
      END IF

      IF (NAUS.NE.1) GOTO 5

      CLOSE (1,STATUS='KEEP')
      CLOSE (2,STATUS='KEEP')
      CLOSE (3,STATUS='KEEP')
      CLOSE (4,STATUS='KEEP')

800   STOP

700   PRINT*,' GIVE THE LAST INPUT ONCE MORE !'
      GOTO (1,2,3,4,5,6),JUMP

1090  FORMAT(' ACCURACY:',T41,E12.4/' UPPER INTEGRATION LIMIT:',T41,
     1     E12.4/' # OF INTERVALS FOR THE INTEGRATION:',T43,I3)

      END


      SUBROUTINE LAGU

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C  HERE THE LAGUERRE POLYNOMIALS ARE CALCULATED ON LPOINT EQUIDISTANT  C
C  POINTS FROM 0 TO ULIMIT BY RECURSION AND STORED IN LAGU.            C
C  THE NORMALISATION FACTORS ARE ALSO CALCULATED AND STORED IN FACTOR. C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  IMPORTANT VARIABLES                                                 C
C      G1/G2  VARIABLES USED TO CALCULATE THE NORMALISATIONS           C
C      SQ     FACTOR FOR THE NORMALISATION                             C
C      WIDTH  DISTANCE BETWEEN TWO MESHPOINTS WHERE THE LAGUERRE       C
C             POLYNOMIALS ARE CALCULATED                               C
C      Z      LAGUERRE POLYNOMIAL ARE CALCULATED AT 2*Z**2             C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      IMPLICIT DOUBLE PRECISION(A-H,O-Z)

      PARAMETER (LLMAX=10,LPOINT=320)

      DOUBLE PRECISION LA(0:LLMAX,0:LPOINT),FACTOR(LLMAX+1)

      COMMON/ROMPAR/EPS,NPOINT,ULIMIT,INTERV
      COMMON/LAGUER/LA,FACTOR,PI

      WIDTH=ULIMIT/LPOINT
      SQ=.8D+1*DSQRT(.2D+1/PI)
      FACTOR(1)=DSQRT(SQ)
      G1=.1D+1
      G2=.15D+1
      FACTOR(2)=(SQ/.15D+1)**5.D-1
      DO 10 K1=1,LPOINT+1
        Z=WIDTH*(K1-1)
        LA(0,K1-1)=.1D+1
        LA(1,K1-1)=.15D+1-.2D+1*Z*Z
        DO 10 K2=1,LLMAX-1
          IF (K1.EQ.1) THEN
            G1=G1*(K2+1)
            G2=G2*(K2+.15D+1)
            FACTOR(K2+2)=(SQ*G1/G2)**5.D-1
          END IF
          LA(K2+1,K1-1)=((.15D+1+.2D+1*(K2-Z*Z))*LA(K2,K1-1)-(5.D-1+K2)*
     1         LA(K2-1,K1-1))/(K2+.1D+1)
10    CONTINUE
      RETURN
      END


      SUBROUTINE CHANEL(LMAX,KLFELD)

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C   THIS ROUTINE CALCULATES THE CHANNEL MOMENTA K                      C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      IMPLICIT DOUBLE PRECISION(A-H,O-Z)

      PARAMETER(LLMAX=10)

      DOUBLE PRECISION K0QUAD,KL(2,2),KLFELD(LLMAX+1,2)

      COMMON/FUNKPA/K0QUAD,KL,SIGN

      KLFELD(1,1)=DSQRT(K0QUAD)
      KLFELD(1,2)=0.D+0
      DO 10 K1=1,LMAX+1
        Y=K0QUAD-.8D+1*K1
        IF (Y.GT.0.) THEN
          KLFELD(K1+1,1)=DSQRT(Y)
          KLFELD(K1+1,2)=0.D+0
        ELSE
          KLFELD(K1+1,1)=0.D+0
          KLFELD(K1+1,2)=DSQRT(-Y)
        END IF
10    CONTINUE
      RETURN
      END


      SUBROUTINE INVERD(N)

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C  INVERSE OF A DOUBLE PRECISION MATRIX A IS CALCULATED USING A GAUSS  C
C  ALGORITHM. AFTER THE INVERSION, THE MATRIX A CONTAINS THE LOWER AND C
C  UPPER TRIANGULAR MATRICES APPEARING IN THE GAUSS ALGORITHM. TO      C
C  AVOID DIVISION BY ZERO WE PERFORM A PERMUTATION OF THE ROWS OF THE  C
C  MATRIX. THE INVERSE MATRIX IS STORED IN AINV                        C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C   IMPORTANT VARIABLES:                                               C
C       NPIVOT: STORES THE PERMUTATION                                 C
C       J,X,NW  AUXILIARY VARIABLES USED FOR INTERCHANGE OF ROWS       C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      IMPLICIT DOUBLE PRECISION(A-H,O-Z)

      PARAMETER (LLMAX=10)

      DOUBLE PRECISION A(LLMAX,LLMAX),AH(LLMAX,LLMAX),AINV(LLMAX,LLMAX)
      INTEGER NPIVOT(LLMAX)

      COMMON/FIELDD/A,AH,AINV

      DO 5 K1=1,N+1
        NPIVOT(K1)=K1
        DO 5 K2=1,N+1
          AINV(K1,K2)=0.D+0
5      CONTINUE

C   HERE THE MATRIX IS TRANSFORMED INTO THE FACTORISED FORM P*A=L*U WITH
C   A PERMUTATION MATRIX P AND LOWER AND UPPER TRIANGULER MATRICES L,U
      DO 30 K1=1,N
        NW=K1
        X=DABS(A(K1,K1))

C  THE LARGEST VALUE IN A COLUMN IS DETERMINED
        DO 12 K4=K1+1,N+1
          IF (DABS(A(K4,K1)).GT.X) THEN
            NW=K4
            X=DABS(A(K4,K1))
          END IF
12      CONTINUE
        IF (NW.NE.K1) THEN
          J=NPIVOT(K1)
          NPIVOT(K1)=NPIVOT(NW)
          NPIVOT(NW)=J

C  IF THE LARGEST VALUE IN A COLUMN IS NOT ON THE DIAGONAL, THEN THE
C  ROWS ARE INTERCHANGED
          DO 15 K4=1,N+1
            FAKT=A(K1,K4)
            A(K1,K4)=A(NW,K4)
            A(NW,K4)=FAKT
15        CONTINUE
        END IF

C  SUBTRACTION OF ROWS. THE FACTORS APPEARING IN LINEAR COMBINATION OF
C  TWO ROWS ARE STORED IN THE LOWER TRIANGLE
        DO 30 K3=K1+1,N+1
          FAKT=A(K3,K1)/A(K1,K1)
          A(K3,K1)=FAKT
          DO 30 K2=K1+1,N+1
            A(K3,K2)=A(K3,K2)-A(K1,K2)*FAKT
30    CONTINUE

C  INVERSION OF MATRIX IS PERFORMED IN TWO STEPS
39    DO 50 K1=1,N+1

C  PERMUTATION OF ROWS OF THE UNIT MATRIX
       AINV(K1,NPIVOT(K1))=1.

C  INVERS OF THE UPPER TRIANGULAR MATRIX IS DETERMINED BY ELIMINATION
C  STARTING AT LAST ROW
       DO 50 K2=1,N+1
        AH(K1,K2)=AINV(K1,K2)
        IF (K1.GT.1) THEN
         DO 40 K3=1,K1-1
          AH(K1,K2)=AH(K1,K2)-A(K1,K3)*AH(K3,K2)
40       CONTINUE
        END IF
50    CONTINUE

C  INVERS OF THE UPPER TRIANGULAR MATRIX IS DETERMINED BY ELIMINATION
C  STARTING AT LAST ROW
      DO 70 K2=1,N+1
        DO 70 K1=K2,N+1
          LH=N+1+K2-K1
          AINV(LH,K2)=AH(LH,K2)
          IF (LH.LE.N) THEN
            DO 60 K3=LH+1,N+1
            AINV(LH,K2)=AINV(LH,K2)-A(LH,K3)*AINV(K3,K2)
60          CONTINUE
          END IF
          AINV(LH,K2)=AINV(LH,K2)/A(LH,LH)
          AINV(K2,LH)=AINV(LH,K2)
70    CONTINUE

      RETURN
      END


      SUBROUTINE SCATT

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C  S-MATRIX ELEMENTS ARE CALCULATED FOR SYMMETRIC AND ANTISYMMETRIC    C
C  SCATTERING IN THE 0-0 AND 1-1 CHANNELS RESPECTIVELY.                C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C   IMPORTANT VARIABLES:                                               C
C      AM     = S-MATRIX ELEMENTS FOR ANTISYMMETRIC SCATTERING         C
C      COEFF  = MATRIX CONTAINING THE EXPANSION COEFFICIENTS OF THE    C
C      FACT   = NORMALISATION FACTORS                                  C
C      K0QUAD = K0*K0 = ENERGY (OF THE RELATIVE MOTION IF THE MESONS   C
C               ARE IN THE GROUND STATE)                               C
C      KLFELD = CONTAINS THE VALUES OF CHANNEL MOMENTA K               C
C      LA     = LAGUERRE POLYNOMIALS CALCULATED ON LPOINT' POINTS      C
C      LMAX   = HIGHEST CHANNEL INDEX USED FOR THE CALCULATION         C
C      SIGN   = SIGN OF PHASE IN PLANE WAVE                            C
C      SM     = S-MATRIX ELEMENTS FOR SYMMETRIC SCATTERING             C
C    D,DH,DINV  MATRICES USED FOR INVERSION                            C
C    K0MIN/MAX  SMALLEST/LARGEST MOMENTUM VALUE USED IN THE SCATTERING C
C               CALCULATION                                            C
C      L,KL     CONTAIN THE VALUES OF CHANNEL INDEX L AND CHANNEL      C
C               MOMENTA K FOR THE INTEGRATION                          C
C      Y1..Y4   AUXILIARY VARIABLES                                    C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      IMPLICIT DOUBLE PRECISION(A-H,O-Z)

      PARAMETER (NPOIN=40,ITMAX=20,LLMAX=10,LPOINT=320)

      COMPLEX SM(LLMAX,LLMAX),AM(LLMAX,LLMAX),COEFF(LLMAX,LLMAX)
      DOUBLE PRECISION LA(0:LLMAX,0:LPOINT),K0QUAD,K0,K0MIN,K0MAX,
     1 FACTOR(LLMAX+1),D(LLMAX,LLMAX),DH(LLMAX,LLMAX),RESULT(2),KL(2,2),
     2 DINV(LLMAX,LLMAX),KLFELD(LLMAX+1,2)
      INTEGER L(2)

      COMMON/FUNKPA/K0QUAD,KL,SIGN
      COMMON/ROMPAR/EPS,NPOINT,ULIMIT,INTERV
      COMMON/LAGUER/LA,FACTOR,PI
      COMMON/FIELDC/AM,SM,COEFF,ADET
      COMMON/FIELDD/D,DH,DINV

4     JUMP=4
      WRITE(*,1100)LLMAX
      READ(*,*,ERR=700)LMAX

      LMAX=MIN0(LLMAX,LMAX)
      LMAX=LMAX-1

C   THE PARAMETERS ARE WRITTEN ON THE OUTPUT FILES
      WRITE(1,1030)0,0,EPS,ULIMIT,INTERV,LMAX+1
      WRITE(2,1030)0,0,EPS,ULIMIT,INTERV,LMAX+1
      WRITE(3,1030)1,1,EPS,ULIMIT,INTERV,LMAX+1
      WRITE(4,1030)1,1,EPS,ULIMIT,INTERV,LMAX+1
      WRITE(1,1000)
      WRITE(2,1020)
      WRITE(3,1000)
      WRITE(4,1020)
      WRITE(1,1005)
      WRITE(2,1005)
      WRITE(3,1015)
      WRITE(4,1015)

5     JUMP=5
      PRINT*,' # OF VALUES AT WHICH THE S-MATRIX IS CALCULATED? '
      READ(*,*,ERR=700)NK0
      NK0=MAX0(NK0-1,1)
      JUMP=6
6     PRINT*,' LOWER LIMIT OF K:  '
      READ(*,*,ERR=700)K0MIN
      IF (K0MIN.LE.0.D+0) K0MIN=1.D-6
      PRINT*,' UPPER LIMIT OF K   '
      READ(*,*,ERR=700)K0MAX

      DO 100 I11=1,NK0+1
        K0=K0MIN+(K0MAX-K0MIN)*(I11-1)/NK0
        K0QUAD=K0*K0

C  THIS ROUTINE CALCULATES THE VALUES OF THE CHANNEL MOMENTA K
        CALL CHANEL(LMAX,KLFELD)

C   THE MATRIX (PHI(+),PHI(+)) IS CALCULATED. THE REAL PART OF THE
C   MATRIX ELEMENTS IS STORED IN D', THE IMAGINARY PART IN COEFF'.
        SIGN=1.
        DO 10 K1=1,LMAX+1
          L(1)=K1-1
          KL(1,1)=KLFELD(K1,1)
          KL(1,2)=KLFELD(K1,2)
          DO 10 K2=K1,LMAX+1
            L(2)=K2-1
            KL(2,1)=KLFELD(K2,1)
            KL(2,2)=KLFELD(K2,2)
            CALL ROMBER(RESULT,L)
            Y1=KL(1,2)+KL(2,2)
            Y2=-KL(1,1)-KL(2,1)
            Y3=(RESULT(1)*Y1-RESULT(2)*Y2)*FACTOR(K1)*FACTOR(K2)
            Y4=(RESULT(1)*Y2+RESULT(2)*Y1)*FACTOR(K1)*FACTOR(K2)
            D(K1,K2)=Y3
            COEFF(K1,K2)=CMPLX(0.,REAL(Y4))
            IF (K1.LT.K2) THEN
              COEFF(K2,K1)=COEFF(K1,K2)
              D(K2,K1)=D(K1,K2)
            END IF
10      CONTINUE

C  THE INVERS OF THE MATRIX D' IS DETERMINED.
        CALL INVERD(LMAX)

C  THE MATRIX (PHI'L(+),PHI'M(+)) IS WRITTEN AS D*AM, WITH
C  AM=1+D**(-1)*COEFF.
        DO 12 K1=1,LMAX+1
          DO 12 K2=1,LMAX+1
            AM(K1,K2)=CMPLX(0.)
            IF (K1.EQ.K2) AM(K1,K2)=CMPLX(1.)
            DO 12 K3=1,LMAX+1
              AM(K1,K2)=AM(K1,K2)+CMPLX(DINV(K1,K3))*COEFF(K3,K2)
12      CONTINUE

C   'AM' IS INVERTED. THE RESULT IS 'SM'
        CALL INVERC(LMAX,1)

C  THE INVERSE OF THE MATRIX A IS CALCULATED
        DO 13 K1=1,LMAX+1
          DO 13 K2=1,LMAX+1
            COEFF(K1,K2)=CMPLX(0.)
            DO 13 K3=1,LMAX+1
              COEFF(K1,K2)=COEFF(K1,K2)+SM(K1,K3)*CMPLX(DINV(K3,K2))
13      CONTINUE

C   THE MATRIX-ELEMENTS (CHI(-),PHI(+)) ARE DETERMINED
        SIGN=-1.
        DO 20 K2=1,2
          L(2)=K2-1
          KL(2,1)=KLFELD(K2,1)
          KL(2,2)=KLFELD(K2,2)
          DO 20 K1=1,LMAX+1
            L(1)=K1-1
            KL(1,1)=KLFELD(K1,1)
            KL(1,2)=KLFELD(K1,2)
              CALL ROMBER(RESULT,L)
              AM(K1,K2)=CMPLX(FACTOR(K1)*FACTOR(K2))*
     1                      CMPLX(RESULT(1),RESULT(2))
20      CONTINUE

C   THE SYMMETRIC S-MATRIX-ELEMENTS ARE CALCULATED
        DO 30 K1=1,2
          KL(1,1)=KLFELD(K1,1)
          KL(1,2)=KLFELD(K1,2)
          DO 30 K2=1,2
            KL(2,1)=KLFELD(K2,1)
            KL(2,2)=KLFELD(K2,2)
            SM(K1,K2)=CMPLX(0.)
            DO 25 K3=1,LMAX+1
              SM(K1,K2)=SM(K1,K2)+COEFF(K1,K3)*
     1                      AM(K3,K2)
25          CONTINUE
            SM(K1,K2)=SM(K1,K2)*CMPLX(KL(1,1),KL(1,2))/
     1                    CMPLX(KL(2,1),KL(2,2))
30      CONTINUE

C   THE ANTISYMMETRIC S-MATRIX ELEMENTS ARE OBTAINED FROM THE SYMMETRIC
C   S-MATRIX-ELEMENTS
        DO 35 K1=1,2
          DO 35 K2=1,2
            KL(2,1)=KLFELD(K2,1)
            KL(2,2)=KLFELD(K2,2)
            AM(K1,K2)=SM(K1,K2)+2.*CMPLX(KL(2,2),-KL(2,1))*
     1                    COEFF(K1,K2)
35      CONTINUE

C   ABSOLUTE VALUE AND PHASE OF THE S-MATRIX ELEMENTS ARE CALCULATED
C   AND WRITTEN ON THE OUTPUT FILES
        FAKT=.9D+2/PI
        DO 40 K1=1,2
          DO 40 K2=1,2
          ETA1=CABS(SM(K1,K2))
          ETA2=CABS(AM(K1,K2))
          DELTA1=FAKT*ATAN2(AIMAG(SM(K1,K2)),REAL(SM(K1,K2)))
          DELTA2=FAKT*ATAN2(AIMAG(AM(K1,K2)),REAL(AM(K1,K2)))
          IF(DELTA1.LT.0.) DELTA1=DELTA1+.18D+3
          IF (DELTA2.LT.0.) DELTA2=DELTA2+.18D+3
          SM(K1,K2)=CMPLX(ETA1,DELTA1)
          AM(K1,K2)=CMPLX(ETA2,DELTA2)
40      CONTINUE
        WRITE(1,1010)K0,SM(1,1)
        WRITE(2,1010)K0,AM(1,1)
        IF (K0QUAD.GT.8.) THEN
          X=DSQRT(K0QUAD-.8D+1)
          WRITE(3,1010)X,SM(2,2)
          WRITE(4,1010)X,AM(2,2)
        END IF
        WRITE(*,1050)I11
100   CONTINUE

      RETURN
800   STOP

700   PRINT*,' GIVE THE LAST INPUT ONCE MORE !'
      GOTO (4,5,6),JUMP

1000  FORMAT(/' S-MATRIX ELEMENTS FOR SYMMETRIC SCATTERING')
1005  FORMAT(/T13,'MOMENTUM K0',T32,'ABSOLUTE VALUE',T52,'PHASE')
1015  FORMAT(/T13,'MOMENTUM K1',T32,'ABSOLUTE VALUE',T52,'PHASE')
1020  FORMAT(/' S-MATRIX ELEMENTS FOR ANTISYMMETRIC SCATTERING')
1030  FORMAT(/' PARAMETERS FOR THE CALCULATION'/' CHANNEL:',I2,' -',I2,'
     1; ACCURACY: ',E9.3,';  UPPER BOUND: ',E9.3,';  INTERVALS: ',I2/'
     2NUMBER OF BASIS STATES: ',I4)
1010  FORMAT(T12,E12.4,T32,E12.4,T48,E12.4)
1050  FORMAT(T3,'THE CALCULATION OF THE ',I3,'. MOMENTUM IS FINISHED!')
1090  FORMAT(' ACCURACY:',T41,E12.4/' UPPER INTEGRATION LIMIT:',T41,
     1     E12.4/' # OF INTERVALS FOR THE INTEGRATION:',T43,I3)
1100  FORMAT(T5,'# OF BASIS STATES (MAXIMUM: ',I3,') ')
2000  FORMAT(6E12.4)

      END


      SUBROUTINE ROMBER(RESULT,L)

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C  THIS ROUTINE EVALUATES THE INTEGRAL OF THE FUNCTION WHICH IS GIVEN  C
C  BY THE SUBROUTINE FUNK. THE INTEGRATION INTERVAL IS DIVIDED IN      C
C  (N=INTERV) EQUAL PARTS. IN EACH SUCH INTERVAL THE NUMBER OF MESH    C
C  POINTS IS DOUBLED AS LONG AS THE ESTIMATED ERROR IS LARGER THAN THE C
C  VALUE EPS.                                                          C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C   IMPORTANT VARIABLES:                                               C
C      KM/KMAX  CONTROL CALCULATION OF ADDITIONAL LAGUERRE POLYNOMIALS C
C               IF THE NUMBER OF MESHPOINTS IS INCREASED. KMAX,LPOINT  C
C               AND NPOINT ARE RELATED BY: LPOINT/NPOINT=2**(KMAX-1)   C
C        RESULT CONTAINS REAL AND IMAGINARY PART OF THE INTEGRAL       C
C        WORK   CONTAINS REAL AND IMAGINARY PART OF THE ESTIMATES OF   C
C               THE INTEGRAL APPEARING IN THE ROMBERG ALGORITHM        C
C        OL/UL  ARE THE LOWER/UPPER LIMIT OF THE ACTUAL SUBINTERVAL    C
C        V1/V2  ARE REAL AND IMAGINARY PART OF THE INTEGRAND           C
C        LPI1   SPECIFY THE ARGUMENT "Z"                               C
C        LPI    MAXIMUM NUMBER OF POINTS PER INTERVAL WHERE THE        C
C               LAGUERRE POLYNOMIALS ARE CALCULATED                    C
C        N      MAXIMUM NUMBER OF POINTS PER INTERVAL USED FOR THE     C
C               FIRST ESTIMATE OF THE INTEGRAL                         C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      IMPLICIT DOUBLE PRECISION(A-H,O-Z)

      PARAMETER (LPOINT=320,ITMAX=20,KMAX=4)

      INTEGER L(2)
      DOUBLE PRECISION WORK(ITMAX,2),RESULT(2)

      COMMON/ROMPAR/EPS,NPOINT,ULIMIT,INTERV
      COMMON/Q1/KM

      RESULT(1)=0.D+0
      RESULT(2)=0.D+0
      IF (ULIMIT.LE.0.) RETURN

      LPI=LPOINT/INTERV
      OL=0.D+0

      DO 45 K0=1,INTERV
        KM=1
        N=NINT(1.*NPOINT/INTERV)
5       WIDTH=ULIMIT/NPOINT
        UL=OL
        OL=WIDTH*N*K0

C  CALCULATION OF THE VALUE OF THE INTEGRAL ON THE MINIMAL NUMBER OF
C  MESH POINTS
        CALL FUNK(UL,L,(K0-1)*LPI,V1,V2)
        WORK(1,1)=5.D-1*V1
        WORK(1,2)=5.D-1*V2
        CALL FUNK(OL,L,K0*LPI,V1,V2)
        WORK(1,1)=WORK(1,1)+5.D-1*V1
        WORK(1,2)=WORK(1,2)+5.D-1*V2
        DO 10 K1=1,N-1
          LPI1=(K0-1)*LPI+K1*2**(KMAX-1)
          CALL FUNK(UL+K1*WIDTH,L,LPI1,V1,V2)
          WORK(1,1)=WORK(1,1)+V1
          WORK(1,2)=WORK(1,2)+V2
10      CONTINUE
        WORK(1,1)=WORK(1,1)*WIDTH
        WORK(1,2)=WORK(1,2)*WIDTH

C  IMPROVEMENT OF THE ACCURACY BY DOUBLING THE NUMBER OF MESH POINTS
        K2=1
20      K2=K2+1
        KH=2**(KMAX-K2)
        KM=KH
        IF (K2.GT.KMAX) KM=-1
        WORK(K2,1)=0.D+0
        WORK(K2,2)=0.D+0
        WIDTH=5.D-1*WIDTH
        W1=WORK(1,1)
        W3=WORK(1,2)
        WORK(1,1)=0.D+0
        WORK(1,2)=0.D+0
        DO 30 K3=1,N
          K31=2*K3-1
          LPI1=(K0-1)*LPI+K31*KM
          CALL FUNK(UL+K31*WIDTH,L,LPI1,V1,V2)
          WORK(1,1)=WORK(1,1)+V1
          WORK(1,2)=WORK(1,2)+V2
30      CONTINUE
        WORK(1,1)=WORK(1,1)*WIDTH+5.D-1*W1
        WORK(1,2)=WORK(1,2)*WIDTH+5.D-1*W3
        N=N*2

C  ESTIMATE OF THE VALUE OF THE INTEGRAL IN THE ROMBERG ALGORITHM
        M=1
        DO 40 K4=2,K2
          M=M*4
          W2=WORK(K4,1)
          WORK(K4,1)=(M*WORK(K4-1,1)-W1)/(M-1)
          W1=W2
          W4=WORK(K4,2)
          WORK(K4,2)=(M*WORK(K4-1,2)-W3)/(M-1)
          W3=W4
40      CONTINUE

        ERROR=DABS(WORK(K2,1)-WORK(K2-1,1))
        ERROR=ERROR+DABS(WORK(K2,2)-WORK(K2-1,2))

      IF (ERROR.LE.EPS) GOTO 50
      IF (K2.LT.ITMAX) GOTO 20
      PRINT*,'WITH THE GIVEN NUMBER OF ITERATIONS ',ITMAX,', IT IS NOT
     1        POSSIBLE TO GET THE DEMANDED ACCURACY! THE ACTUAL VALUE
     2        IS: ',ERROR,' > ',ERR0R

50    RESULT(1)=RESULT(1)+WORK(K2,1)
      RESULT(2)=RESULT(2)+WORK(K2,2)
45    CONTINUE

      RETURN
      END


      SUBROUTINE FUNK(Y1,L,NANS,V1,V2)

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C  HERE THE INTEGRAND IS CALCULATED. THE VALUES OF THE LAGUERRE        C
C  POLYNOMIALS WHICH HAVE ALREADY BEEN CALCULATED ARE USED AND IF      C
C  NEEDED, LAGUERRE POLYNOMIALS AT ADDITIONAL MESHPOINTS ARE           C
C  CALCULATED                                                          C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  IMPORTANT VARIABLES:                                                C
C     F    : AUXILIARY ARRAY FOR CALCULATION OF LAGUERRE POLYNOMIALS   C
C     GAUSS: REAL PART OF EXPONENT IN THE INTEGRAL                     C
C     Y1   : INTEGRATION VARIABLE                                      C
C     Z    : PHASE OF PLANE WAVES                                      C
C  S1/2,Z1/2 AUXILIARY VARIABLES                                       C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      IMPLICIT DOUBLE PRECISION(A-H,O-Z)

      PARAMETER (LLMAX=10,LPOINT=320)

      INTEGER L(2)
      DOUBLE PRECISION F(0:LLMAX),LA(0:LLMAX,0:LPOINT),FACTOR(LLMAX+1),
     1       K0QUAD,KL(2,2)

      COMMON/FUNKPA/K0QUAD,KL,SIGN
      COMMON/LAGUER/LA,FACTOR,PI
      COMMON/Q1/KM

C  LARGER OF THE TWO INDICES OF LAGUERRE POLYNOMIALS IN INTEGRAND
      L0=MAX0(L(1),L(2)+1)

C  HERE THE DAMPING AND OSCILLATING TERMS IN THE INTEGRAND ARE
C  CALCULATED.
      Z=(KL(1,1)+SIGN*KL(2,1))*Y1
      Y=(.2D+1*Y1+KL(1,2)+SIGN*KL(2,2))*Y1
      Z1=DCOS(Z)
      Z2=DSIN(Z)

C  IF THE DAMPING FACTORS ARE LARGE ENOUGH, THE RESULT IS SET TO ZERO
      IF (Y.LT.200.) THEN
        GAUSS=DEXP(-Y)
      ELSE
        V1=0.D+0
        V2=0.D+0
        RETURN
      END IF

C  IF KM LARGER 0 THE PREVIOUSLY CALCULATED LAGERRE POLYNOMIALS ARE USED
      IF (KM.LT.0) THEN
        F(0)=.1D+1
        F(1)=.15D+1-.2D+1*Y1*Y1
        IF (L0.GT.1) THEN
          DO 10 K1=1,L0-1
            F(K1+1)=((.15D+1+.2D+1*(K1-Y1*Y1))*F(K1)-(5.D-1+
     1        K1)*F(K1-1))/(K1+1)
10        CONTINUE
        END IF
      ELSE
        F(L(1))=LA(L(1),NANS)
        F(L(2))=LA(L(2),NANS)
        F(L(2)+1)=LA(L(2)+1,NANS)
      END IF

      IF (SIGN.GT.0.) THEN

C  CALCULATION OF THE (PHI'L(+),PHI'M(+)) MATRIX ELEMENTS
        S1=F(L(1))*F(L(2))*Y1*Y1*GAUSS
        V1=Z1*S1
        V2=Z2*S1
      ELSE

C  CALCULATION OF THE (PHI'L(+),CHI'M(-)) MATRIX ELEMENTS
        Y2=-.2D+1*(.1D+1+L(2)-Y1*Y1)-Y1*KL(2,2)
        S1=Y1*F(L(1))*(F(L(2))*Y2+.2D+1*(L(2)+1)*F(L(2)+1))*GAUSS
        S2=Y1*F(L(1))*F(L(2))*Y1*KL(2,1)*GAUSS
        V1=S1*Z1-S2*Z2
        V2=S1*Z2+S2*Z1
      END IF

      RETURN
      END


      SUBROUTINE POLE

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C   THIS SUBROUTINE YIELDS DET A FOR COMPLEX ENERGIES                  C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  IMPORTANT VARIABLES:                                                C
C     E      ENERGY OF THE MESONS                                      C
C     EK     COMPLEX CHANNEL MOMENTUM                                  C
C     KL     ARRAY FOR THE CHANNEL MOMENTA                             C
C     ADET   DETERMINANT OF THE MATRIX (PHI'L(+),PHI'M(+))             C
C     SIGN   SPECIFIES IN THE ROUTINE FUNK THE INTEGRAND               C
C            (PHI'L(+),PHI'M(+))                                       C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      IMPLICIT DOUBLE PRECISION(A-H,O-Z)

      PARAMETER (LLMAX=10,LPOINT=320)

      INTEGER L(2)
      DOUBLE PRECISION K0QUAD,KL(2,2),RESULT(2)
      COMPLEX A(LLMAX,LLMAX),AH(LLMAX,LLMAX),AINV(LLMAX,LLMAX),E,EK,
     1   ADET,IC

      COMMON/FIELDC/A,AH,AINV,ADET
      COMMON/FUNKPA/K0QUAD,KL,SIGN

      IC=CMPLX(0.,-1.)

1     JUMP=1
      WRITE(*,1010)LLMAX
      READ(*,*,ERR=700)LMAX
      LMAX=MIN0(LMAX,LLMAX)
      LMAX=LMAX-1

      WRITE(*,1100)
2     JUMP=2
      PRINT*,'   '
      PRINT*,' REAL PART OF THE ENERGY ?                  '
      READ(*,*,ERR=700)E1
3     JUMP=3
      PRINT*,' IMAGINARY PART OF THE ENERGY (IM E >= 0) ? '
      READ(*,*,ERR=700)E2
      E=CMPLX(E1,E2)

      K0QUAD=DBLE(E)
      SIGN=1.

C  DETERMINATION OF THE MATRIX ELEMENTS (PHI'L(+),PHI'M(+))
      DO 30 K1=1,LMAX+1
        L(1)=K1-1
        EK=CSQRT(E-8.*(K1-1))

C  THE IMAGINARY PART OF THE CHANNEL MOMENTA IS CHOSEN LARGER ZERO
        IF (AIMAG(EK).LT.0.) EK=CONJG(EK)
        KL(1,1)=DBLE(EK)
        KL(1,2)=DBLE(IC*EK)
        DO 30 K2=1,LMAX+1
          L(2)=K2-1
          EK=CSQRT(E-8.*(K2-1))
          IF (AIMAG(EK).LT.0.) EK=CONJG(EK)
          KL(2,1)=DBLE(EK)
          KL(2,2)=DBLE(CMPLX(0.,-1.)*EK)
          CALL ROMBER(RESULT,L)
          A(K1,K2)=CMPLX(RESULT(2),-RESULT(1))*CMPLX(KL(1,1)+KL(2,1),
     1             KL(1,2)+KL(2,2))
30    CONTINUE

C  CALCULATION OF THE DETERMINANT
      CALL INVERC(LMAX,2)

      PRINT*,' VALUE OF THE DETERMINANT = ',ADET
      PRINT*,' CONTINUE WITH OTHER ENERGY? YES=1 '
4     JUMP=4
      READ(*,*,ERR=700)NANS
      IF (NANS.EQ.1) GOTO 2

      RETURN

800   STOP

700   PRINT*,' GIVE THE LAST INPUT ONCE MORE !'
      GOTO (1,2,3,4),JUMP

1100  FORMAT(T5,'YOU HAVE TO PROVIDE NOW A VALUE OF THE ENERGY IN THE CO
     1MPLEX PLANE. THE'/T5,'ELASTIC THRESHOLD IS AT E=(0.,0.) THE FIRST
     2INELASTIC ONE AT E=(8.,0.)')
1010  FORMAT(T5,'# OF BASIS STATES (MAXIMUM: ',I3,') ')
      END


      SUBROUTINE INVERC(N,NDET)

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C  THE INVERSE OF THE COMPLEX MATRIX A' IS CALCULATED USING A GAUSS    C
C  ALGORITHM. AFTER THE INVERSION, THE MATRIX A CONTAINS THE LOWER AND C
C  UPPER TRIANGULAR MATRICES APPEARING IN THE GAUSS ALGORITHM. TO      C
C  AVOID DIVISION BY ZERO WE PERFORM A PERMUTATION OF THE ROWS OF THE  C
C  MATRIX. THE INVERSE MATRIX IS STORED IN AINV                        C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C   IMPORTANT VARIABLES:                                               C
C       NPIVOT: STORES THE PERMUTATION                                 C
C       J,X,NW  AUXILIARY VARIABLES USED FOR INTERCHANGE OF ROWS       C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      PARAMETER (LLMAX=10)

      COMPLEX FAKT,A(LLMAX,LLMAX),AH(LLMAX,LLMAX),AINV(LLMAX,LLMAX),ADET
      INTEGER NPIVOT(LLMAX)

      COMMON/FIELDC/A,AINV,AH,ADET

      ADET=1.
      INTER=0
      DO 5 K1=1,N+1
        NPIVOT(K1)=K1
        DO 5 K2=1,N+1
          AINV(K1,K2)=CMPLX(0.)
5      CONTINUE

C   HERE THE MATRIX IS TRANSFORMED INTO THE FACTORISED FORM P*A=L*U WITH
C   A PERMUTATION MATRIX P AND LOWER AND UPPER TRIANGULER MATRICES L,U
      DO 30 K1=1,N
        NW=K1
        X=CABS(A(K1,K1))

C  THE LARGEST VALUE IN A COLUMN IS DETERMINED
        DO 12 K4=K1+1,N+1
          IF (CABS(A(K4,K1)).GT.X) THEN
            NW=K4
            X=CABS(A(K4,K1))
          END IF
12      CONTINUE
        IF (NW.NE.K1) THEN
          J=NPIVOT(K1)
          NPIVOT(K1)=NPIVOT(NW)
          NPIVOT(NW)=J
          INTER=INTER+1

C  IF THE LARGEST VALUE IN A COLUMN IS NOT ON THE DIAGONAL, THEN THE
C  ROWS ARE INTERCHANGED
          DO 15 K4=1,N+1
            FAKT=A(K1,K4)
            A(K1,K4)=A(NW,K4)
            A(NW,K4)=FAKT
15        CONTINUE
        END IF

C  SUBTRACTION OF ROWS. THE FACTORS APPEARING IN LINEAR COMBINATION OF
C  TWO ROWS ARE STORED IN THE LOWER TRIANGLE
        DO 30 K3=K1+1,N+1
          FAKT=A(K3,K1)/A(K1,K1)
          A(K3,K1)=FAKT
          DO 30 K2=K1+1,N+1
            A(K3,K2)=A(K3,K2)-A(K1,K2)*FAKT
30    CONTINUE

C  CALCULATION OF THE DETERMINANT, IF THE ROUTINE HAS BEEN CALLED BY
C  THE SUBROUTINE POLE
      IF (NDET.NE.2) GOTO 39
      DO 35 K1=1,N+1
        ADET=ADET*A(K1,K1)
35    CONTINUE
      ADET=ADET*(-1.)**INTER
      GOTO 100

C  INVERSION OF MATRIX IS PERFORMED IN TWO STEPS
39    DO 50 K1=1,N+1

C  PERMUTATION OF ROWS OF THE UNIT MATRIX
       AINV(K1,NPIVOT(K1))=CMPLX(1.)
       DO 50 K2=1,N+1
        AH(K1,K2)=AINV(K1,K2)
        IF (K1.GT.1) THEN
         DO 40 K3=1,K1-1
          AH(K1,K2)=AH(K1,K2)-A(K1,K3)*AH(K3,K2)
40       CONTINUE
        END IF
50    CONTINUE

C  INVERS OF THE UPPER TRIANGULAR MATRIX IS DETERMINED BY ELIMINATION
C  STARTING AT LAST ROW
      DO 70 K2=1,N+1
        DO 70 K1=1,N+1
          LH=N+2-K1
          AINV(LH,K2)=AH(LH,K2)
          IF (LH.LE.N) THEN
            DO 60 K3=LH+1,N+1
            AINV(LH,K2)=AINV(LH,K2)-A(LH,K3)*AINV(K3,K2)
60          CONTINUE
          END IF
          AINV(LH,K2)=AINV(LH,K2)/A(LH,LH)
70    CONTINUE

100   RETURN
      END
