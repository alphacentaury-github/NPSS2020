      PROGRAM MAIN
CCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCC       DCP2 -- NEW VERSION OF DCP1               CCCCCCCCCCCCCCCCC
CCCCCC                 (WINTER OF 2012 AT RIKEN)       CCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC 
CCCCCC
      PARAMETER(NHS=9,NPS=9,LXA=150,LXB=150,LPH=10,LMM=4,LTL=9)
      PARAMETER(NXA=420,NXB=140,NIN=300,NOU=300,N1X=140)
      PARAMETER(KFM=10,KAA=40,KBB=30,KCC=80,KGG=125,KJL=600,KTEN=5000)
      PARAMETER(LMJ=10,LRP=11,L1X=10,L2X=60,LM1=5,LM2=30,LAB=2000)
CCCCCC	
      COMMON/CNST  /FACLOG(500),PI,HBAR,AMAS,WNUNIT,FINE
      COMMON/CNTRL/ KTRLD(9),KTLOUT(24),NERUN,KRTYPE
      COMMON/BSX/   URSAVE(500),ENEPT,VNEPT,VSOR,DFNR,DFNSO,RZR,RZSO,
     1              RZC,XMES2,Q,FTR,NODER,LBTR,JBTRTW,NXRAWF,KTRL4,
     2              KOPOT,LBTRY,JBTWY
      COMMON/UNCPSA/KTRL3,ITBEMX,ACURCY,AMUPMU,
     1              KTRL2,KTRL8,KEX2,KEX4,KEX40,KEX41,KEX42,KEX43,
     2              TMAS,PMAS,ZZT,ZZP,RMAS,ZZ,XMES1,PERCNT,VSX,
     3              ISTW,NXRA,NXRM,NXRMP1,NXRMP2,NXRMP3,NXRMP4,NXRMP5,
     4              NODE,KGES,EGESRD,EGES,EGEST,DELGES,FKAPPA,FKAPIN,
     5              URRMIN,URRMEX,RGDLIN(3),RGDLEX(3),
     6              XMEM(514),VCENTR(514),VSPIN(514),VCOULM(514),
     7              PFORM1(2),PFORM2(2),PFORM3(2),GESMEM(20),NODMEM(10)
      COMMON/DWCC/  LDWMIR(4),LDWMXR(4),WN(4),LDWSTR(4),CE(4),CFUNIR(4),
     1              ECM(4),XMESR(4),NXMXR(4),NXMIR(4),NOEXP,MXSTEP,
     2              TMASA,TMASB,TMASX,TMASY,PMASA,PMASB,PMASX,PMASY,
     3              TZA,TZB,TZX,TZY,
     4              PZA,PZB,PZX,PZY,XBARD(4),XBARID(4),WNXD(20),EXPD(20)
      COMMON/OPTL/  THMIN,THMAX,THIND
      COMMON/POTCC/ VA,VB,VX,VY,WA,WB,WX,WY ,WAS,WBS,WXS,WYS ,ARA,ARB,
     1              ARX,ARY,AIA,AIB,AIX,AIY,AISA,AISB,AISX,AISY,RZRA,
     2              RZRB,RZRX,RZRY,RZIA,RZIB,RZIX,RZIY,RZISA,RZISB,
     3              RZISX,RZISY,RZCA,RZCB,RZCX,RZCY,IDA,IDB,IDX,IDY,
     4              VRIT(900),NXMN,NXMX
      COMPLEX       VRIT
      COMMON/ANGLC/ NTHEB,NOTHE,THEB,DTHEB
      COMMON/FFCC/  VRANG(6),VSTR(12,6),VV(NIN,24),XMESH,XMESC,
     1              XMESHD,XMESHE,RHED(NIN),
     2              NBCMI,NBCMX,NONB,NBSTEP,LASTEP,LBSTEP,MAMAX,MXMAX,
     3              MP1MAX,NOLA,NOLB,INTRAN,LMI,LMX,KCETN(2),
     4              NCMAX,NCMIN,LDMAX,JATRTY,NONA,NONAH,NONAR,NASTEP,
     5              NHDMX,NHEMX,NGAUSR,NBSTPD,NBSTPE,N1STEP,JATW,ISATW
      COMMON/CDENS/ RHOD(NXA,NIN,LMM),USAVEX(4*NXA),SPEC(4),
     1              DENSTY(NXA),LAMMXD(3),LBXD(4),NOSTX,NDMY
      COMMON/SPSTAT/EET,SPECTA(LPH),ESP(LPH),ESH(LPH),NSP(LPH),LSP(LPH),
     1              JTWP(LPH),NSH(LPH),LSH(LPH),JTWH(LPH),IPAIR,NOSP,
     2              NOSH,NPST(LPH),NHST(LPH),NPAIRD,L1R(8),ISR(8),
     3              ITR(8),NLSMAX,JT,KPARIT,IST,NOLTR,N1,LTR(8),
     4              ITP(LPH),ITH(LPH),ITZP(LPH),ITZH(LPH)
      COMMON/RELKIN/RMASA,RMASB,TREL1,TREL2,OMEGR(20)
      COMMON/CNORE/ FACNR,LRP1MX
      COMMON/CBST/  USAVP(NPS*NXA),USAVH(NHS*NXA),CY(LXA)
      COMPLEX       CY 
      COMMON/CCKF/  L1KFD(KFM),ISKFD(KFM),KKFD(KFM),LTKFD(KFM),KFMAX,
     1              ITKFD(KFM),NLSKFD(KFM),NLTKFD(KFM),LTMIM,LTMAX
      COMMON/OPTO/  FOLD(NXA)
      COMMON/CTFAC/ TFAC(3,10,10),MJMAX                                 
      COMMON/CSOUR/ SOURCE(NXA,LPH,LMJ)   
      COMPLEX       SOURCE
      COMMON/DISW / DISWB(LXB*NXB),DISWA(LXA*NXA)
      COMPLEX       DISWA,DISWB
      COMMON        U(5),P(130),SMATAB(180),CL(130),SIG(130),TETA(180),
     1              SGRUTH(180),XRATIO(130),SMATX(130),NID(4),
     2              DISWT(900),DUMMY1(6578)                  
      COMPLEX       CL,U,DISWT,SMATX 
      COMMON        NODR(10),LBR(10),JBTWR(10),EGR(10)
      COMMON        ESC(90),NSC(90),LSC(90),JTWC(90),ITC(90),ITZC(90),
     1              NCST(90)
      COMPLEX       URI1
      DIMENSION     CROSXYZ(20,4),DPOLXYZ(20,4)                         
CCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCC
CCCCCC      IF KTRLD(1) = 0; Normal composite particle case with EFR
CCCCCC                  = 1; Recoil effects in the plane wave approx.
CCCCCC                  = 2; No-recoil calculation is made
CCCCCC                  = 3; Nucleon-nucleon case (Not necessarily input)
CCCCCC                         N1MAX SHOULD BE EQUAL TO NBCMAX
CCCCCC                         LAMMXD(2) SHOULD BE ZERO
CCCCCC      IF KTRLD(2) = 1; PWIA CALCULATION IS MADE
CCCCCC      IF KTRLD(3) = 1; DOUBLE FOLDING POTENTIAL IS USED
CCCCCC                  = 2; SINGLE FOLDING POTENTIAL IS USED
CCCCCC      IF KTRLD(4) = 1; TENSOR IS NEGLECTED
CCCCCC                       TENSOR FORCE IS SET EQUAL TO ZERO IN EFFINT
CCCCCC      IF KTRLD(5) = 1; NEGLECT EXCHANGE EFFECTS
CCCCCC      IF KTRLD(6) = 1; SPIN TRANSFER COEFFICIENTS ARE CALCULATED.
CCCCCC      IF KTRLD(9) = 1; RELATIVISTIC KINEMATICS IS USED
CCCCCC
CCCCCC      KRTYPE = 21,     (D,2P) REACTION
CCCCCC             = 31,     (HE,T) REACTION
CCCCCC
CCCCCC      KTLOUT(N) IS USED AS FOLLOWS;
CCCCCC      1      OUTPUT OF BOUND STATE WAVE FUNCTIONS (DETAILS)
CCCCCC      2      OUTPUT OF DW 
CCCCCC      3      OUTPUT OF FORM FACTORS (DETAILS)
CCCCCC      4      OUTPUT IN GFAC   
CCCCCC      5      OUTPUT OF ELASTIC SCATT. CALCULATIONS IN OPT
CCCCCC      6    
CCCCCC      7      OUTPUT IN FLGLCH (COULOMB WAVE FUNCTIONS)
CCCCCC      8      OUTPUT OF PH FORM FACTORS 
CCCCCC      9   
CCCCCC      10 
CCCCCC      11
CCCCCC      12     OUTPUT IN TENSOR. USED AS STEPS
CCCCCC      13     OUTPUT OF DETAILED FF(GGRI). USED AS STEPS 
CCCCCC
CCCCCC      IF KTRL1 = 1; YUKAWA,  
CCCCCC               = 2; GAUSSIAN     
CCCCCC      IF KTRL2 = 0; B.E. IS SEARCHED, = 1; VSX IS SEARCHED
CCCCCC      IF KTRL3 = 1; R=RZ*(A1**(1/3)+A2**(1/3))
CCCCCC      IF KTRL4 = 0; WAVE FUNCTION ITSELF IS STORED IN URSAVE.
CCCCCC               = 1; WAVE FT TIMES POTENTIAL
CCCCCC               = 2; WAVE FT TIMES R**(-L) 
CCCCCC               = 3; WAVE FT TIMES POTENTIAL TIMES R**(-L)
CCCCCC
CCCCCC      KEX2=NXCPL2 IF NON-ZERO
CCCCCC      KEX4+NXCPL2=NXRA IF KEX4 IS NON-ZERO
CCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCC
      open(unit=7, file='dcp.dat',status='old')
      open(unit=8, file='dcp.out',status='unknown')
      open(unit=12,file='dcptda.dat',status='old')
CCCCCC
CCCCCC     SECTION 1. DEFINE CONSTANTS 
CCCCCC
      FACLOG(1)=0.0
      FACLOG(2)=0.0
      FN=1.
      DO 5 N=3,500
      FN=FN+1.
    5 FACLOG(N)=FACLOG(N-1)+LOG(FN)
      PI  =4.0*ATAN(1.) 
      HBAR=197.327053
      AMAS=931.49432
      WNUNIT=SQRT(2.*AMAS)/HBAR
      FINE=1.0/137.0359896
CCCCCC
CCCCCC     SECTION 2. READ INITIAL DATA      CCCCCCCCC
CCCCCC
   10 FORMAT(24I3)
   11 FORMAT(14I5)
   12 FORMAT(10F7.3)
   13 FORMAT(7F10.4)
   14 FORMAT(I7,6F7.2)
   15 FORMAT(F10.5,5I5)
   16 FORMAT(I3,3(3I3,2F7.3))
CCCCCC
      READ(7,10) (KTRLD(N),N=1,9)
      READ(7,10) (KTLOUT(N),N=1,24)
      READ(7,10) JATW,ISATW
      READ(7,12) WREXP            ! DUMMY 
      READ(7,12) TMI,Z1I,PMI,Z2I,ELI
      READ(7,12) VA,WA,WAS,ARA,AIA,AISA,RZRA,RZIA,RZISA,RZCA
      READ(7,12) VX,ARX,RZRX      ! TEMP
      READ(7,12) VB,WB,WBS,ARB,AIB,AISB,RZRB,RZIB,RZISB,RZCB
      READ(7,12) VY,ARY,RZRY      ! TEMP
      READ(7,12) TMF,Z1F,PMF,Z2F
      READ(7,10) (LDWMIR(I),LDWMXR(I),LDWSTR(I),I=1,2)
      READ(7,11) (NXMIR(I),NXMXR(I),I=1,4),NONE,NHDMX,NHEMX,KTRLHE
      READ(7,12) (XMESR(I),I=1,4),XNONE,XMESHD,XMESHE
      READ(7,11) NTHEB,MXMAX,MAMAX,LAMMXD(1),LAMMXD(2),LAMMXD(3)
      READ(7,11) NBCMI,NBCMX,NBSTPD,NBSTPE,NGAUSR,NONAR,NASTEP,N1STEP
      READ(7,12) THEB,DTHEB,THMIN,THMAX,THIND  
      READ(7,10) JT,KPARIT,IST,NLSMAX,NOLTR,N1,(LTR(N),N=1,NOLTR),N2,
     1                (ITR(I),ISR(I),L1R(I),I=1,NLSMAX)
      READ(7,14) LRP1MX,FACNR                                           
      READ(7,10) (KCETN(N),N=1,2)
      READ(7,10) NEFMAX,MJMAX                                           
      READ(7,12) (OMEGR(NE),NE=1,NEFMAX)                                
      READ(7,11) NSTATE,KREAD	    ! DUMMY
      READ(7,14) KTRL1,(VRANG(N),N=1,6)
      DO 20 K=1,12
      READ(7,13) (VSTR(K,N),N=1,6)
   20 CONTINUE
      READ(7,12) TMAS,PMAS,ZZT,ZZP
      READ(7,12) VSX,VSOR,DFNR,DFNSO,RZR,RZSO,RZC
      READ(7,10) NOSP,NOSH                                              
      READ(7,15) (ESP(N),NSP(N),LSP(N),JTWP(N),ITP(N),ITZP(N),N=1,NOSP) 
      READ(7,15) (ESH(N),NSH(N),LSH(N),JTWH(N),ITH(N),ITZH(N),N=1,NOSH) 
CCCCCC
CCCCCCCCCCCCC    END OF INPUT DATA             CCCCCCCCCCCCCCCCCCCC     
CCCCCC
c      IF (KTRLD(1).EQ.2) LRP1MX=1
c	IPMI=PMI+0.01
c	IF (IPMI.EQ.1) KTRLD(1)=3
c	IF (KTRLD(6).EQ.1) KTRLD(1)=1
	IF (KTRLD(1).EQ.3) LAMMXD(2)=0
      IF (KTRLD(4).EQ.1) KCETN(2)=1
CCCCCC
CCCCCC     SECTION 3. PRINT OUT OF INITIAL INPUT 
CCCCCC
      EET=OMEGR(1)
	WRITE(8,800) 
	WRITE(8,801) 
      WRITE(8,802) TMI,Z1I,PMI,Z2I
      WRITE(8,803) TMF,Z1F,PMF,Z2F
      WRITE(8,804) ELI,JATW,ISATW,JT,KPARIT,EET,IST,(LTR(N),N=1,NOLTR)
  800 FORMAT(15X,'DWIA DIRECT-EXCHANGE CROSS SECTION CALCULATION FOR THE 
     1 REACTION')
  801 FORMAT(//1H ,33X,'T',7X,'TZ',6X,'P',7X,'PZ')
  802 FORMAT(1H ,19X,'A-CHANNEL',7F8.3)
  803 FORMAT(1H ,19X,'B-CHANNEL',7F8.3)
  804 FORMAT(//20X,'E=',F5.1,' MEV'//20X,
     1               'INITIAL STATE JATW,ISATW=',2I2//20X,
     2               'FINAL STATE J,K,E=',2I2,F7.1,' MEV'//20X,
     3               'SPIN TRANSFER IST=',I2//20X,
     4               'TOTAL L TRANSFER =',8I2//20X)
CCCCCC
      XMES2=XMESR(3)
      WRITE(8,805) (KTRLD(N),N=1,9),(KTLOUT(N),N=1,20)
  805 FORMAT(//1H ,'KTRLD(1-9)  =',9I3,/' KTLOUT(1-20)=',20I3)  
      IF (KTRLD(1).EQ.1) WRITE(8,818)
      IF (KTRLD(1).EQ.2) WRITE(8,811)
      IF (KTRLD(1).EQ.3) WRITE(8,812)
      IF (KTRLD(2).EQ.1) WRITE(8,813)
      IF (KTRLD(3).EQ.1) WRITE(8,814)
      IF (KTRLD(3).EQ.2) WRITE(8,815)
      IF (KTRLD(4).EQ.1) WRITE(8,816)
      IF (KTRLD(5).EQ.1) WRITE(8,817)
	IF (KTRLD(6).EQ.1) WRITE(8,820)
      IF (KTRLD(9).EQ.1) WRITE(8,819)
  811	FORMAT(/1H ,'** NO-RECOIL CALCULATION IS MADE')
  812	FORMAT(/1H ,'** NUCLEON-NUCLEUS CASE')
  813	FORMAT(/1H ,'** PWIA CALCULATION IS MADE')
  814	FORMAT(/1H ,'** DOUBLE FOLDING POTENTIAL IS USED')
  815	FORMAT(/1H ,'** SINGLE FOLDING POTENTIAL IS USED')
  816	FORMAT(/1H ,'** TENSOR IS NEGLECTED')
  817	FORMAT(/1H ,'** EXCHANGE EFFECT IS NEGLECTED')
  818	FORMAT(/1H ,'** RECOIL EFFECT IS INCLUDED IN PW APPROXIMATION')
  819	FORMAT(/1H ,'** RELATIVISTIC KINEMATICS IS USED')
  820	FORMAT(/1H ,'** SPIN TRANSFER COEFFICIENTS ARE CALCULATED')
CCCCCC
      WRITE(8,821) KTRL1, (VRANG(N),N=1,6)
  821 FORMAT(//1H ,'NN INTERACTION POTENTIAL'/1X,'KTRL1,VRAN=',
     1       I4,6(F7.2,3X))
      DO 35 K=1,12
      WRITE(8,822) K,(VSTR(K,N),N=1,6)
  822 FORMAT(1H ,'K=',I3,2X,'VSTR=',6F10.2)
   35 CONTINUE
CCCCCC
CCCCCC     SECTION 4. CALCULATES PH STATES IN THE TARGET SYSTEM     
CCCCCC 
      TMASY=TMAS
      PMASY=PMAS
      TZY  =ZZT
      PZY  =ZZP
      IDA=0
      IDB=0
      IDX=0
      IDY=0
      NXMIR(1)=1
      DO 25 NH=1,NHEMX
        XNH=NH
        IF (KTRLHE.EQ.0) RHE1=XMESHE*XNH
        IF (KTRLHE.EQ.1) RHE1=XMESHE*(XNH**3)
        RHED(NH)=RHE1
   25 CONTINUE
      NONAHT=RHED(NHEMX)/XMESR(1)
      NONAHR=(NONAR-1)/2
      IF (NONAHT.LT.NONAHR) NONAHR=NONAHT
      NONAST=NONAHR/NASTEP
      NONAH =NONAST*NASTEP
      NONA  =NONAH*2+1
CCCCCC
CCCCCC   EXCHANGE OF PARTICEL AND HOLE FOR NUCLEON-NUCLEUS CASE
CCCCCC
      ISTW=1
      KOPOT=0
      ITBEMX=15
      KTRL2=1
      KTRL4=0
      KTRL8=0
      KEX2=200
      KEX4=100
      ACURCY=0.001
      AMUPMU=0.0
      XMES2=0.1
      N2MAX=NXMXR(4)
      NOST=NOSP
      DO 130 N=1,NOST
      NODER=NSP(N)
      LBTR=LSP(N)
      JBTRTW=JTWP(N)
      EGES=ESP(N)
      ZZP=1.0
      IF (ITZP(N).EQ.1) ZZP=0.0
      CALL BSAXON
      N1M=(N-1)*N2MAX
      DO 125 N1=1,N2MAX
      N1M=N1M+1
      USAVP(N1M)=URSAVE(N1)
  125 CONTINUE
  130 CONTINUE
      NOST=NOSH
      DO 140 N=1,NOST
      NODER=NSH(N)
      LBTR=LSH(N)
      JBTRTW=JTWH(N)
      EGES=ESH(N)
      ZZP=1.0
      IF (ITZH(N).EQ.1) ZZP=0.0
      CALL BSAXON
      N1M=(N-1)*N2MAX
      DO 135 N1=1,N2MAX
      N1M=N1M+1
      USAVH(N1M)=URSAVE(N1)
  135 CONTINUE
  140 CONTINUE
  150 WRITE(8,831) NOSP,NOSH
      WRITE(8,834)
      DO 152 N=1,NOSP
      WRITE(8,832) N,NSP(N),LSP(N),JTWP(N),ITP(N),ITZP(N),ESP(N)
  152 CONTINUE
      DO 154 N=1,NOSH
      WRITE(8,833) N,NSH(N),LSH(N),JTWH(N),ITH(N),ITZH(N),ESH(N)
  154 CONTINUE
      WRITE(8,835)
  831 FORMAT(//1H ,'SINGLE P AND H STATES IN THE TARGET SYSTEM'/,
     1  1X, 'NOSP,NOSH=',2I3/1H )                                  
  832 FORMAT(10X,'PARTICLE',6I5,F9.3)
  833 FORMAT(10X,'HOLE    ',6I5,F9.3)
  834 FORMAT(25X,'  N    L   2J   2S    T     BE')
  835 FORMAT(10X,'** CALCULATED PH WAVEFUNCTION: KTLOUT(1)')
CCCCCC
CCCCCC     SECTION 5. FIND PH PAIRS 
CCCCCC
      NPH1=0
      JTTW=JT*2
      LMAX=JT+1
      LMIN=IABS(JT-1)
      DO 170 NH=1,NOSH
      LH1=LSH(NH)
      JTWH1=JTWH(NH)
      DO 160 NP=1,NOSP
      LP1=LSP(NP)
      JTWP1=JTWP(NP)
      IF(MOD(LH1+LP1+KPARIT,2).NE.0) GO TO 160
      IF(IABS(JTWH1-JTWP1).GT.JTTW)  GO TO 160
      IF(JTWH1+JTWP1.LT.JTTW)        GO TO 160
      IF(IABS(LH1-LP1).GT.LMAX)      GO TO 160
      IF(LH1+LP1.LT.LMIN)            GO TO 160
      IF(ITZH(NH).EQ.-1)             GO TO 160
      NPH1=NPH1+1
      NPST(NPH1)=NP
      NHST(NPH1)=NH
      SPECTA(NPH1)=1.0
  160 CONTINUE
      NPAIRD=NPH1
      NPHMX=NPAIRD
      NPAIR=NPAIRD
  170 CONTINUE
      DO 180 NL1=1,NLSMAX
      NPAIR=NPAIRD
      WRITE(8,838) NPAIR
      WRITE(8,836) (NPST(I),NHST(I),I=1,NPAIR)
      NPAIR=NPAIRD
  180 CONTINUE
      DO 190 NL1=1,NLSMAX
      NPAIR=NPAIRD
      WRITE(8,837) ITR(NL1),ISR(NL1),L1R(NL1),(NPST(I),
     1                 NHST(I),SPECTA(I),I=1,NPAIR)
  190 CONTINUE
  836 FORMAT(1H ,'NP,NH=',10(2I3,1X)/(7X,10(2I3,1X)))
  837 FORMAT(/1H ,'PAIR STATES (IT IS L1)=(',3I2,
     1      ')',/,13X,'(NP,NH,SF)=',5(2I2,F5.1,2X)/
     2      (1H ,23X,5(2I2,F5.1,2X)))
  838 FORMAT(/,1H ,'NPAIR=',I3)
CCCCCC
CCCCCC        KINEMATICAL QUANTITIES
CCCCCC
      WRITE(12,1200) JT,KPARIT,MJMAX,NOSH,NOSP,NPHMX,NXMXR(4),ELI       
 1200 FORMAT(//, 1H , 'KINEMATICAL QUNATITIES',/
     1 7I3,E12.4)                                                 
      WRITE(12,1201) (NSH(N),LSH(N),JTWH(N),ITH(N),ITZH(N),N=1,NOSH)    
 1201 FORMAT(20I3)                                                      
      WRITE(12,1202) (       LSP(N),JTWP(N),ITP(N),ITZP(N),N=1,NOSP)    
 1202 FORMAT(16I3)                                                      
      WRITE(12,1203) (NHST(I),NPST(I),I=1,NPHMX)                        
 1203 FORMAT(20I3)                                                      
      WRITE(12,1204) (ESH(N),N=1,NOSH)                                  
 1204 FORMAT(8F10.4)                                                    
CCCCCC
CCCCCC     SECTION 6. CHECK FIELD LENGTHS OF VARIABLES
CCCCCC
      CALL DCHECK1
CCCCCC
CCCCCC     SECTION 7. CALCULATE SINGLE P WAVE FUNCTIONS AND DENSITY
CCCCCC                       OF PROJECTILE NUCLEUS
CCCCCC
      KMAS=PMI+0.001
      IF (KTRLD(1).EQ.3.OR.KMAS.EQ.1) GO TO 300
CCCCCC
CCCCCC   NUCLEON-NUCLEUS SCATTERING
CCCCCC        N1MAX SHOULD BE EQUAL TO NBCMX
CCCCCC
      WRITE(8,848)
      WRITE(8,849) KMAS,NXMIR(3),NXMXR(3),XMESR(3)
  848 FORMAT(//,1H ,'PROJECTILE DENSITY FOR FOLDING POT. CALCULATION')
  849 FORMAT(1H ,'KMAS, NXMI, NXMX ,XMES3     =',3I4, F10.3)
CCCCCC
      N2MAX=NXMXR(3)
      XMES2=XMESR(3)
      KEX2=NXMXR(3)
      NOSTX=1
      LBXD(1)=0
      SPEC(1)=1.0
      DO 205 N2=1,N2MAX
  205 DENSTY(N2)=0.0
CCCCCC
      IF (KMAS.LE.3) THEN
      IF (KMAS.EQ.2) THEN 
CCCCCC
CCCCCC      *****      KMAS=2 CASE      ******
CCCCCC
      KRTYPE=21
      D1=0.0
      A1=2.0/4.3
      B1=A1*7.0
      G1=A1
      FWID=B1
      D1=0.0
      X1=0.0
	EGR(1) = 2.224
      FN1=SQRT(2.0*A1*B1*(A1+B1))/(B1-A1)
      FK2=WNUNIT*SQRT(0.5*EGR(1))
      SIND1=SIN(D1)
      FPI=4.*PI
      SQFPI=SQRT(FPI)
      R2=0.0
      FN1=SQRT(2.0*A1*B1*(A1+B1))/(B1-A1)
      DO 210 N2=1,N2MAX
      R2=R2+XMES2
      R22=R2*R2
      W1=(EXP(-A1*R2)-EXP(-B1*R2))*FN1/R2
      FKR2=FK2*R2
      FKR22=FK2*R22
      W2=(SIN(FKR22+D1)-SIND1*EXP(-X1*R22))*SQFPI/FKR2
      DENSTY(N2)=W1*W2
      N2P=N2+N2MAX
      USAVEX(N2 )=W1
      USAVEX(N2P)=W2
      FOLD(N2)   =W1*W1*2.
  210 CONTINUE
      ELSE
CCCCCC
CCCCC      ******      KMAS=3 CASE      ********
CCCCCC
      G1=0.675
      G1SQ=G1*G1
      SQPAI=SQRT(PI)
      C1=2.0*SQRT(G1SQ*G1/SQPAI)
      R2=0.0
      DO 245 N2=1,KEX2
      R2=R2+XMES2
      R2SQ=R2*R2
      T1=-R2SQ*G1SQ*0.5
      URSAVE(N2)=EXP(T1)*C1
      FOLD(N2)=((URSAVE(N2))**2)*FLBTW1*SPEC(1)*3.0
CCCCCC    FOLD IS THE DENSITY USED FOR FOLDING OF OPT. POTENTIAL
CCCCCC    MAGNETIC FORM FACTOR   EXP(-R2SR/0.42) 
      FWID=0.42
      URSAVE(N2)=(EXP(-R2SQ/(2*FWID)))
      AP2=(0.675D0)**2
      AP3=(0.675D0)**3
      BP2=(0.366D0)**2
      BP2=0.0
      CP2=(0.836D0)**2
      CP7=(0.836D0)**7
      PI=3.14159
      PI32=SQRT(PI**3)
      PI4=4.D0*PI
      FOLD(N2)=PI4*(3.D0/(8.D0*PI32))*((EXP(-R2SQ/(4.D0*AP2)))/(AP3)-
     1           ((BP2*(6.D0*CP2-R2SQ))/(4.D0*CP7))*
     2           EXP(-R2SQ/(4.D0*CP2)))
      AP2=(0.654D0)**2
      AP3=(0.654D0)**3
      BP2=(0.456D0)**2
      BP2=0.0
      CP2=(0.821D0)**2
      CP7=(0.821D0)**7
      PI=3.14159
      PI32=SQRT(PI**3)
      PI4=4.D0*PI
      DENSTY(N2)=PI4*(1.D0/(8.D0*PI32))*((EXP(-R2SQ/(4.D0*AP2)))/(AP3)-
     1           ((BP2*(6.D0*CP2-R2SQ))/(4.D0*CP7))*
     2           EXP(-R2SQ/(4.D0*CP2)))
      USAVEX(N2)=SQRT(DENSTY(N2))
  245 CONTINUE
      ENDIF
      ELSE
CCCCCC
CCCCCC     KMAS.GE.4 CASE
CCCCCC
      READ(7,12) TMAS,PMAS,ZZT,ZZP
      READ(7,16) NOSTX,
     1               (NODR(N),LBR(N),JBTWR(N),EGR(N),SPEC(N),N=1,NOSTX)
      READ(7,12) VSX,VSOR,DFNR,DFNS,RZR,RZSO,RZC
CCCCCC
      DO 250 N=1,NOSTX
      NODER=NODR(N)
      LBTR=LBR(N)
      LBXD(N)=LBR(N)
      FLBTW1=LBTR*2+1
      WRITE(8,857) SPEC(N),FLBTW1
  857 FORMAT(1H ,'SPECTRUM     ',3X,2(E12.6,4X),/)
      JBTRTW=JBTWR(N)
      EGES=EGR(N)
      CALL BSAXON
      DO 249 N2=1,N2MAX
      N2M=(N-1)*N2MAX+N2
      USAVEX(N2M)=URSAVE(N2)
      DENSTY(N2)=DENSTY(N2)+((URSAVE(N2))**2)*FLBTW1*SPEC(N)
  249 CONTINUE
  250 CONTINUE
      ENDIF
      F=2.
      DINT=0.
      RRMS=0.
      DO 263 J=1,N2MAX
      RJ=XMES2*FLOAT(J)
      RJSQ=RJ*RJ
      F=6.-F
      RRMS=RRMS+XMES2*RJSQ**2*DENSTY(J)*F/3.
      DINT=DINT+XMES2*RJSQ*DENSTY(J)*F/3.
  263 CONTINUE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     DENSTY IS NORMALIZED TO 1, FOLD IS NORMALIZED TO 3 FOR HE3,T
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC 
      RRMS=SQRT(RRMS)
      WRITE(8,864) DINT,RRMS,G1,FWID
      WRITE(8,865)
      WRITE(8,866) (N2,DENSTY(N2),N2=10,KEX2,10)
  864 FORMAT(1H ,'NORM PROJECTILE,RRMS,G1,FWID= ',4(E10.3,2X))
  865 FORMAT(1H ,'NORMAL DENSITY')
  866 FORMAT(1H ,2X,'N2=',I3,E10.2)
  300 CONTINUE
CCCCCC
CCCCC      SECTION 8. DISTORTED WAVES FOR INITIAL AND FINAL CHANNELS
CCCCCC
      L1=LDWMIR(1)
      L2=LDWMXR(1)
      L3=LDWSTR(1)
      N1=NXMIR(1)
      N2=NXMXR(1)
      X1=XMESR(1)
      WRITE(8,870)
  870 FORMAT(//1H ,'DISTORTED WAVES FOR INITIAL AND FINAL CHANNELS')
      WRITE(8,871)
      WRITE(8,872) VA,ARA,RZRA,WA,AIA,RZIA,RZCA
      WRITE(8,874) WAS,AISA,RZISA
      WRITE(8,873) VB,ARB,RZRB,WB,AIB,RZIB,RZCB
      WRITE(8,874) WBS,AISB,RZISB
  871 FORMAT(/,1H ,'OMP PARAMETERS'/15X,'V',7X,'A',7X,
     1              'R',7X,'W',7X,'AI',6X,'RI',6X,'RC')
  872 FORMAT(1H ,'A-CHANNEL',7F8.3)
  873 FORMAT(1H ,'B-CHANNEL',7F8.3)
  874 FORMAT(34X,3F8.3)
      WRITE(8,875)
      WRITE(8,876) L1,L2,L3,N1,N2,X1
      L1=LDWMIR(2)
      L2=LDWMXR(2)
      L3=LDWSTR(2)
      N1=NXMIR(2)
      N2=NXMXR(2)
      X1=XMESR(2)
      WRITE(8,877) L1,L2,L3,N1,N2,X1
  875 FORMAT(/,1H ,12X,'LDMI LDMX LDST NXMI NXMX XMES')
  876 FORMAT(1H ,'A-CHANNEL',5I5,F6.3)
  877 FORMAT(1H ,'B-CHANNEL',5I5,F6.3) 
CCCCCC
CCCCCC      BIG DO LOOP STARTS BUT NEFMAX=1 IS RECOMMENDED
CCCCCC
      DO 980 NEF=1,NEFMAX                                           
      EET=OMEGR(NEF)                                                    
      TMASA=TMI
      TZA=Z1I
      PMASA=PMI
      PZA=Z2I
      TMASB=TMF
      PMASB=PMF
      TZB=Z1F
      PZB=Z2F
      IF (KTRLD(9).EQ.1) GO TO 301
      TMAST=TMASA+PMASA
      RMASA=TMASA*PMASA/TMAST
      EP=ELI*TMASA/TMAST
      ECM(1)=EP
      WN(1)=WNUNIT*SQRT(RMASA*EP)
      CE(1)=RMASA*TZA*PZA*HBAR*FINE*AMAS/(WN(1)*HBAR*HBAR)
      Q=-EET
      EB=EP+Q
      ECM(2)=EB
      WN(2)=WNUNIT*SQRT(RMASA*EB)
      CE(2)=RMASA*TZB*PZB*HBAR*FINE*AMAS/(WN(2)*HBAR*HBAR)
      GO TO 302
  301 CONTINUE
CCCCCC
CCCCCC      RELATIVISTIC KINEMATICS
CCCCCC
      CHSQ=HBAR*FINE
      FM1=PMI*AMAS
      FM2=TMI*AMAS
      FMT=FM1+FM2
      ELAB=ELI
      T1=SQRT(2.*ELI*FM2+FMT**2)
      W1=(FMT*FM1+FM2*ELI)/T1
      W2=FM2*(ELI+FMT)/T1
      RMASA=W1*W2/(W1+W2)
      FACT=2.*RMASA/(HBAR**2)
      EP=T1-FMT
      RMASA=RMASA/AMAS
      ECM(1)=EP
      FK2=(ELI**2+2.*ELI*FM1)*((FM2/T1)**2)/(HBAR**2)
      FK=SQRT(ABS(FK2))
      WN(1)=FK
      CE(1)=CHSQ*Z1I*Z2I*FACT*0.5/FK
      TREL1=(HBAR*FK)**2/(2.0*RMASA*AMAS)
      Q=-EET
      ELABCI=(TMI/(TMI+PMI))*ELAB
      ELABCE=ELABCI+Q
      ELIF=((TMF+PMF)/TMF)*ELABCE
      FM1=PMF*AMAS
      FM2=TMF*AMAS
      FMT=FM1+FM2
      T1=SQRT(2.*ELIF*FM2+FMT**2)
      W1=(FMT*FM1+FM2*ELIF)/T1
      W2=FM2*(ELIF+FMT)/T1
      RMASB=W1*W2/(W1+W2)
      FACT=2.*RMASB/(HBAR**2)
      EP=T1-FMT
      RMASB=RMASB/AMAS
      ECM(2)=EP
      FK2=(ELIF**2+2.*ELIF*FM1)*((FM2/T1)**2)/(HBAR**2)
      FK=SQRT(ABS(FK2))
      WN(2)=FK
      CE(2)=CHSQ*Z1F*Z2F*FACT*0.5/FK
      TREL2=(HBAR*FK)**2/(2.0*RMASB*AMAS)
  302 CONTINUE
CCCCCC
CCCCCC        CALCULATION OF DOUBLE FOLDING POTENTIAL FOR HE3T
CCCCCC
      DO 310 LXYZ=1,3                                                   
      CROSXYZ(NEF,LXYZ)=0.0                                             
      DPOLXYZ(NEF,LXYZ)=0.0                                             
  310 CONTINUE                                                          
CCCCCC
      IDCHNL=1
      NEX=1
      NPMASA=PMASA+0.01      !PRESENTLY PMASA=UP TO 3.
      XMESAM=XMESR(1)
      NXMXAM=NXMXR(1)
      XMESR(1)=XMESAM/PMASA
      NXMXR(1)=NXMXAM*NPMASA
      INTRAN=NHEMX
      XMESH=XMESHE
      NBSTEP=NBSTPE
      WRITE(8,882) ECM(1),WN(1),CE(1)
  882 FORMAT(//,1H ,'E,WN,ETA FOR INCIDENT A-CHANNEL=',3F8.2,/
     1 3X,'** OUTPUT OF DW : KTLOUT(2)=NXSTEP, ELASITIC SCAT : KTLOUT(5)
     2 '/ 3X,'** OUTPUT OF COULOMB WF : KTLOUT(7)') 
CCCCCC
  400 CALL OPT(IDCHNL,NEX)
CCCCCC
      L2=LDWMIR(1)+1
      L3=LDWMXR(1)+1
      L4=LDWSTR(1)
      IDCHNL=2
      NEX=1
      WRITE(8,884) ECM(2),WN(2),CE(2)
  884 FORMAT(//,1H ,'E,WN,ETA FOR EXIT B-CHANNEL=',5F8.2,/)
CCCCCC
      CALL OPT(IDCHNL,NEX)
CCCCCC
CCCCCC
CCCCCC     SECTION 9. CALCULATE ALPHA COEFFICIENTS OF EQ.(13)
CCCCCC
      CALL AFACAL
CCCCCC
CCCCCC
CCCCCC     SECTION 10. CALCULATION OF DISTORTION FACTORS
CCCCCC
      MP1MAX=MIN(LTR(NOLTR),MXMAX)+1
      NOLA=(LDWMXR(1)-LDWMIR(1))/LDWSTR(1)+1
      NXMXAT=NXMXAM*NOLA*NPMASA
      NX1=0
      DO 496 NX=NPMASA,NXMXAT,NPMASA
      NX1=NX1+1
      URI1=DISWA(NX)
  496 DISWA(NX1)=URI1
      NXMXAT=NXMXAM*NPMASA
      NX1=0
      DO 497 NX=NPMASA,NXMXAT,NPMASA
      NX1=NX1+1
      URI1=VRIT(NX)
  497 VRIT(NX1)=URI1
      XMESR(1)=XMESAM
      NXMXR(1)=NXMXAM
CCCCCC
      CALL XLMCAL
CCCCCC
CCCCCC
CCCCCC     SECTION 11. CALCULATE DIRECT FORM FACTORS
CCCCCC
      INTRAN=NHDMX
      XMESH=XMESHD
      NBSTEP=NBSTPD
      LAM1M=LAMMXD(1)
      LAM2M=LAMMXD(2)
      LAM3M=LAMMXD(3)
      LAMMXD(1)=1
      LAMMXD(2)=2
      LAMMXD(3)=3
      IF (KTRLD(5).EQ.0) THEN
	   IF (KTRLD(8).EQ.1) THEN
	      CALL FFCALDM
	   ELSE
	      CALL FFCALD
	   ENDIF
      ENDIF
CCCCCC
CCCCCC     SECTION 12. CALCULATE EXCHANGE FORM FACTORS
CCCCCC
      LAMMXD(1)=LAM1M
      LAMMXD(2)=LAM2M
      LAMMXD(3)=LAM3M
      INTRAN=NHEMX
      XMESH=XMESHE
      NBSTEP=NBSTPE
      IF (KTRLD(5).EQ.0) THEN
	   IF (KTRLD(8).EQ.1) THEN
	      CALL FFCALEM
	   ELSE
	      CALL FFCALE
	   ENDIF
      ENDIF
CCCCCC
CCCCCC
CCCCCC     SECTION 13. CALCULATE DIFFERENTIAL CROSS SECTIONS
CCCCCC
      CALL CROSS(FAC) 
CCCCCC
CCCCCC
      MJP1MX=MJMAX+1
      N1MAX=NXMXR(4) 
      IF(KTRLD(6).EQ.1) THEN                                            
      WRITE(12,1210) NEF,OMEGR(NEF),FAC         
 1210 FORMAT(I3,2E12.6)                                                 
      DO 520 LXYZ=1,3                                                   
      DO 518 MJP1=1,MJP1MX                                              
      MJP1P=(LXYZ-1)*MJP1MX+MJP1                                        
      DO 516 I=1,NPAIR                                                  
      WRITE(12,1220) (SOURCE(N1,I,MJP1P),N1=1,N1MAX)                    
 1220 FORMAT(6E13.6)                                                    
  516 CONTINUE                                                          
  518 CONTINUE                                                          
  520 CONTINUE                                                          
      ENDIF  
CCCCCC 
CCCCCC      ENERGY BIG DO LOOP ENDS.
CCCCCC                                                           
  980 CONTINUE
CCCCCC
      STOP
      END


      SUBROUTINE DCHECK1
CCCCCC
      PARAMETER(NHS=9,NPS=9,LXA=150,LXB=150,LPH=10,LMM=4,LTL=9,LM1=5)
      PARAMETER(NXA=420,NXB=140,NIN=300,N1X=140)
      PARAMETER(KFM=10,KCC=80,LMJ=10)
CCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCC   NHS =  NOSH	
CCCCCC   NPS =  NOSP
CCCCCC   LXA =  LDWMXR(1)
CCCCCC   LXB =  LDWMXR(2)
CCCCCC   LPH =  NPHMX	
CCCCCC   LTL =  L1R(NLSMAX)+LAMMXD(1)+1  
CCCCCC   LM1 =  MP1MAX  =  MIN(LTR(NOLTR),MXMAX)+1	
CCCCCC   LMM =  MAX(LAMMXD(1),LAMMXD(2),LAMMXD(3))
CCCCCC						
CCCCCC   NXA =  MAX(NXMXR(1),NXMXR(2),NXMXR(3),NXMXR(4))		
CCCCCC   NIN =  MAX(NHDMX,NHEMX)	
CCCCCC				
CCCCCC   KFM =  2*NOLTR*NLSMAX
CCCCCC   N1X =  NXMXR(4)/N1STEP+1
CCCCCC   LMJ =  (MJMAX+1)*3	
CCCCCC   KCC =  GREATER THEN KFM 
CCCCCC				
CCCCCC      KAMAX=(LAMMX+1)*(LAMMX+2)/2      GGRI(KA,NH,NLS)	
CCCCCC      KBMAX=NLSMAX*LAM1MX*(LAM1MX+1)/2 
CCCCCC      KCMAX=KBMAX*LAM2MX*(LAM2MX+1)/2    QC(KC,NH)
CCCCCC      KFMAX=NLSMAX*7		
CCCCCC				
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCC  
      COMMON/DWCC/  LDWMIR(4),LDWMXR(4),WN(4),LDWSTR(4),CE(4),CFUNIR(4),
     1              ECM(4),XMESR(4),NXMXR(4),NXMIR(4),NOEXP,MXSTEP,
     2              TMASA,TMASB,TMASX,TMASY,PMASA,PMASB,PMASX,PMASY,
     3              TZA,TZB,TZX,TZY,
     4              PZA,PZB,PZX,PZY,XBARD(4),XBARID(4),WNXD(20),EXPD(20)
      COMMON/OPTL/  THMIN,THMAX,THIND
      COMMON/POTCC/ VA,VB,VX,VY,WA,WB,WX,WY ,WAS,WBS,WXS,WYS ,ARA,ARB,	   
     1              ARX,ARY,AIA,AIB,AIX,AIY,AISA,AISB,AISX,AISY,RZRA,
     2              RZRB,RZRX,RZRY,RZIA,RZIB,RZIX,RZIY,RZISA,RZISB,
     3              RZISX,RZISY,RZCA,RZCB,RZCX,RZCY,IDA,IDB,IDX,IDY,
     4              VRIT(900),NXMN,NXMX
      COMPLEX       VRIT
      COMMON/ANGLC/ NTHEB,NOTHE,THEB,DTHEB
      COMMON/CNTRL/ KTRLD(9),KTLOUT(24),NERUN,KRTYPE
      COMMON/FFCC/  VRANG(6),VSTR(12,6),VV(NIN,24),XMESH,XMESC,
     1              XMESHD,XMESHE,RHED(NIN),
     2              NBCMI,NBCMX,NONB,NBSTEP,LASTEP,LBSTEP,MAMAX,MXMAX,
     3              MP1MAX,NOLA,NOLB,INTRAN,LMI,LMX,KCETN(2),
     4              NCMAX,NCMIN,LDMAX,JATRTY,NONA,NONAH,NONAR,NASTEP,
     5              NHDMX,NHEMX,NGAUSR,NBSTPD,NBSTPE,N1STEP,JATW,ISATW
      COMMON/CDENS/ RHOD(NXA,NIN,LMM),USAVEX(4*NXA),SPEC(4),
     1              DENSTY(NXA),LAMMXD(3),LBXD(4),NOSTX,NDMY
      COMMON/SPSTAT/EET,SPECTA(LPH),ESP(LPH),ESH(LPH),NSP(LPH),LSP(LPH),
     1              JTWP(LPH),NSH(LPH),LSH(LPH),JTWH(LPH),IPAIR,NOSP,
     2              NOSH,NPST(LPH),NHST(LPH),NPAIRD,L1R(8),ISR(8),
     3              ITR(8),NLSMAX,JT,KPARIT,IST,NOLTR,N1,LTR(8),
     4              ITP(LPH),ITH(LPH),ITZP(LPH),ITZH(LPH)
      COMMON/CTFAC/ TFAC(3,10,10),MJMAX   
      DIMENSION     DOK(20)
CCCCCC	
      DO 10 N=1,20 
        DOK(N)=0
   10 CONTINUE
CCCCCC
      IF (NHS.LT.NOSH) DOK(1)=1
      IF (NPS.LT.NOSP) DOK(2)=1
         LLXA=LDWMXR(1)+1
      IF (LXA.LT.LLXA) DOK(3)=1
         LLXB=LDWMXR(2)+1
      IF (LXB.LT.LLXB) DOK(4)=1
         LLPH=NPAIRD
      IF (LPH.LT.LLPH) DOK(5)=1 
         LLMM=MAX0(LAMMXD(1),LAMMXD(2),LAMMXD(3))
      IF (LMM.LT.LLMM) DOK(6)=1
         LLTL=L1R(NLSMAX)+LAMMXD(1)+1      
      IF (LTL.LT.LLTL) DOK(7)=1
         LTM=LTR(NOLTR)
         LLM1=MIN0(LTM+1,MXMAX+1)
      IF (LM1.LT.LLM1) DOK(8)=1
         NPMAS=PMASA+0.1
         NNXA=NXMXR(1)*NPMAS
      IF (NXA.LT.NNXA) DOK(9)=1
         NNXB=NXMXR(2)
      IF (NXB.LT.NNXB) DOK(10)=1
         NNIN=MAX0(NHDMX,NHEMX)
      IF (NIN.LT.NNIN) DOK(11)=1
         KKFM=2*NOLTR*NLSMAX
      IF (KFM.LT.KKFM) DOK(12)=1
         NN1X=NXMXR(4)/N1STEP+1
      IF (N1X.LT.NN1X) DOK(13)=1
         LLMJ=(MJMAX+1)*3
      IF (LMJ.LT.LLMJ) DOK(14)=1
         KKCC=KFM
      IF (KCC.LT.KKCC) DOK(15)=1
CCCCCC
      IF (DOK(1).NE.0) THEN
      WRITE(8,110) NHS,NOSH
  110 FORMAT(1H ,'NHS IS PRESENTLY ',I4,'.  PLEASE INCREASE NHS TO ',I4) 
      ENDIF 
      IF (DOK(2).NE.0) THEN
      WRITE(8,120) NPS,NOSP
  120 FORMAT(1H ,'NPS IS PRESENTLY ',I4,'.  PLEASE INCREASE NPS TO ',I4) 
      ENDIF 
      IF (DOK(3).NE.0) THEN
      WRITE(8,130) LXA,LLXA
  130 FORMAT(1H ,'LXA IS PRESENTLY ',I4,'.  PLEASE INCREASE LXA TO ',I4) 
      ENDIF 
      IF (DOK(4).NE.0) THEN
      WRITE(8,140) LXB,LLXB
  140 FORMAT(1H ,'LXB IS PRESENTLY ',I4,'.  PLEASE INCREASE LXB TO ',I4) 
      ENDIF 
      IF (DOK(5).NE.0) THEN
      WRITE(8,150) LPH,LLPH
  150 FORMAT(1H ,'LPH IS PRESENTLY ',I4,'.  PLEASE INCREASE LPH TO ',I4) 
      ENDIF 
      IF (DOK(6).NE.0) THEN
      WRITE(8,160) LMM,LLMM
  160 FORMAT(1H ,'LMM IS PRESENTLY ',I4,'.  PLEASE INCREASE LMM TO ',I4) 
      ENDIF 
      IF (DOK(7).NE.0) THEN
      WRITE(8,170) LTL,LLTL
  170 FORMAT(1H ,'LTL IS PRESENTLY ',I4,'.  PLEASE INCREASE LTL TO ',I4) 
      ENDIF 
      IF (DOK(8).NE.0) THEN
      WRITE(8,180) LM1,LLM1
  180 FORMAT(1H ,'LM1 IS PRESENTLY ',I4,'.  PLEASE INCREASE LM1 TO ',I4) 
      ENDIF 
      IF (DOK(9).NE.0) THEN
      WRITE(8,190) NXA,NNXA
  190 FORMAT(1H ,'NXA IS PRESENTLY ',I4,'.  PLEASE INCREASE NXA TO ',I4) 
      ENDIF
      IF (DOK(10).NE.0) THEN
      WRITE(8,200) NXB,NNXB
  200 FORMAT(1H ,'NXB IS PRESENTLY ',I4,'.  PLEASE INCREASE NXB TO ',I4)
      ENDIF  
      IF (DOK(11).NE.0) THEN
      WRITE(8,210) NIN,NNIN
  210 FORMAT(1H ,'NIN IS PRESENTLY ',I4,'.  PLEASE INCREASE NIN TO ',I4) 
      ENDIF 
      IF (DOK(12).NE.0) THEN
      WRITE(8,220) KFM,KKFM
  220 FORMAT(1H ,'KFM IS PRESENTLY ',I4,'.  PLEASE INCREASE KFM TO ',I4) 
      ENDIF 
      IF (DOK(13).NE.0) THEN
      WRITE(8,230) N1X,NN1X
  230 FORMAT(1H ,'N1X IS PRESENTLY ',I4,'.  PLEASE INCREASE N1X TO ',I4) 
      ENDIF
      IF (DOK(14).NE.0) THEN
      WRITE(8,240) LMJ,LLMJ
  240 FORMAT(1H ,'LMJ IS PRESENTLY ',I4,'.  PLEASE INCREASE LMJ TO ',I4) 
      ENDIF
      IF (DOK(15).NE.0) THEN
      WRITE(8,250) KCC,KKCC
  250 FORMAT(1H ,'KCC IS PRESENTLY ',I4,'.  PLEASE INCREASE KCC TO ',I4) 
      ENDIF
CCCCCC			 
      DO 20 N=1,20 
        IF (DOK(N).NE.0) THEN
           STOP
        ENDIF
   20 CONTINUE
CCCCCC
      RETURN
      END


      SUBROUTINE DCHECK2
CCCCCC
      PARAMETER(NHS=9,NPS=9,LXA=150,LXB=150,LPH=10,LMM=4,LTL=9)
      PARAMETER(NXA=420,NXB=140,NIN=300,NOU=300,N1X=140)
      PARAMETER(KFM=10,KAA=40,KBB=30,KCC=80,KGG=125,KJL=600,KTEN=5000)
      PARAMETER(LMJ=10,LRP=11,L1X=10,L2X=60,LM1=5,LM2=30,LAB=2000)
CCCCCC	
      COMMON/CONST /FACLOG(500),PI,HBAR,AMAS,WNUNIT,FINE
      COMMON/DWCC/  LDWMIR(4),LDWMXR(4),WN(4),LDWSTR(4),CE(4),CFUNIR(4),
     1              ECM(4),XMESR(4),NXMXR(4),NXMIR(4),NOEXP,MXSTEP,
     2              TMASA,TMASB,TMASX,TMASY,PMASA,PMASB,PMASX,PMASY,
     3              TZA,TZB,TZX,TZY,
     4              PZA,PZB,PZX,PZY,XBARD(4),XBARID(4),WNXD(20),EXPD(20)
      COMMON/CNTRL/ KTRLD(9),KTLOUT(24),NERUN,KRTYPE
      COMMON/FFCC/  VRANG(6),VSTR(12,6),VV(300,24),XMESH,XMESC,
     1              XMESHD,XMESHE,RHED(300),
     2              NBCMI,NBCMX,NONB,NBSTEP,LASTEP,LBSTEP,MAMAX,MXMAX,
     3              MP1MAX,NOLA,NOLB,INTRAN,LMI,LMX,KCETN(2),
     4              NCMAX,NCMIN,LDMAX,JATRTY,NONA,NONAH,NONAR,NASTEP,
     5              NHDMX,NHEMX,NGAUSR,NBSTPD,NBSTPE,N1STEP,JATW,ISATW
      COMMON/CNORE/ FACNR,LRP1MX
      COMMON/CDENS/ RHOE(NXA,NIN,LMM),USAVEX(4*NXA),SPEC(4),
     1              DENSTY(NXA),LAMMXD(3),LBXD(4),NOSTX,NDMY
      COMMON/SPSTAT/EET,SPECTA(LPH),ESP(LPH),ESH(LPH),NSP(LPH),LSP(LPH),
     1              JTWP(LPH),NSH(LPH),LSH(LPH),JTWH(LPH),IPAIR,NOSP,
     2              NOSH,NPST(LPH),NHST(LPH),NPAIRD,L1R(8),ISR(8),
     3              ITR(8),NLSMAX,JT,KPARIT,IST,NOLTR,N1,LTR(8),
     4              ITP(LPH),ITH(LPH),ITZP(LPH),ITZH(LPH)
      COMMON/CCKF/  L1KFD(KFM),ISKFD(KFM),KKFD(KFM),LTKFD(KFM),KFMAX,
     1              ITKFD(KFM),NLSKFD(KFM),NLTKFD(KFM),LTMIM,LTMAX
      COMMON/CBST/  USAVP(NPS*NXA),USAVH(NHS*NXA),CY(LXA)
      COMPLEX       CY
      COMMON/CXLM/  XLMRI(LTL,LM1,NXA),LLP1MX
      COMPLEX       XLMRI
      COMMON/OVDE/  OVDD(20,20),OVED(20,20),OVDDP(10,10),OVDEP(10,10)   
      COMPLEX       OVDD,OVED,OVDDP,OVDEP                               
      COMMON/SPECFC/ALPHA(30,6)
      COMMON/CGFAC /KAMAX,KGMAX,KCMAX,JLSMX,KBBSD(10),
     1              KBC(KCC),LAM2PC(KCC),LPP1C(KCC),LLP1D(KCC),
     2              NINTC(KCC),KAD(KGG),KCD(KGG),NLSD(KGG),LAMD(KAA),
     3              CLEBQ(KCC,5),CLEBF(KAA,5,5),COEF(KGG),CCDD(KJL)
      DIMENSION     DOK(20),JLSM(2)
CCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCC 
CCCCCC      RHOE(N,NH,LAMP1)      IS USED IN FFCALE, TRECAL AND PDENST
CCCCCC      TRHO(N1 OR NB,NH,KB)  IS USED IN FFCALE AND TRECAL
CCCCCC      GWT (N1 OR NB,NH,NWT) IS USED IN FFCALE AND TRECAL
CCCCCC      GGRI(KA,NH,NLS)       IS USED IN FFCALE ONLY
CCCCCC      QA(KC,NH)             IS USED IN FFCALE ONLY
CCCCCC         NWTMAX=(LAM1MX+1)*(LAM1MX+2)/2
CCCCCC         KBMAX=NLSMAX*LAM1MX*(LAM1MX+2)/2
CCCCCC         KCMAX=KBMAX*NOLTR*LAM2MX*(LAM2MX+1)/2    QC  (KC,NH)
CCCCCC         KAMAX=LAMMX*(LAMMX+1)/2                  GGRI(KA,NH)
CCCCCC         KGMAX=KCMAX*LAMP1X
CCCCCC            KB=(KC,NLS,LAM1,LPP)
CCCCCC            KC=(LT,KB,LAM2,LL)
CCCCCC            KA=(LL,LAM)
CCCCCC            KG=(KC,LAM)
CCCCCC            NLS=(LT1,L1,S)
CCCCCC      FFCAB(K,M1,NH)        IS USED IN FFCALE ONLY            
CCCCCC            KMAX=NBLOCK=NOLA*K MAX
CCCCCC
CCCCCC      PRESENT PROGRAM ASSUMES
CCCCCC           NLSMAX.LE.5
CCCCCC           LAM1MX.LE.4
CCCCCC           KBMAX.LE.5
CCCCCC           KFMAX.LE.80
CCCCCC           NBLOCK.LE.250
CCCCCC
CCCCCC      GIVE MAXIMUM FOR SOME DIMENSIONAL QUANTITIES
CCCCCC
CCCCCC      DEFINE BASIC VARIABLES AND CONSTANTS
CCCCCC
CCCCCC	
      DO 10 N=1,20 
	   DOK(N)=0
   10 CONTINUE
      LAM1MX=LAMMXD(1)+1
      LAM2MX=LAMMXD(2)+1
      LAMP1X=LAMMXD(3)+1
      KB=0
      DO 80 NLS=1,NLSMAX
      IS=ISR(NLS)
      L1=L1R(NLS)
      DO 78 LAM1P1=1,LAM1MX
      LAM1=LAM1P1-1
      LPP=L1-LAM1-1
      NLPPX=2*LAM1+1
      DO 76 NLPP=1,NLPPX
      LPP=LPP+1
      IF(MOD(LAM1+LPP,2).NE.KPARIT) GO TO 76                            
      IF(LPP.GT.(L1+LAM1))          GO TO 76                            
      IF(LPP.LT.IABS(L1-LAM1))      GO TO 76                            
      IF(LPP.LT.0) GO TO 76
      KB=KB+1
   76 CONTINUE
   78 CONTINUE
   80 CONTINUE
      KBMAX=KB
      KBMAXT=NLSMAX*((LAMMXD(1)+2)**2)/2
CCCCCC
      KG=0
      KC=0
      KAMAX=1
      DO 105 NLS=1,NLSMAX
      L1=L1R(NLS)
      IS=ISR(NLS)
      LLL1=0
      DO 100 LAM1P1=1,LAM1MX
      LLL1=LLL1+1
      LAM1=LAM1P1-1
      LPP=L1-LAM1-1
      NLPPMX=2*LAM1+1
      DO 98 NLPP=1,NLPPMX
      LPP=LPP+1
      IF(LPP.LT.0)    GO TO 98
      DO 96 LAM2P1=1,LAM2MX
      LAM2=LAM2P1-1
      LL=LPP-LAM2-2
      DO 94  NLL=1,LAM2P1
      LL=LL+2
      IF(LL.LT.0)   GO TO 94
      IF(LL+1.GT.LLP1MX) GO TO 94               
      KC=KC+1
      DO 86  LAMP1=1,LAMP1X
      LAM=LAMP1-1
      KAT=(LAMP1*LAM)/2+(LL+LAM-L1)/2+1
      IF(LAM.GT.(LL+L1).OR.LAM.LT.IABS(LL-L1))    GO TO 86
      IF(MOD(LL+LAM+KPARIT,2).NE.0)               GO TO 86
      KA=KAT
      IF(KA.GT.KAMAX) KAMAX=KA
      KG=KG+1
      LAMD(KA)=LAM
   86 CONTINUE
   94 CONTINUE
   96 CONTINUE
   98 CONTINUE
  100 CONTINUE
  105 CONTINUE
      KCMAX=KC
      KGMAX=KG
 	KCMAXT=KBMAX*NOLTR*(LAMMXD(2)+2)**2/2
	KGMAXT=KCMAX*(LAMMXD(3)+1)
	KAMAXT=(LAMMXD(3)+2)**2
	KKAA=MAX0(KAMAX,KAMAXT)
	KKBB=MAX0(KBMAX,KBMAXT) 
	KKCC=MAX0(KCMAX,KCMAXT) 
	KKGG=MAX0(KGMAX,KGMAXT) 
CCCCC
      DO 400 KCT=1,2
      JLS=0
      NLTM1MX=NOLTR*MP1MAX
      DO 300 NLTM1=1,NLTM1MX
      NLT=(NLTM1-1)/MP1MAX+1
      M1P1=NLTM1-(NLT-1)*MP1MAX
      M1=M1P1-1
      LT=LTR(NLT)
      DO 244 NLS=1,NLSMAX
      L1=L1R(NLS)
      L1TW=L1*2
      DO 242 KA=1,KAMAX
      LAM=LAMD(KA)
      LL=KA*2-(LAM+2)*LAM+L1-2
      KT=(KCT-1)*2
      DO 230 LRP1=1,LRP1MX
      LR=LRP1-1
      IF(LR.GT.KT+LAM)       GO TO 230
      IF(LR.LT.IABS(KT-LAM)) GO TO 230
      IF(MOD(KT+LAM+LR,2).NE.0) GO TO 230
      JLS=JLS+1
  230 CONTINUE
  242 CONTINUE
  244 CONTINUE
  300 CONTINUE
      JLSM(KCT)=JLS
  400 CONTINUE
      KKJL=MAX0(JLSM(1),JLSM(2))
CCCCCC
      LAP1MI=LDWMIR(1)+1
      LAP1MX=LDWMXR(1)+1
      LBP1MI=LDWMIR(2)+1
      LBP1MX=LDWMXR(2)+1
      LASTEP=LDWSTR(1)
      IF(LASTEP.EQ.0) LASTEP=1
      NOLA=(LAP1MX-LAP1MI)/LASTEP+1
      LAP1MX=LAP1MI+(NOLA-1)*LASTEP
      JLS=0
      KJLS=0
      DO 500 LAP1=LAP1MI,LAP1MX,LASTEP
      LA=LAP1-1
      LATW=LA*2
      DO 490 NLT=1,NOLTR
      LT=LTR(NLT)
      LTTW=LT*2
      LBM=0
      DO 480 LBP1=LBP1MI,LBP1MX
      LB=LBP1-1
      IF(LB.LT.IABS(LA-LT))  GO TO 480
      IF(LB.GT.LA+LT      )  GO TO 480
      MM1=1-2*MOD(LA+LB,2)
      MM2=1-2*MOD(KPARIT,2)
      IF(MM1.NE. MM2) GO TO 480
      JLS=JLS+1
      JLSP=0
      DO 470 LAPP1=LAP1MI,LAP1MX,LASTEP
      LAP=LAPP1-1
      DO 468 NLS=1,NLSMAX
      L1=L1R(NLS)
      DO 465 LBPP1=LBP1MI,LBP1MX
      LBP=LBPP1-1
      IF(LBP.LT.IABS(LAP-L1)) GO TO 465
      IF(LBP.GT.LAP+L1      ) GO TO 465
      JLSP=JLSP+1
      DO 460 LAMAP1=1,3
      LAMA=LAMAP1-1
      LAMB=2-LAMA
      IF(LAP.GT.(LA+LAMA).OR.LAP.LT.IABS(LA-LAMA)) GO TO 460
      IF(LBP.GT.(LB+LAMB).OR.LBP.LT.IABS(LB-LAMB)) GO TO 460
      IF(MOD(LA+LAMA+LAP,2).NE.0)                  GO TO 460
      IF(MOD(LB+LAMB+LBP,2).NE.0)                  GO TO 460
      KJLS=KJLS+1
      NLSK=NLSMAX+NLS
  460 CONTINUE
  465 CONTINUE
  468 CONTINUE
  470 CONTINUE
  480 CONTINUE
  490 CONTINUE
  500 CONTINUE
      KLALBMX=JLS
      KTENMX=KJLS
CCCCCC
      DO 700 KCT=1,2
      JLS=0
      DO 600 LAP1=LAP1MI,LAP1MX,LASTEP
      LA=LAP1-1
      DO 550 NLS=1,NLSMAX
      L1=L1R(NLS)
      DO 540 LBP1=LBP1MI,LBP1MX
      LB=LBP1-1
      IF(LB.LT.IABS(LA-L1)) GO TO 540
      IF(LB.GT.LA+L1     )  GO TO 540
      MM1=1-2*MOD(LA+LB,2)
      MM2=1-2*MOD(KPARIT,2)
      IF(KCT.EQ.1.AND.MM1.NE.MM2) GO TO 540
      JLS=JLS+1
  540  CONTINUE
  550 CONTINUE
  600 CONTINUE
      IF (KCT.EQ.1) JLSMXKCT1=JLS
      IF (KCT.EQ.2) JLSMXKCT2=JLS
 700  CONTINUE
      KJLSMX=MAX(JLSMXKCT1,JLSMXKCT2)
CCCCCC		 
      IF (KAA.LT.KKAA) DOK(1)=1
      IF (KBB.LT.KKBB) DOK(2)=1
      IF (KCC.LT.KKCC) DOK(3)=1
      IF (KGG.LT.KKGG) DOK(4)=1
      IF (KJL.LT.KKJL) DOK(5)=1 
         LLRP=LRP1MX+1
      IF (LRP.LT.LLRP) DOK(6)=1
         LL1X=NOLTR*MP1MAX
      IF (L1X.LT.LL1X) DOK(7)=1
         LL2X=NOLTR*MP1MAX*NPAIRD
      IF (L2X.LT.LL2X) DOK(8)=1
         NNOU=NHEMX
      IF (NOU.LT.NNOU) DOK(9)=1
         LLM2=(LAM1MX+1)*(LAM1MX+2)/2
      IF (LM2.LT.LLM2) DOK(10)=1
      IF (LAB.LT.KLALBMX) DOK(11)=1
      IF (KTEN.LT.KTENMX) DOK(12)=1
      IF (KJL.LT.KJLSMX) DOK(13)=1
CCCCCC
      IF (DOK(1).NE.0) THEN
      WRITE(8,110) KAA,KKAA
  110 FORMAT(1H ,'KAA IS PRESENTLY ',I4,'.  PLEASE INCREASE KAA TO ',I4) 
      ENDIF 
      IF (DOK(2).NE.0) THEN
      WRITE(8,120) KBB,KKBB
  120 FORMAT(1H ,'KBB IS PRESENTLY ',I4,'.  PLEASE INCREASE KBB TO ',I4) 
      ENDIF 
      IF (DOK(3).NE.0) THEN
      WRITE(8,130) KCC,KKCC
  130 FORMAT(1H ,'KCC IS PRESENTLY ',I4,'.  PLEASE INCREASE KCC TO ',I4) 
      ENDIF 
      IF (DOK(4).NE.0) THEN
      WRITE(8,140) KGG,KKGG
  140 FORMAT(1H ,'KGG IS PRESENTLY ',I4,'.  PLEASE INCREASE KGG TO ',I4) 
      ENDIF 
      IF (DOK(5).NE.0) THEN
      WRITE(8,150) KJL,KKJL
  150 FORMAT(1H ,'KJL IS PRESENTLY ',I4,'.  PLEASE INCREASE KJL TO ',I4) 
      ENDIF 
      IF (DOK(6).NE.0) THEN
      WRITE(8,160) LRP,LLRP
  160 FORMAT(1H ,'LRP IS PRESENTLY ',I4,'.  PLEASE INCREASE LRP TO ',I4) 
      ENDIF 
      IF (DOK(7).NE.0) THEN
      WRITE(8,170) L1X,LL1X
  170 FORMAT(1H ,'L1X IS PRESENTLY ',I4,'.  PLEASE INCREASE L1X TO ',I4) 
      ENDIF 
      IF (DOK(8).NE.0) THEN
      WRITE(8,170) L2X,LL2X
  180 FORMAT(1H ,'L2X IS PRESENTLY ',I4,'.  PLEASE INCREASE L2X TO ',I4) 
      ENDIF 
      IF (DOK(9).NE.0) THEN
      WRITE(8,190) NOU,NNOU
  190 FORMAT(1H ,'NOU IS PRESENTLY ',I4,'.  PLEASE INCREASE NOU TO ',I4) 
      ENDIF 
      IF (DOK(10).NE.0) THEN
      WRITE(8,200) LM2,LLM2
  200 FORMAT(1H ,'LM2 IS PRESENTLY ',I4,'.  PLEASE INCREASE LM2 TO ',I4) 
      ENDIF		 
      IF (DOK(11).NE.0) THEN
      WRITE(8,201) LAB,KLALBMX
  201 FORMAT(1H ,'LAB IS PRESENTLY ',I4,'.  PLEASE INCREASE LAB TO ',I7) 
      ENDIF		 
      IF (DOK(12).NE.0) THEN
      WRITE(8,202) KTEN,KTENMX
  202 FORMAT(1H ,'KTEN IS PRESENTLY ',I4,'.  PLEASE INCREASE KTENMX TO '
     1      ,I7) 
      ENDIF		 
      IF (DOK(13).NE.0) THEN
      WRITE(8,203) KJL,KJLSMX
 203  FORMAT(1H ,'KJL IS PRESENTLY ',I4,'.  PLEASE INCREASE KTENMX TO '
     1      ,I7) 
      ENDIF		 
CCCCCC
      WRITE(8,210) KLALBMX, KJLSMX, KTENMX
 210  FORMAT(1H ,5X,'DCHECK SAYS LABT,KJL,KTEN=',3I7)
CCCCCC
      DO 20 N=1,20 
        IF (DOK(N).NE.0) THEN
        STOP
        ENDIF
   20 CONTINUE
CCCCCC
      RETURN
      END
